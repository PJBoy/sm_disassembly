
; Cinematics/Cutscenes, credits

org $8B8000


;;; $8000: Set up PPU for title sequence ;;;
Setup_PPU_TitleSequence:
; No idea why pause menu variables are being cleared here
    PHP                                                                  ;8B8000;
    SEP #$30                                                             ;8B8001;
    LDA.B #$80                                                           ;8B8003;
    STA.W $2100                                                          ;8B8005;
    STA.B DP_Brightness                                                  ;8B8008;
    LDA.B #$03                                                           ;8B800A;
    STA.W $2101                                                          ;8B800C;
    STA.B DP_SpriteSizeAddr                                              ;8B800F;
    LDA.B #$07                                                           ;8B8011;
    STA.W $2105                                                          ;8B8013;
    STA.B DP_BGModeSize                                                  ;8B8016;
    LDA.B #$80                                                           ;8B8018;
    STA.W $211A                                                          ;8B801A;
    STA.B DP_Mode7Settings                                               ;8B801D;
    LDA.B #$00                                                           ;8B801F;
    STA.B DP_BG1TilemapAddrSize                                          ;8B8021;
    STA.W $2107                                                          ;8B8023;
    STZ.B DP_BG2TilemapAddrSize                                          ;8B8026;
    STZ.W $2108                                                          ;8B8028;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B802B;
    STZ.W $2109                                                          ;8B802D;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B8030;
    STZ.W $210A                                                          ;8B8032;
    STZ.B DP_BGTilesAddr                                                 ;8B8035;
    STZ.W $210B                                                          ;8B8037;
    STZ.B DP_BGTilesAddr+1                                               ;8B803A;
    STZ.W $210C                                                          ;8B803C;
    LDA.B #$10                                                           ;8B803F;
    STA.W $212C                                                          ;8B8041;
    STA.B DP_MainScreenLayers                                            ;8B8044;
    STZ.W $212D                                                          ;8B8046;
    STZ.B DP_SubScreenLayers                                             ;8B8049;
    STZ.W $212E                                                          ;8B804B;
    STZ.B DP_WindowAreaMainScreen                                        ;8B804E;
    STZ.W $2115                                                          ;8B8050;
    STZ.W $2130                                                          ;8B8053;
    STZ.B DP_NextGameplayColorMathA                                      ;8B8056;
    STZ.W $2131                                                          ;8B8058;
    STZ.B DP_NextGameplayColorMathB                                      ;8B805B;
    LDA.B #$E0                                                           ;8B805D;
    STA.W $2132                                                          ;8B805F;
    LDA.B #$00                                                           ;8B8062;
    STA.W $2133                                                          ;8B8064;
    STA.B DP_DisplayResolution                                           ;8B8067;
    REP #$30                                                             ;8B8069;
    LDA.W #$0000                                                         ;8B806B;
    LDX.W #$3000                                                         ;8B806E;
    LDY.W #$07FE                                                         ;8B8071;
    JSL.L WriteYBytesOfATo_7E0000_X_16bit                                ;8B8074;
    STZ.W OAMStack                                                       ;8B8078;
    STZ.W MenuOptionIndex                                                ;8B807B;
    STZ.W ScreenFadeDelay                                                ;8B807E;
    STZ.W ScreenFadeCounter                                              ;8B8081;
    STZ.W PauseMenu_ButtonPressedHighlightTimer                          ;8B8084;
    STZ.W PauseMenu_HighlightAnimationTimer                              ;8B8087;
    STZ.W PauseMenu_ItemSelectorAnimationTimer                           ;8B808A;
    STZ.W PauseMenu_ReserveTankAnimationTimer                            ;8B808D;
    STZ.W PauseMenu_UnusedAnimationTimer0731                             ;8B8090;
    STZ.W PauseMenu_UnusedAnimationTimer073D                             ;8B8093;
    STZ.W PauseMenu_HighlightAnimationFrame                              ;8B8096;
    STZ.W PauseMenu_ItemSelectorAnimationFrame                           ;8B8099;
    STZ.W PauseMenu_ReserveTankAnimationFrame                            ;8B809C;
    STZ.W PauseMenu_UnusedAnimationFrame                                 ;8B809F;
    STZ.W PauseMenu_ShoulderButtonPressedHighlight                       ;8B80A2;
    STZ.W PauseMenu_ButtonLabelMode                                      ;8B80A5;
    STZ.W PauseMenu_EquipmentScreenCategoryIndex                         ;8B80A8;
    STZ.W PauseMenu_ReserveTankSoundDelayCounter                         ;8B80AB;
    STZ.W PauseMenu_UnusedAnimationMode                                  ;8B80AE;
    STZ.W ReserveEnergy                                                  ;8B80B1;
    STZ.W ReserveMissiles                                                ;8B80B4;
    STZ.W Mode7TransformationAngle                                       ;8B80B7;
    LDA.W #$0100                                                         ;8B80BA;
    STA.W Mode7TransformationZoomLevel                                   ;8B80BD;
    STZ.W CinematicBG1_XSubPosition                                      ;8B80C0;
    STZ.W CinematicBG1_XPosition                                         ;8B80C3;
    STZ.W CinematicBG1_YSubPosition                                      ;8B80C6;
    STZ.W CinematicBG1_YPosition                                         ;8B80C9;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B80CC;
    STZ.W CinematicBG1_XSpeed                                            ;8B80CF;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B80D2;
    STZ.W CinematicBG1_YSpeed                                            ;8B80D5;
    PLP                                                                  ;8B80D8;
    RTS                                                                  ;8B80D9;


;;; $80DA: Set up PPU for intro ;;;
Setup_PPU_Intro:
    PHP                                                                  ;8B80DA;
    SEP #$30                                                             ;8B80DB;
    LDA.B #$80                                                           ;8B80DD;
    STA.W $2100                                                          ;8B80DF;
    STA.B DP_Brightness                                                  ;8B80E2;
    LDA.B #$03                                                           ;8B80E4;
    STA.W $2101                                                          ;8B80E6;
    STA.B DP_SpriteSizeAddr                                              ;8B80E9;
    LDA.B #$09                                                           ;8B80EB;
    STA.W $2105                                                          ;8B80ED;
    STA.B DP_BGModeSize                                                  ;8B80F0;
    LDA.B #$00                                                           ;8B80F2;
    STA.W $211A                                                          ;8B80F4;
    STA.B DP_Mode7Settings                                               ;8B80F7;
    LDA.B #$50                                                           ;8B80F9;
    STA.B DP_BG1TilemapAddrSize                                          ;8B80FB;
    STA.W $2107                                                          ;8B80FD;
    LDA.B #$48                                                           ;8B8100;
    STA.B DP_BG2TilemapAddrSize                                          ;8B8102;
    STA.W $2108                                                          ;8B8104;
    LDA.B #$4C                                                           ;8B8107;
    STA.B DP_BG3TilemapAddrSize                                          ;8B8109;
    STA.W $2109                                                          ;8B810B;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B810E;
    STZ.W $210A                                                          ;8B8110;
    STZ.B DP_BGTilesAddr                                                 ;8B8113;
    STZ.W $210B                                                          ;8B8115;
    LDA.B #$04                                                           ;8B8118;
    STA.B DP_BGTilesAddr+1                                               ;8B811A;
    STA.W $210C                                                          ;8B811C;
    LDA.B #$04                                                           ;8B811F;
    STA.W $212C                                                          ;8B8121;
    STA.B DP_MainScreenLayers                                            ;8B8124;
    STZ.W $212D                                                          ;8B8126;
    STZ.B DP_SubScreenLayers                                             ;8B8129;
    STZ.W $212E                                                          ;8B812B;
    STZ.B DP_WindowAreaMainScreen                                        ;8B812E;
    STZ.W $2115                                                          ;8B8130;
    STZ.W $2130                                                          ;8B8133;
    STZ.B DP_NextGameplayColorMathA                                      ;8B8136;
    STZ.W $2131                                                          ;8B8138;
    STZ.B DP_NextGameplayColorMathB                                      ;8B813B;
    LDA.B #$E0                                                           ;8B813D;
    STA.W $2132                                                          ;8B813F;
    LDA.B #$00                                                           ;8B8142;
    STA.W $2133                                                          ;8B8144;
    STA.B DP_DisplayResolution                                           ;8B8147;
    STZ.B DP_ColorMathA                                                  ;8B8149;
    STZ.B DP_ColorMathB                                                  ;8B814B;
    LDA.B #$20                                                           ;8B814D;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B814F;
    LDA.B #$40                                                           ;8B8151;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B8153;
    LDA.B #$80                                                           ;8B8155;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B8157;
    STZ.B DP_Mosaic                                                      ;8B8159;
    REP #$30                                                             ;8B815B;
    LDA.W #$002F                                                         ;8B815D;
    LDX.W #$3000                                                         ;8B8160;
    LDY.W #$07FE                                                         ;8B8163;
    JSL.L WriteYBytesOfATo_7E0000_X_16bit                                ;8B8166;
    STZ.W OAMStack                                                       ;8B816A;
    STZ.W Mode7TransformationAngle                                       ;8B816D;
    LDA.W #$0100                                                         ;8B8170;
    STA.W Mode7TransformationZoomLevel                                   ;8B8173;
    STZ.W CinematicBG1_XSubPosition                                      ;8B8176;
    STZ.W CinematicBG1_XPosition                                         ;8B8179;
    STZ.W CinematicBG1_YSubPosition                                      ;8B817C;
    STZ.W CinematicBG1_YPosition                                         ;8B817F;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B8182;
    STZ.W CinematicBG1_XSpeed                                            ;8B8185;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B8188;
    STZ.W CinematicBG1_YSpeed                                            ;8B818B;
    STZ.W LayerBlending_DefaultConfig                                    ;8B818E;
    STZ.B DP_BG2XScroll                                                  ;8B8191;
    STZ.B DP_BG2YScroll                                                  ;8B8193;
    STZ.B DP_BG3XScroll                                                  ;8B8195;
    STZ.B DP_BG3YScroll                                                  ;8B8197;
    PLP                                                                  ;8B8199;
    RTS                                                                  ;8B819A;


;;; $819B: Set up PPU for Ceres cutscene ;;;
Setup_PPU_CeresCutscene:
    PHP                                                                  ;8B819B;
    SEP #$30                                                             ;8B819C;
    LDA.B #$80                                                           ;8B819E;
    STA.W $2100                                                          ;8B81A0;
    STA.B DP_Brightness                                                  ;8B81A3;
    LDA.B #$03                                                           ;8B81A5;
    STA.W $2101                                                          ;8B81A7;
    STA.B DP_SpriteSizeAddr                                              ;8B81AA;
    LDA.B #$07                                                           ;8B81AC;
    STA.W $2105                                                          ;8B81AE;
    STA.B DP_BGModeSize                                                  ;8B81B1;
    LDA.B #$80                                                           ;8B81B3;
    STA.W $211A                                                          ;8B81B5;
    STA.B DP_Mode7Settings                                               ;8B81B8;
    LDA.B #$00                                                           ;8B81BA;
    STA.B DP_BG1TilemapAddrSize                                          ;8B81BC;
    STA.W $2107                                                          ;8B81BE;
    STZ.B DP_BG2TilemapAddrSize                                          ;8B81C1;
    STZ.W $2108                                                          ;8B81C3;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B81C6;
    STZ.W $2109                                                          ;8B81C8;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B81CB;
    STZ.W $210A                                                          ;8B81CD;
    STZ.B DP_BGTilesAddr                                                 ;8B81D0;
    STZ.W $210B                                                          ;8B81D2;
    STZ.B DP_BGTilesAddr+1                                               ;8B81D5;
    STZ.W $210C                                                          ;8B81D7;
    LDA.B #$11                                                           ;8B81DA;
    STA.W $212C                                                          ;8B81DC;
    STA.B DP_MainScreenLayers                                            ;8B81DF;
    LDA.B #$00                                                           ;8B81E1;
    STA.W $212D                                                          ;8B81E3;
    STA.B DP_SubScreenLayers                                             ;8B81E6;
    STZ.W $212E                                                          ;8B81E8;
    STZ.B DP_WindowAreaMainScreen                                        ;8B81EB;
    STZ.W $2115                                                          ;8B81ED;
    STZ.W $2130                                                          ;8B81F0;
    STZ.B DP_NextGameplayColorMathA                                      ;8B81F3;
    STZ.W $2131                                                          ;8B81F5;
    STZ.B DP_NextGameplayColorMathB                                      ;8B81F8;
    LDA.B #$E0                                                           ;8B81FA;
    STA.W $2132                                                          ;8B81FC;
    STZ.B DP_ColorMathA                                                  ;8B81FF;
    STZ.B DP_ColorMathB                                                  ;8B8201;
    LDA.B #$20                                                           ;8B8203;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B8205;
    LDA.B #$40                                                           ;8B8207;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B8209;
    LDA.B #$80                                                           ;8B820B;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B820D;
    STZ.B DP_Mosaic                                                      ;8B820F;
    REP #$30                                                             ;8B8211;
    STZ.W CinematicBG1_XSubPosition                                      ;8B8213;
    STZ.W CinematicBG1_XPosition                                         ;8B8216;
    STZ.W CinematicBG1_YSubPosition                                      ;8B8219;
    STZ.W CinematicBG1_YPosition                                         ;8B821C;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B821F;
    STZ.W CinematicBG1_XSpeed                                            ;8B8222;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B8225;
    STZ.W CinematicBG1_YSpeed                                            ;8B8228;
    STZ.W LayerBlending_DefaultConfig                                    ;8B822B;
    PLP                                                                  ;8B822E;
    RTS                                                                  ;8B822F;


;;; $8230: Set up PPU for Samus goes to Zebes cutscene ;;;
Setup_PPU_SamusGoesToZebesCutscene:
    PHP                                                                  ;8B8230;
    SEP #$30                                                             ;8B8231;
    LDA.B #$80                                                           ;8B8233;
    STA.W $2100                                                          ;8B8235;
    STA.B DP_Brightness                                                  ;8B8238;
    LDA.B #$03                                                           ;8B823A;
    STA.W $2101                                                          ;8B823C;
    STA.B DP_SpriteSizeAddr                                              ;8B823F;
    LDA.B #$01                                                           ;8B8241;
    STA.W $2105                                                          ;8B8243;
    STA.B DP_BGModeSize                                                  ;8B8246;
    LDA.B #$00                                                           ;8B8248;
    STA.W $211A                                                          ;8B824A;
    STA.B DP_Mode7Settings                                               ;8B824D;
    LDA.B #$5C                                                           ;8B824F;
    STA.B DP_BG1TilemapAddrSize                                          ;8B8251;
    STA.W $2107                                                          ;8B8253;
    STZ.B DP_BG2TilemapAddrSize                                          ;8B8256;
    STZ.W $2108                                                          ;8B8258;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B825B;
    STZ.W $2109                                                          ;8B825D;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B8260;
    STZ.W $210A                                                          ;8B8262;
    LDA.B #$06                                                           ;8B8265;
    STA.B DP_BGTilesAddr                                                 ;8B8267;
    STA.W $210B                                                          ;8B8269;
    STZ.B DP_BGTilesAddr+1                                               ;8B826C;
    STZ.W $210C                                                          ;8B826E;
    LDA.B #$11                                                           ;8B8271;
    STA.W $212C                                                          ;8B8273;
    STA.B DP_MainScreenLayers                                            ;8B8276;
    STZ.W $212D                                                          ;8B8278;
    STZ.B DP_SubScreenLayers                                             ;8B827B;
    STZ.B DP_WindowMaskBG12                                              ;8B827D;
    STZ.B DP_WindowMaskBG34                                              ;8B827F;
    STZ.B DP_WindowMaskSprite                                            ;8B8281;
    STZ.B DP_WindowAreaMainScreen                                        ;8B8283;
    STZ.B DP_WindowAreaSubScreen                                         ;8B8285;
    STZ.B DP_ColorMathA                                                  ;8B8287;
    STZ.B DP_ColorMathB                                                  ;8B8289;
    REP #$30                                                             ;8B828B;
    STZ.B DP_BG1XScroll                                                  ;8B828D;
    STZ.B DP_BG1YScroll                                                  ;8B828F;
    PLP                                                                  ;8B8291;
    RTS                                                                  ;8B8292;


;;; $8293: Set up PPU for Zebes destruction ;;;
Setup_PPU_ZebesDestruction:
    PHP                                                                  ;8B8293;
    SEP #$30                                                             ;8B8294;
    LDA.B #$80                                                           ;8B8296;
    STA.W $2100                                                          ;8B8298;
    STA.B DP_Brightness                                                  ;8B829B;
    LDA.B #$A3                                                           ;8B829D;
    STA.W $2101                                                          ;8B829F;
    STA.B DP_SpriteSizeAddr                                              ;8B82A2;
    LDA.B #$07                                                           ;8B82A4;
    STA.W $2105                                                          ;8B82A6;
    STA.B DP_BGModeSize                                                  ;8B82A9;
    LDA.B #$00                                                           ;8B82AB;
    STA.W $211A                                                          ;8B82AD;
    STA.B DP_Mode7Settings                                               ;8B82B0;
    LDA.B #$00                                                           ;8B82B2;
    STA.B DP_BG1TilemapAddrSize                                          ;8B82B4;
    STA.W $2107                                                          ;8B82B6;
    STZ.B DP_BG2TilemapAddrSize                                          ;8B82B9;
    STZ.W $2108                                                          ;8B82BB;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B82BE;
    STZ.W $2109                                                          ;8B82C0;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B82C3;
    STZ.W $210A                                                          ;8B82C5;
    STZ.B DP_BGTilesAddr                                                 ;8B82C8;
    STZ.W $210B                                                          ;8B82CA;
    STZ.B DP_BGTilesAddr+1                                               ;8B82CD;
    STZ.W $210C                                                          ;8B82CF;
    LDA.B #$11                                                           ;8B82D2;
    STA.W $212C                                                          ;8B82D4;
    STA.B DP_MainScreenLayers                                            ;8B82D7;
    STZ.W $212D                                                          ;8B82D9;
    STZ.B DP_SubScreenLayers                                             ;8B82DC;
    STZ.W $212E                                                          ;8B82DE;
    STZ.B DP_WindowAreaMainScreen                                        ;8B82E1;
    STZ.W $2115                                                          ;8B82E3;
    STZ.W $2130                                                          ;8B82E6;
    STZ.B DP_NextGameplayColorMathA                                      ;8B82E9;
    STZ.W $2131                                                          ;8B82EB;
    STZ.B DP_NextGameplayColorMathB                                      ;8B82EE;
    STZ.B DP_ColorMathA                                                  ;8B82F0;
    STZ.B DP_ColorMathB                                                  ;8B82F2;
    LDA.B #$E0                                                           ;8B82F4;
    STA.W $2132                                                          ;8B82F6;
    LDA.B #$00                                                           ;8B82F9;
    STA.W $2133                                                          ;8B82FB;
    STA.B DP_DisplayResolution                                           ;8B82FE;
    LDA.B #$20                                                           ;8B8300;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B8302;
    LDA.B #$40                                                           ;8B8304;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B8306;
    LDA.B #$80                                                           ;8B8308;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B830A;
    REP #$30                                                             ;8B830C;
    STZ.W OAMStack                                                       ;8B830E;
    STZ.W ScreenFadeDelay                                                ;8B8311;
    STZ.W ScreenFadeCounter                                              ;8B8314;
    STZ.W Mode7TransformationAngle                                       ;8B8317;
    LDA.W #$0100                                                         ;8B831A;
    STA.W Mode7TransformationZoomLevel                                   ;8B831D;
    STZ.W CinematicBG1_XSubPosition                                      ;8B8320;
    STZ.W CinematicBG1_XPosition                                         ;8B8323;
    STZ.W CinematicBG1_YSubPosition                                      ;8B8326;
    STZ.W CinematicBG1_YPosition                                         ;8B8329;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B832C;
    STZ.W CinematicBG1_XSpeed                                            ;8B832F;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B8332;
    STZ.W CinematicBG1_YSpeed                                            ;8B8335;
    PLP                                                                  ;8B8338;
    RTS                                                                  ;8B8339;


if !FEATURE_KEEP_UNREFERENCED
;;; $833A: Unused. Set up PPU for Zebes destruction space view ;;;
UNUSED_Setup_PPU_ZebesDestructionSpaceView_8B833A:
; Corresponds to the PPU setup done at $DA64 as part of
;     $DA1A: Cinematic function - ending - Zebes destruction scene 2 - cross-fade to space view
    PHP                                                                  ;8B833A;
    SEP #$30                                                             ;8B833B;
    LDA.B #$80                                                           ;8B833D;
    STA.W $2100                                                          ;8B833F;
    STA.B DP_Brightness                                                  ;8B8342;
    LDA.B #$02                                                           ;8B8344;
    STA.W $2101                                                          ;8B8346;
    STA.B DP_SpriteSizeAddr                                              ;8B8349;
    LDA.B #$01                                                           ;8B834B;
    STA.W $2105                                                          ;8B834D;
    STA.B DP_BGModeSize                                                  ;8B8350;
    STZ.W $211A                                                          ;8B8352;
    STZ.B DP_Mode7Settings                                               ;8B8355;
    LDA.B #$70                                                           ;8B8357;
    STA.B DP_BG1TilemapAddrSize                                          ;8B8359;
    STA.W $2107                                                          ;8B835B;
    LDA.B #$78                                                           ;8B835E;
    STA.B DP_BG2TilemapAddrSize                                          ;8B8360;
    STA.W $2108                                                          ;8B8362;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B8365;
    STZ.W $2109                                                          ;8B8367;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B836A;
    STZ.W $210A                                                          ;8B836C;
    LDA.B #$44                                                           ;8B836F;
    STA.B DP_BGTilesAddr                                                 ;8B8371;
    STA.W $210B                                                          ;8B8373;
    STZ.B DP_BGTilesAddr+1                                               ;8B8376;
    STZ.W $210C                                                          ;8B8378;
    LDA.B #$10                                                           ;8B837B;
    STA.W $212C                                                          ;8B837D;
    STA.B DP_MainScreenLayers                                            ;8B8380;
    STZ.W $212D                                                          ;8B8382;
    STZ.B DP_SubScreenLayers                                             ;8B8385;
    STZ.W $212E                                                          ;8B8387;
    STZ.B DP_WindowAreaMainScreen                                        ;8B838A;
    STZ.W $2115                                                          ;8B838C;
    STZ.W $2130                                                          ;8B838F;
    STZ.B DP_NextGameplayColorMathA                                      ;8B8392;
    STZ.W $2131                                                          ;8B8394;
    STZ.B DP_NextGameplayColorMathB                                      ;8B8397;
    LDA.B #$E0                                                           ;8B8399;
    STA.W $2132                                                          ;8B839B;
    STZ.B DP_ColorMathA                                                  ;8B839E;
    STZ.B DP_ColorMathB                                                  ;8B83A0;
    LDA.B #$20                                                           ;8B83A2;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B83A4;
    LDA.B #$40                                                           ;8B83A6;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B83A8;
    LDA.B #$80                                                           ;8B83AA;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B83AC;
    STZ.B DP_Mosaic                                                      ;8B83AE;
    REP #$30                                                             ;8B83B0;
    STZ.W CinematicBG1_XSubPosition                                      ;8B83B2;
    STZ.W CinematicBG1_XPosition                                         ;8B83B5;
    STZ.W CinematicBG1_YSubPosition                                      ;8B83B8;
    STZ.W CinematicBG1_YPosition                                         ;8B83BB;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B83BE;
    STZ.W CinematicBG1_XSpeed                                            ;8B83C1;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B83C4;
    STZ.W CinematicBG1_YSpeed                                            ;8B83C7;
    STZ.W LayerBlending_DefaultConfig                                    ;8B83CA;
    STZ.B DP_BG2XScroll                                                  ;8B83CD;
    STZ.B DP_BG2YScroll                                                  ;8B83CF;
    PLP                                                                  ;8B83D1;
    RTS                                                                  ;8B83D2;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $83D3: Set up PPU for credits ;;;
Setup_PPU_Credits:
    PHP                                                                  ;8B83D3;
    SEP #$30                                                             ;8B83D4;
    LDA.B #$80                                                           ;8B83D6;
    STA.W $2100                                                          ;8B83D8;
    STA.B DP_Brightness                                                 ;8B83DB;
    LDA.B #$00                                                          ;8B83DD;
    STA.W $2101                                                         ;8B83DF;
    STA.B DP_SpriteSizeAddr                                             ;8B83E2;
    LDA.B #$01                                                          ;8B83E4;
    STA.W $2105                                                         ;8B83E6;
    STA.B DP_BGModeSize                                                 ;8B83E9;
    LDA.B #$00                                                          ;8B83EB;
    STA.W $211A                                                         ;8B83ED;
    STA.B DP_Mode7Settings                                              ;8B83F0;
    LDA.B #$48                                                          ;8B83F2;
    STA.B DP_BG1TilemapAddrSize                                         ;8B83F4;
    STA.W $2107                                                         ;8B83F6;
    LDA.B #$4C                                                          ;8B83F9;
    STA.B DP_BG2TilemapAddrSize                                         ;8B83FB;
    STA.W $2108                                                         ;8B83FD;
    LDA.B #$24                                                          ;8B8400;
    STA.B DP_BG3TilemapAddrSize                                         ;8B8402;
    STA.W $2109                                                         ;8B8404;
    STZ.B DP_BG4TilemapAddrSize                                         ;8B8407;
    STZ.W $210A                                                         ;8B8409;
    LDA.B #$54                                                          ;8B840C;
    STA.B DP_BGTilesAddr                                                ;8B840E;
    STA.W $210B                                                         ;8B8410;
    LDA.B #$02                                                          ;8B8413;
    STA.B DP_BGTilesAddr+1                                              ;8B8415;
    STA.W $210C                                                         ;8B8417;
    LDA.B #$01                                                          ;8B841A;
    STA.W $212C                                                         ;8B841C;
    STA.B DP_MainScreenLayers                                           ;8B841F;
    STZ.W $212D                                                         ;8B8421;
    STZ.B DP_SubScreenLayers                                            ;8B8424;
    STZ.B DP_WindowMaskBG12                                             ;8B8426;
    STZ.B DP_WindowMaskBG34                                             ;8B8428;
    STZ.B DP_WindowMaskSprite                                           ;8B842A;
    STZ.B DP_WindowAreaMainScreen                                       ;8B842C;
    STZ.B DP_WindowAreaSubScreen                                        ;8B842E;
    STZ.B DP_ColorMathA                                                 ;8B8430;
    STZ.B DP_ColorMathB                                                 ;8B8432;
    LDA.B #$20                                                          ;8B8434;
    STA.B DP_ColorMathSubScreenBackdropColor0                           ;8B8436;
    LDA.B #$40                                                          ;8B8438;
    STA.B DP_ColorMathSubScreenBackdropColor1                           ;8B843A;
    LDA.B #$80                                                          ;8B843C;
    STA.B DP_ColorMathSubScreenBackdropColor2                           ;8B843E;
    REP #$30                                                            ;8B8440;
    STZ.W OAMStack                                                      ;8B8442;
    LDA.W #$0100                                                        ;8B8445;
    STA.W $211B                                                         ;8B8448;
    STA.B DP_Mode7TransMatrixA                                          ;8B844B;
    STZ.W $211C                                                         ;8B844D;
    STZ.B DP_Mode7TransMatrixB                                          ;8B8450;
    STZ.W $211D                                                         ;8B8452;
    STZ.B DP_Mode7TransMatrixC                                          ;8B8455;
    STA.W $211E                                                         ;8B8457;
    STA.B DP_Mode7TransMatrixD                                          ;8B845A;
    LDA.W #$0080                                                        ;8B845C;
    STA.W $211F                                                         ;8B845F;
    STA.B DP_Mode7TransOriginX                                          ;8B8462;
    STA.W $2120                                                         ;8B8464;
    STA.B DP_Mode7TransOriginY                                          ;8B8467;
    STZ.W Mode7TransformationAngle                                      ;8B8469;
    LDA.W #$0001                                                        ;8B846C;
    STA.W Mode7TransformationZoomLevel                                  ;8B846F;
    STZ.B DP_BG1XScroll                                                 ;8B8472;
    STZ.B DP_BG1YScroll                                                 ;8B8474;
    STZ.B DP_BG2XScroll                                                 ;8B8476;
    STZ.B DP_BG2YScroll                                                 ;8B8478;
    STZ.W CinematicBG1_XSubPosition                                     ;8B847A;
    STZ.W CinematicBG1_XPosition                                        ;8B847D;
    STZ.W CinematicBG1_YSubPosition                                     ;8B8480;
    STZ.W CinematicBG1_YPosition                                        ;8B8483;
    PLP                                                                  ;8B8486;
    RTS                                                                  ;8B8487;


if !FEATURE_KEEP_UNREFERENCED
if !DEBUG
;;; $8488: Unused. Debug. Modify mode 7 transformation and BG1 position with controller ;;;
UNUSED_ModifyMode7TransformAndBG1PosWithController_8B8488:
    PHP                                                                  ;8B8488;
    REP #$30                                                             ;8B8489;
    LDA.B DP_Controller1Input                                            ;8B848B;
    BIT.W #$0200                                                         ;8B848D;
    BEQ .checkRight                                                      ;8B8490;
    LDA.W CinematicBG1_XPosition                                         ;8B8492;
    CLC                                                                  ;8B8495;
    ADC.W #$0002                                                         ;8B8496;
    STA.W CinematicBG1_XPosition                                         ;8B8499;

  .checkRight:
    LDA.B DP_Controller1Input                                            ;8B849C;
    BIT.W #$0100                                                         ;8B849E;
    BEQ .checkUp                                                         ;8B84A1;
    LDA.W CinematicBG1_XPosition                                         ;8B84A3;
    SEC                                                                  ;8B84A6;
    SBC.W #$0002                                                         ;8B84A7;
    STA.W CinematicBG1_XPosition                                         ;8B84AA;

  .checkUp:
    LDA.B DP_Controller1Input                                            ;8B84AD;
    BIT.W #$0800                                                         ;8B84AF;
    BEQ .checkDown                                                       ;8B84B2;
    LDA.W CinematicBG1_YPosition                                         ;8B84B4;
    CLC                                                                  ;8B84B7;
    ADC.W #$0002                                                         ;8B84B8;
    STA.W CinematicBG1_YPosition                                         ;8B84BB;

  .checkDown:
    LDA.B DP_Controller1Input                                            ;8B84BE;
    BIT.W #$0400                                                         ;8B84C0;
    BEQ .checkLR                                                         ;8B84C3;
    LDA.W CinematicBG1_YPosition                                         ;8B84C5;
    SEC                                                                  ;8B84C8;
    SBC.W #$0002                                                         ;8B84C9;
    STA.W CinematicBG1_YPosition                                         ;8B84CC;

  .checkLR:
    LDA.B DP_Controller1Input                                            ;8B84CF;
    BIT.W #$0010                                                         ;8B84D1;
    BNE .pressingR                                                       ;8B84D4;
    BIT.W #$0020                                                         ;8B84D6;
    BEQ .checkB                                                          ;8B84D9;
    LDA.W Mode7TransformationAngle                                       ;8B84DB;
    DEC                                                                  ;8B84DE;
    AND.W #$00FF                                                         ;8B84DF;
    STA.W Mode7TransformationAngle                                       ;8B84E2;
    BRA .checkB                                                          ;8B84E5;

  .pressingR:
    LDA.W Mode7TransformationAngle                                       ;8B84E7;
    INC                                                                  ;8B84EA;
    AND.W #$00FF                                                         ;8B84EB;
    STA.W Mode7TransformationAngle                                       ;8B84EE;

  .checkB:
    LDA.B DP_Controller1Input                                            ;8B84F1;
    BIT.W #$8000                                                         ;8B84F3;
    BNE .zoomOut                                                         ;8B84F6;
    BIT.W #$0040                                                         ;8B84F8;
    BNE .zoomIn                                                          ;8B84FB;
    PLP                                                                  ;8B84FD;
    RTS                                                                  ;8B84FE;

  .zoomOut:
    LDA.W Mode7TransformationZoomLevel                                   ;8B84FF;
    CMP.W #$7000                                                         ;8B8502;
    BPL .return                                                          ;8B8505;
    INC                                                                  ;8B8507;
    STA.W Mode7TransformationZoomLevel                                   ;8B8508;
    BRA .return                                                          ;8B850B;

  .zoomIn:
    LDA.W Mode7TransformationZoomLevel                                   ;8B850D;
    BEQ .return                                                          ;8B8510;
    DEC                                                                  ;8B8512;
    STA.W Mode7TransformationZoomLevel                                   ;8B8513;

  .return:
    PLP                                                                  ;8B8516;
    RTS                                                                  ;8B8517;
endif
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $8518: Handle mode 7 transformation matrix and BG1 position - no rotation ;;;
HandleMode7TransformMatrixAndBG1Position_NoRotation:
    PHP                                                                  ;8B8518;
    REP #$30                                                             ;8B8519;
    LDA.W Mode7TransformationZoomLevel                                   ;8B851B;
    STA.B DP_Mode7TransMatrixA                                           ;8B851E;
    STA.B DP_Mode7TransMatrixD                                           ;8B8520;
    STZ.B DP_Mode7TransMatrixB                                           ;8B8522;
    STZ.B DP_Mode7TransMatrixC                                           ;8B8524;
    LDA.W CinematicBG1_XPosition                                         ;8B8526;
    STA.B DP_BG1XScroll                                                  ;8B8529;
    LDA.W CinematicBG1_YPosition                                         ;8B852B;
    STA.B DP_BG1YScroll                                                  ;8B852E;
    PLP                                                                  ;8B8530;
    RTS                                                                  ;8B8531;


;;; $8532: Handle mode 7 transformation matrix and BG1 position ;;;
HandleMode7TransformMatrixAndBG1Position:
    PHP                                                                  ;8B8532;
    REP #$30                                                             ;8B8533;
    LDA.W Mode7TransformationAngle                                       ;8B8535;
    CLC                                                                  ;8B8538;
    ADC.W #$0040                                                         ;8B8539;
    AND.W #$00FF                                                         ;8B853C;
    ASL                                                                  ;8B853F;
    TAX                                                                  ;8B8540;
    LDA.L SineCosineTables_8bitSine_SignExtended,X                       ;8B8541;
    STA.B DP_Temp26                                                      ;8B8545;
    LDA.W Mode7TransformationZoomLevel                                   ;8B8547;
    STA.B DP_Temp28                                                      ;8B854A;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B854C;
    SEP #$20                                                             ;8B854F;
    LDA.B DP_Temp2A                                                      ;8B8551;
    XBA                                                                  ;8B8553;
    LDA.B DP_Temp2D                                                      ;8B8554;
    REP #$20                                                             ;8B8556;
    STA.B DP_Mode7TransMatrixA                                           ;8B8558;
    STA.B DP_Mode7TransMatrixD                                           ;8B855A;
    LDA.W Mode7TransformationAngle                                       ;8B855C;
    AND.W #$00FF                                                         ;8B855F;
    ASL                                                                  ;8B8562;
    TAX                                                                  ;8B8563;
    LDA.L SineCosineTables_8bitSine_SignExtended,X                       ;8B8564;
    STA.B DP_Temp26                                                      ;8B8568;
    LDA.W Mode7TransformationZoomLevel                                   ;8B856A;
    STA.B DP_Temp28                                                      ;8B856D;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B856F;
    SEP #$20                                                             ;8B8572;
    LDA.B DP_Temp2A                                                      ;8B8574;
    XBA                                                                  ;8B8576;
    LDA.B DP_Temp2D                                                      ;8B8577;
    REP #$20                                                             ;8B8579;
    STA.B DP_Mode7TransMatrixB                                           ;8B857B;
    EOR.W #$FFFF                                                         ;8B857D;
    INC                                                                  ;8B8580;
    STA.B DP_Mode7TransMatrixC                                           ;8B8581;
    LDA.W CinematicBG1_XPosition                                         ;8B8583;
    STA.B DP_BG1XScroll                                                  ;8B8586;
    LDA.W CinematicBG1_YPosition                                         ;8B8588;
    STA.B DP_BG1YScroll                                                  ;8B858B;
    PLP                                                                  ;8B858D;
    RTS                                                                  ;8B858E;


;;; $858F: $2A.$2C = ±[$26] * ±[$28] / 10000h (16-bit signed multiplication) ;;;
Multiplication_16bitSigned_8B858F:
;; Parameters:
;;     $26: Multiplicand
;;     $28: Multiplicand
;; Returns:
;;     $2A.$2C: Product / 10000h
    PHP                                                                  ;8B858F;
    REP #$30                                                             ;8B8590;
    LDA.B DP_Temp26                                                      ;8B8592;
    BPL .leftPositive                                                    ;8B8594;
    EOR.W #$FFFF                                                         ;8B8596;
    INC                                                                  ;8B8599;
    STA.B DP_Temp26                                                      ;8B859A;
    LDA.B DP_Temp28                                                      ;8B859C;
    BMI +                                                                ;8B859E;
    JSR.W Multiplication_16bitUnsigned_8B85EE                            ;8B85A0;
    LDA.B DP_Temp2C                                                      ;8B85A3;
    EOR.W #$FFFF                                                         ;8B85A5;
    CLC                                                                  ;8B85A8;
    ADC.W #$0001                                                         ;8B85A9;
    STA.B DP_Temp2C                                                      ;8B85AC;
    LDA.B DP_Temp2A                                                      ;8B85AE;
    EOR.W #$FFFF                                                         ;8B85B0;
    ADC.W #$0000                                                         ;8B85B3;
    STA.B DP_Temp2A                                                      ;8B85B6;
    PLP                                                                  ;8B85B8;
    RTS                                                                  ;8B85B9;

+   EOR.W #$FFFF                                                         ;8B85BA;
    INC                                                                  ;8B85BD;
    STA.B DP_Temp28                                                      ;8B85BE;
    JSR.W Multiplication_16bitUnsigned_8B85EE                            ;8B85C0;
    PLP                                                                  ;8B85C3;
    RTS                                                                  ;8B85C4;

  .leftPositiveRightNegative:
    EOR.W #$FFFF                                                         ;8B85C5;
    INC                                                                  ;8B85C8;
    STA.B DP_Temp28                                                      ;8B85C9;
    JSR.W Multiplication_16bitUnsigned_8B85EE                            ;8B85CB;
    LDA.B DP_Temp2C                                                      ;8B85CE;
    EOR.W #$FFFF                                                         ;8B85D0;
    CLC                                                                  ;8B85D3;
    ADC.W #$0001                                                         ;8B85D4;
    STA.B DP_Temp2C                                                      ;8B85D7;
    LDA.B DP_Temp2A                                                      ;8B85D9;
    EOR.W #$FFFF                                                         ;8B85DB;
    ADC.W #$0000                                                         ;8B85DE;
    STA.B DP_Temp2A                                                      ;8B85E1;
    PLP                                                                  ;8B85E3;
    RTS                                                                  ;8B85E4;

  .leftPositive:
    LDA.B DP_Temp28                                                      ;8B85E5;
    BMI .leftPositiveRightNegative                                       ;8B85E7;
    JSR.W Multiplication_16bitUnsigned_8B85EE                            ;8B85E9;
    PLP                                                                  ;8B85EC;
    RTS                                                                  ;8B85ED;


;;; $85EE: $2A.$2C = [$26] * [$28] / 10000h (16-bit unsigned multiplication) ;;;
Multiplication_16bitUnsigned_8B85EE:
;; Parameters:
;;     $26: Multiplicand
;;     $28: Multiplicand
;; Returns:
;;     $2A.$2C: Product / 10000h

; Exactly 1204/1232 master cycles (88%/90% of a scanline).

; Compared to $80:82D6, this routine is a bit slower (144/172 master cycles slower),
; but produces correct results in all cases

; Let:
;     $26 = a + b * 100h
;     $28 = c + d * 100h
    PHP                                                                  ;8B85EE;
    SEP #$30                                                             ;8B85EF;
    LDA.B DP_Temp26                                                      ;8B85F1;
    STA.W $4202                                                          ;8B85F3;
    LDA.B DP_Temp28                                                      ;8B85F6;
    STA.W $4203                                                          ;8B85F8;
    NOP                                                                  ;8B85FB;
    NOP                                                                  ;8B85FC;
    NOP                                                                  ;8B85FD;
    LDA.W $4216                                                          ;8B85FE;
    STA.B DP_Temp2C                                                      ;8B8601;
    LDA.W $4217                                                          ;8B8603;
    STA.B DP_Temp2D                                                      ;8B8606;
    LDA.B DP_Temp27                                                      ;8B8608;
    STA.W $4202                                                          ;8B860A;
    LDA.B DP_Temp28                                                      ;8B860D;
    STA.W $4203                                                          ;8B860F;
    NOP                                                                  ;8B8612;
    NOP                                                                  ;8B8613;
    NOP                                                                  ;8B8614;
    LDA.W $4216                                                          ;8B8615;
    STA.B DP_Temp2E                                                      ;8B8618;
    LDA.W $4217                                                          ;8B861A;
    STA.B DP_Temp2F                                                      ;8B861D;
    LDA.B DP_Temp26                                                      ;8B861F;
    STA.W $4202                                                          ;8B8621;
    LDA.B DP_Temp29                                                      ;8B8624;
    STA.W $4203                                                          ;8B8626;
    NOP                                                                  ;8B8629;
    NOP                                                                  ;8B862A;
    NOP                                                                  ;8B862B;
    LDA.W $4216                                                          ;8B862C;
    STA.B DP_Temp30                                                      ;8B862F;
    LDA.W $4217                                                          ;8B8631;
    STA.B DP_Temp31                                                      ;8B8634;
    LDA.B DP_Temp27                                                      ;8B8636;
    STA.W $4202                                                          ;8B8638;
    LDA.B DP_Temp29                                                      ;8B863B;
    STA.W $4203                                                          ;8B863D;
    NOP                                                                  ;8B8640;
    NOP                                                                  ;8B8641;
    NOP                                                                  ;8B8642;
    REP #$20                                                             ;8B8643;
    LDA.W $4216                                                          ;8B8645;
    STA.B DP_Temp2A                                                      ;8B8648;
    LDA.B DP_Temp2E                                                      ;8B864A;
    CLC                                                                  ;8B864C;
    ADC.B DP_Temp30                                                      ;8B864D;
    STA.B DP_Temp2E                                                      ;8B864F;
    SEP #$20                                                             ;8B8651;
    LDA.B DP_Temp2E                                                      ;8B8653;
    CLC                                                                  ;8B8655;
    ADC.B DP_Temp2D                                                      ;8B8656;
    STA.B DP_Temp2D                                                      ;8B8658;
    LDA.B DP_Temp2F                                                      ;8B865A;
    ADC.B DP_Temp2A                                                      ;8B865C;
    STA.B DP_Temp2A                                                      ;8B865E;
    BCC .return                                                          ;8B8660;
    INC.B DP_Temp2B                                                      ;8B8662;

  .return:
    PLP                                                                  ;8B8664;
    RTS                                                                  ;8B8665;


;;; $8666: Handle fading in ;;;
Handle_Fading_In_from_Bank8B:
    JSL.L HandleFadingIn                                                 ;8B8666;
    RTS                                                                  ;8B866A;


;;; $866B: Activate title sequence blue light ;;;
Activate_TileSequence_BlueLight:
    PHP                                                                  ;8B866B;
    SEP #$20                                                             ;8B866C;
    STZ.B DP_ColorMathA                                                  ;8B866E;
    LDA.B #$81                                                           ;8B8670;
    STA.B DP_ColorMathB                                                  ;8B8672;
    LDA.B #$38                                                           ;8B8674;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B8676;
    LDA.B #$58                                                           ;8B8678;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B867A;
    LDA.B #$80                                                           ;8B867C;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B867E;
    PLP                                                                  ;8B8680;
    RTS                                                                  ;8B8681;


;;; $8682: Deactivate title sequence blue light ;;;
Deactivate_TileSequence_BlueLight:
    PHP                                                                  ;8B8682;
    SEP #$20                                                             ;8B8683;
    STZ.B DP_ColorMathA                                                  ;8B8685;
    STZ.B DP_ColorMathB                                                  ;8B8687;
    LDA.B #$20                                                           ;8B8689;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B868B;
    LDA.B #$40                                                           ;8B868D;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B868F;
    LDA.B #$80                                                           ;8B8691;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B8693;
    PLP                                                                  ;8B8695;
    RTS                                                                  ;8B8696;


if !DEBUG
;;; $8697: Debug. Display version info ;;;
Debug_DisplayVersionInfo:
; Removing the RTS and the title screen shows:
;     'Ver.02.02.21.30  00' on NTSC
;     'Ver.03.30.10.00  00' on PAL

; Last byte there is the game header version number
; Also displays an 'S' if audio is disabled by $80:8008
    RTS                                                                  ;8B8697;

    PHP                                                                  ;8B8698;
    REP #$30                                                             ;8B8699;
    LDX.W OAMStack                                                       ;8B869B;
    LDY.W #$0000                                                         ;8B869E;

  .loopVersionString:
    LDA.W .versionStringOAMEntryXpos,Y                                   ;8B86A1;
    AND.W #$00FF                                                         ;8B86A4;
    STA.W OAMLow,X                                                       ;8B86A7;
    LDA.W #$00CC                                                         ;8B86AA;
    STA.W OAMLow+1,X                                                     ;8B86AD;
    PHY                                                                  ;8B86B0;
    LDA.W Debug_VersionString,Y                                          ;8B86B1;
    AND.W #$00FF                                                         ;8B86B4;
    BEQ .done                                                            ;8B86B7;
    CMP.W #$002E                                                         ;8B86B9;
    BEQ .decimalPoint                                                    ;8B86BC;
    SEC                                                                  ;8B86BE;
    SBC.W #$0030                                                         ;8B86BF;
    ASL                                                                  ;8B86C2;
    TAY                                                                  ;8B86C3;
    LDA.W .versionStringOAMEntryTileNumbersAttributes,Y                  ;8B86C4;
    STA.W OAMLow+2,X                                                     ;8B86C7;
    BRA .next                                                            ;8B86CA;

  .decimalPoint:
    LDA.W #$39F3                                                         ;8B86CC;
    STA.W OAMLow+2,X                                                     ;8B86CF;

  .next:
    PLY                                                                  ;8B86D2;
    TXA                                                                  ;8B86D3;
    CLC                                                                  ;8B86D4;
    ADC.W #$0004                                                         ;8B86D5;
    TAX                                                                  ;8B86D8;
    INY                                                                  ;8B86D9;
    BRA .loopVersionString                                               ;8B86DA;

  .done:
    PLY                                                                  ;8B86DC;
    STX.W OAMStack                                                       ;8B86DD;
    LDA.L DebugConst_DisableAudio                                        ;8B86E0;
    BEQ .versionNumber                                                   ;8B86E4;
    LDA.W #$00B4                                                         ;8B86E6;
    STA.W OAMLow,X                                                       ;8B86E9;
    LDA.W #$00C4                                                         ;8B86EC;
    STA.W OAMLow+1,X                                                     ;8B86EF;
    LDA.W #$39E2                                                         ;8B86F2;
    STA.W OAMLow+2,X                                                     ;8B86F5;
    TXA                                                                  ;8B86F8;
    CLC                                                                  ;8B86F9;
    ADC.W #$0004                                                         ;8B86FA;
    TAX                                                                  ;8B86FD;

  .versionNumber:
    LDA.L ROM_HEADER_version&$00FFFF                                     ;8B86FE;
    PHA                                                                  ;8B8702;
    AND.W #$000F                                                         ;8B8703;
    ASL                                                                  ;8B8706;
    STA.B DP_Temp12                                                      ;8B8707;
    PLA                                                                  ;8B8709;
    AND.W #$00F0                                                         ;8B870A;
    LSR                                                                  ;8B870D;
    LSR                                                                  ;8B870E;
    LSR                                                                  ;8B870F;
    TAY                                                                  ;8B8710;
    LDA.W #$00E8                                                         ;8B8711;
    STA.W OAMLow,X                                                       ;8B8714;
    LDA.W #$00CC                                                         ;8B8717;
    STA.W OAMLow+1,X                                                     ;8B871A;
    LDA.W .versionStringOAMEntryTileNumbersAttributes,Y                  ;8B871D;
    STA.W OAMLow+2,X                                                     ;8B8720;
    LDA.W #$00F0                                                         ;8B8723;
    STA.W OAMLow+4,X                                                     ;8B8726;
    LDA.W #$00CC                                                         ;8B8729;
    STA.W OAMLow+5,X                                                     ;8B872C;
    LDY.B DP_Temp12                                                      ;8B872F;
    LDA.W .versionStringOAMEntryTileNumbersAttributes,Y                  ;8B8731;
    STA.W OAMLow+6,X                                                     ;8B8734;
    TXA                                                                  ;8B8737;
    CLC                                                                  ;8B8738;
    ADC.W #$0008                                                         ;8B8739;
    TAX                                                                  ;8B873C;
    LDY.W #$0000                                                         ;8B873D;

  .loopVer:
    LDA.W .VerOAMEntryXpos,Y                                             ;8B8740;
    STA.W OAMLow,X                                                       ;8B8743;
    LDA.W #$00CC                                                         ;8B8746;
    STA.W OAMLow+1,X                                                     ;8B8749;
    LDA.W .VerOAMEntryTileNumbersAttributes,Y                            ;8B874C;
    STA.W OAMLow+2,X                                                     ;8B874F;
    TXA                                                                  ;8B8752;
    CLC                                                                  ;8B8753;
    ADC.W #$0004                                                         ;8B8754;
    TAX                                                                  ;8B8757;
    INY                                                                  ;8B8758;
    INY                                                                  ;8B8759;
    CPY.W #$0006                                                         ;8B875A;
    BMI .loopVer                                                         ;8B875D;
    STX.W OAMStack                                                       ;8B875F;
    PLP                                                                  ;8B8762;
    RTS                                                                  ;8B8763;

  .versionStringOAMEntryXpos:
; Version string OAM entry X positions
    db $80,$88,$90,$98,$A0,$A8,$B0,$B8,$C0,$C8,$D0,$D8,$E0,$E8,$F0,$F8   ;8B8764;

  .VerOAMEntryXpos:
; 'Ver.' OAM entry X positions
    dw $0074,$006C,$0064                                                 ;8B8774;

  .VerOAMEntryTileNumbersAttributes:
; 'Ver.' OAM entry tile numbers and attributes
    dw $31F2,$31F1,$31F0                                                 ;8B877A;

  .versionStringOAMEntryTileNumbersAttributes:
; Version string ('0123456789ABCDEF') OAM entry tile numbers and attributes
    dw $39F4,$39F5,$39F6,$39F7,$39F8,$39F9,$39FA,$39FB                   ;8B8780;
    dw $39FC,$39FD,$39D0,$39D1,$39D2,$39D3,$39D4,$39D5                   ;8B8790;
endif


;;; $87A0: Update 32x30 cinematic BG tilemap ;;;
CinematicBGObjects_Update32x30CinematicBGTilemap:
; If not mode 7:
;     Queue transfer of 780h bytes from $7E:3000 to VRAM CinematicBGObject_VRAMAddr
    PHP                                                                  ;8B87A0;
    REP #$30                                                             ;8B87A1;
    LDA.B DP_BGModeSize                                                  ;8B87A3;
    AND.W #$00FF                                                         ;8B87A5;
    CMP.W #$0007                                                         ;8B87A8;
    BEQ .return                                                          ;8B87AB;
    LDX.W VRAMWriteStack                                                 ;8B87AD;
    LDA.W #$0780                                                         ;8B87B0;
    STA.B VRAMWrite.size,X                                               ;8B87B3;
    INX                                                                  ;8B87B5;
    INX                                                                  ;8B87B6;
    LDA.W #$3000                                                         ;8B87B7;
    STA.B VRAMWrite.size,X                                               ;8B87BA;
    INX                                                                  ;8B87BC;
    INX                                                                  ;8B87BD;
    SEP #$20                                                             ;8B87BE;
    LDA.B #$7E                                                           ;8B87C0;
    STA.B VRAMWrite.size,X                                               ;8B87C2;
    REP #$20                                                             ;8B87C4;
    INX                                                                  ;8B87C6;
    LDA.W CinematicBGObject_VRAMAddr                                     ;8B87C7;
    STA.B VRAMWrite.size,X                                               ;8B87CA;
    INX                                                                  ;8B87CC;
    INX                                                                  ;8B87CD;
    STX.W VRAMWriteStack                                                 ;8B87CE;

  .return:
    PLP                                                                  ;8B87D1;
    RTS                                                                  ;8B87D2;


;;; $87D3: Update Samus eyes tilemap ;;;
CinematicBGObjects_UpdateSamusEyesTilemap:
; If not mode 7:
;     Queue transfer of $7E:3B40..BF to VRAM $49A0..DF (BG2 tilemap rows Dh/Eh)
    PHP                                                                  ;8B87D3;
    REP #$30                                                             ;8B87D4;
    LDA.B DP_BGModeSize                                                  ;8B87D6;
    AND.W #$00FF                                                         ;8B87D8;
    CMP.W #$0007                                                         ;8B87DB;
    BEQ .return                                                          ;8B87DE;
    LDX.W VRAMWriteStack                                                 ;8B87E0;
    LDA.W #$0080                                                         ;8B87E3;
    STA.B VRAMWrite.size,X                                               ;8B87E6;
    INX                                                                  ;8B87E8;
    INX                                                                  ;8B87E9;
    LDA.W #$3B40                                                         ;8B87EA;
    STA.B VRAMWrite.size,X                                               ;8B87ED;
    INX                                                                  ;8B87EF;
    INX                                                                  ;8B87F0;
    SEP #$20                                                             ;8B87F1;
    LDA.B #$7E                                                           ;8B87F3;
    STA.B VRAMWrite.size,X                                               ;8B87F5;
    REP #$20                                                             ;8B87F7;
    INX                                                                  ;8B87F9;
    LDA.W #$49A0                                                         ;8B87FA;
    STA.B VRAMWrite.size,X                                               ;8B87FD;
    INX                                                                  ;8B87FF;
    INX                                                                  ;8B8800;
    STX.W VRAMWriteStack                                                 ;8B8801;

  .return:
    PLP                                                                  ;8B8804;
    RTS                                                                  ;8B8805;


;;; $8806: Update 32x32 cinematic BG tilemap ;;;
CinematicBGObjects_Update32x32CinematicBGTilemap:
; If not mode 7:
;     Queue transfer of 800h bytes from $7E:3000 to VRAM CinematicBGObject_VRAMAddr
    PHP                                                                  ;8B8806;
    REP #$30                                                             ;8B8807;
    LDA.B DP_BGModeSize                                                  ;8B8809;
    AND.W #$00FF                                                         ;8B880B;
    CMP.W #$0007                                                         ;8B880E;
    BEQ .return                                                          ;8B8811;
    LDX.W VRAMWriteStack                                                 ;8B8813;
    LDA.W #$0800                                                         ;8B8816;
    STA.B VRAMWrite.size,X                                               ;8B8819;
    INX                                                                  ;8B881B;
    INX                                                                  ;8B881C;
    LDA.W #$3000                                                         ;8B881D;
    STA.B VRAMWrite.size,X                                               ;8B8820;
    INX                                                                  ;8B8822;
    INX                                                                  ;8B8823;
    SEP #$20                                                             ;8B8824;
    LDA.B #$7E                                                           ;8B8826;
    STA.B VRAMWrite.size,X                                               ;8B8828;
    REP #$20                                                             ;8B882A;
    INX                                                                  ;8B882C;
    LDA.W CinematicBGObject_VRAMAddr                                     ;8B882D;
    STA.B VRAMWrite.size,X                                               ;8B8830;
    INX                                                                  ;8B8832;
    INX                                                                  ;8B8833;
    STX.W VRAMWriteStack                                                 ;8B8834;

  .return:
    PLP                                                                  ;8B8837;
    RTS                                                                  ;8B8838;


;;; $8839: Process cinematic BG object indirect instruction ;;;
CinematicBGObjects_ProcessIndirectInstruction:
;; Parameters:
;;     X: Cinematic BG object index
    PHP                                                                  ;8B8839;
    REP #$30                                                             ;8B883A;
    PHX                                                                  ;8B883C;
    PHY                                                                  ;8B883D;
    LDY.W CinematicBGObject_IndirectInstructionPointers,X                ;8B883E;
    LDA.W $0000,Y                                                        ;8B8841;
    STA.B DP_Temp1C                                                      ;8B8844;
    JMP.W (DP_Temp1C)                                                    ;8B8846;


;;; $8849: Indirect instruction function - nothing ;;;
IndirectInstructionFunction_Nothing:
; Expects pushed Y, X and PSR
; Used by dummy instruction used for delay
    PLY                                                                  ;8B8849;
    PLX                                                                  ;8B884A;
    PLP                                                                  ;8B884B;
    RTS                                                                  ;8B884C;


;;; $884D: Indirect instruction function - draw text character [[Y] + 4] ;;;
IndirectInstructionFunction_DrawTextCharacter:
;; Parameters:
;;     X: Cinematic BG object index
;;     Y: Pointer to instruction

; Expects pushed Y, X and PSR
; Only one tile can be specified
; Draws character, updates caret position (based on next instruction) and plays intro text click
; Cinematic sprite object Fh is the intro text caret here
    LDA.W CinematicSpriteObject_IntroTextClickFlag                       ;8B884D;
    BNE .toggleFlag                                                      ;8B8850;
    LDA.W #$0001                                                         ;8B8852;
    STA.W CinematicSpriteObject_IntroTextClickFlag                       ;8B8855;
    BRA .drawText                                                        ;8B8858;

  .toggleFlag:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8B885A;

  .drawText:
    JSR.W Spawn_TextGlowObject                                           ;8B885D;
    PHY                                                                  ;8B8860;
    LDY.W CinematicBGObject_InstListPointers,X                           ;8B8861;
    LDX.W #$001E                                                         ;8B8864;
    LDA.W $0006,Y                                                        ;8B8867;
    BMI .pointer                                                         ;8B886A;
    LDA.W $0008,Y                                                        ;8B886C;
    AND.W #$00FF                                                         ;8B886F;
    ASL                                                                  ;8B8872;
    ASL                                                                  ;8B8873;
    ASL                                                                  ;8B8874;
    STA.W CinematicSpriteObject_XPositions,X                             ;8B8875;
    LDA.W $0009,Y                                                        ;8B8878;
    AND.W #$00FF                                                         ;8B887B;
    ASL                                                                  ;8B887E;
    ASL                                                                  ;8B887F;
    ASL                                                                  ;8B8880;
    SEC                                                                  ;8B8881;
    SBC.W #$0008                                                         ;8B8882;
    STA.W CinematicSpriteObject_YPositions,X                             ;8B8885;
    BRA .merge                                                           ;8B8888;

  .pointer:
    LDA.W #$0008                                                         ;8B888A;
    STA.W CinematicSpriteObject_XPositions,X                             ;8B888D;
    LDA.W $0003,Y                                                        ;8B8890;
    AND.W #$00FF                                                         ;8B8893;
    INC                                                                  ;8B8896;
    INC                                                                  ;8B8897;
    ASL                                                                  ;8B8898;
    ASL                                                                  ;8B8899;
    ASL                                                                  ;8B889A;
    SEC                                                                  ;8B889B;
    SBC.W #$0008                                                         ;8B889C;
    STA.W CinematicSpriteObject_YPositions,X                             ;8B889F;

  .merge:
    LDA.W $0004,Y                                                        ;8B88A2;
    CMP.W #IndirectInstructions_IntroText_Space                          ;8B88A5;
    BEQ .fallthrough                                                     ;8B88A8;
    LDA.W CinematicSpriteObject_IntroTextClickFlag                       ;8B88AA;
    BEQ .fallthrough                                                     ;8B88AD;
    LDA.W #$000D                                                         ;8B88AF;
    JSL.L QueueSound_Lib3_Max6                                           ;8B88B2;

  .fallthrough:
    PLY                                                                  ;8B88B6; fallthrough to IndirectInstructionFunction_DrawTextToTilemap


;;; $88B7: Indirect instruction function - draw the [[Y] + 3] x [[Y] + 2] region with tilemap values at [Y] + 4 to text tilemap ;;;
IndirectInstructionFunction_DrawTextToTilemap:
;; Parameters:
;;     X: Cinematic BG object index
;;     Y: Pointer to instruction

; Expects pushed Y, X and PSR
; Used for space colony label in intro and in the ending sequence
    JSR.W CinematicBGObjects_X_16_TilemapOffsetForTile_12_13             ;8B88B7;
    LDA.W $0002,Y                                                        ;8B88BA;
    AND.W #$00FF                                                         ;8B88BD;
    STA.W DP_Temp12                                                      ;8B88C0;
    STA.W DP_Temp18                                                      ;8B88C3;
    LDA.W $0003,Y                                                        ;8B88C6;
    AND.W #$00FF                                                         ;8B88C9;
    STA.W DP_Temp14                                                      ;8B88CC;

  .loop:
    LDA.W $0004,Y                                                        ;8B88CF;
    STA.L CinematicBGTilemap,X                                           ;8B88D2;
    INY                                                                  ;8B88D6;
    INY                                                                  ;8B88D7;
    INX                                                                  ;8B88D8;
    INX                                                                  ;8B88D9;
    DEC.W DP_Temp12                                                      ;8B88DA;
    BEQ +                                                                ;8B88DD;
    BRA .loop                                                            ;8B88DF;

+   LDA.W DP_Temp18                                                      ;8B88E1;
    STA.W DP_Temp12                                                      ;8B88E4;
    DEC.W DP_Temp14                                                      ;8B88E7;
    BEQ .return                                                          ;8B88EA;
    LDA.W DP_Temp16                                                      ;8B88EC;
    CLC                                                                  ;8B88EF;
    ADC.W #$0040                                                         ;8B88F0;
    STA.W DP_Temp16                                                      ;8B88F3;
    TAX                                                                  ;8B88F6;
    BRA .loop                                                            ;8B88F7;

  .return:
    PLY                                                                  ;8B88F9;
    PLX                                                                  ;8B88FA;
    PLP                                                                  ;8B88FB;
    RTS                                                                  ;8B88FC;


;;; $88FD: Indirect instruction function - draw the [[Y] + 3] x [[Y] + 2] region with tilemap values at [Y] + 4 to BG2 ;;;
IndirectInstructionFunction_DrawSamusEyesToTilemap:
;; Parameters:
;;     X: Cinematic BG object index
;;     Y: Pointer to instruction

; Expects pushed Y, X and PSR
; Used for Samus eyes during the intro
    JSR.W CinematicBGObjects_X_16_TilemapOffsetForTile_12_13             ;8B88FD;
    LDA.W $0002,Y                                                        ;8B8900;
    AND.W #$00FF                                                         ;8B8903;
    STA.W DP_Temp12                                                      ;8B8906;
    STA.W DP_Temp18                                                      ;8B8909;
    LDA.W $0003,Y                                                        ;8B890C;
    AND.W #$00FF                                                         ;8B890F;
    STA.W DP_Temp14                                                      ;8B8912;

  .loops:
    LDA.W $0004,Y                                                        ;8B8915;
    STA.L IntroBG2Tilemap,X                                              ;8B8918;
    INY                                                                  ;8B891C;
    INY                                                                  ;8B891D;
    INX                                                                  ;8B891E;
    INX                                                                  ;8B891F;
    DEC.W DP_Temp12                                                      ;8B8920;
    BEQ +                                                                ;8B8923;
    BRA .loops                                                           ;8B8925;

+   LDA.W DP_Temp18                                                      ;8B8927;
    STA.W DP_Temp12                                                      ;8B892A;
    DEC.W DP_Temp14                                                      ;8B892D;
    BEQ .return                                                          ;8B8930;
    LDA.W DP_Temp16                                                      ;8B8932;
    CLC                                                                  ;8B8935;
    ADC.W #$0040                                                         ;8B8936;
    STA.W DP_Temp16                                                      ;8B8939;
    TAX                                                                  ;8B893C;
    BRA .loops                                                           ;8B893D;

  .return:
    PLY                                                                  ;8B893F;
    PLX                                                                  ;8B8940;
    PLP                                                                  ;8B8941;
    RTS                                                                  ;8B8942;


;;; $8943: X = $16 = tilemap offset for tile ([$12], [$13]) ;;;
CinematicBGObjects_X_16_TilemapOffsetForTile_12_13:
;; Parameters:
;;     $12: Tile X
;;     $13: Tile Y
;; Returns:
;;     X/$16: Tilemap offset (in octets). ([$13] * 20h + [$12]) * 2
    LDA.W DP_Temp12                                                      ;8B8943;
    AND.W #$00FF                                                         ;8B8946;
    ASL                                                                  ;8B8949;
    STA.W DP_Temp14                                                      ;8B894A;
    SEP #$20                                                             ;8B894D;
    LDA.B #$40                                                           ;8B894F;
    STA.W $4202                                                          ;8B8951;
    LDA.W DP_Temp13                                                      ;8B8954;
    STA.W $4203                                                          ;8B8957;
    NOP                                                                  ;8B895A;
    NOP                                                                  ;8B895B;
    NOP                                                                  ;8B895C;
    REP #$20                                                             ;8B895D;
    LDA.W $4216                                                          ;8B895F;
    CLC                                                                  ;8B8962;
    ADC.W DP_Temp14                                                      ;8B8963;
    STA.W DP_Temp16                                                      ;8B8966;
    TAX                                                                  ;8B8969;
    RTS                                                                  ;8B896A;


if !FEATURE_KEEP_UNREFERENCED
;;; $896B: Unused. Indirect instruction function - draw the [[Y] + 3] x [[Y] + 2] region with tilemap values at [Y] + 4 to mode 7 tilemap ;;;
UNUSED_CinematicBGObjects_IndirectInstructionFunction_8B896B:
;; Parameters:
;;     X: Cinematic BG object index
;;     Y: Pointer to instruction

; Expects pushed Y, X and PSR
    JSR.W UNUSED_CinematicBGObjects_Mode7TilemapOffsetForTile_8B8A2C     ;8B896B;
    LDA.W $0002,Y                                                        ;8B896E;
    AND.W #$00FF                                                         ;8B8971;
    STA.W DP_Temp12                                                      ;8B8974;
    LDA.W $0003,Y                                                        ;8B8977;
    AND.W #$00FF                                                         ;8B897A;
    STA.W DP_Temp14                                                      ;8B897D;
    TYA                                                                  ;8B8980;
    CLC                                                                  ;8B8981;
    ADC.W #$0004                                                         ;8B8982;
    TAY                                                                  ;8B8985;
    LDX.W Mode7Stack                                                     ;8B8986;

  .loop:
    LDA.W #$0080                                                         ;8B8989;
    STA.W Mode7Transfer.control,X                                        ;8B898C;
    TYA                                                                  ;8B898F;
    STA.W Mode7Transfer.src,X                                            ;8B8990;
    LDA.W #$008B                                                         ;8B8993;
    STA.W Mode7Transfer.src+2,X                                          ;8B8996;
    LDA.W DP_Temp12                                                      ;8B8999;
    STA.W Mode7Transfer.size,X                                           ;8B899C;
    LDA.W DP_Temp16                                                      ;8B899F;
    STA.W Mode7Transfer.dest,X                                           ;8B89A2;
    LDA.W #$0000                                                         ;8B89A5;
    STA.W Mode7Transfer.inc,X                                            ;8B89A8;
    TXA                                                                  ;8B89AB;
    CLC                                                                  ;8B89AC;
    ADC.W #$0009                                                         ;8B89AD;
    TAX                                                                  ;8B89B0;
    TYA                                                                  ;8B89B1;
    CLC                                                                  ;8B89B2;
    ADC.W DP_Temp12                                                      ;8B89B3;
    TAY                                                                  ;8B89B6;
    LDA.W DP_Temp16                                                      ;8B89B7;
    CLC                                                                  ;8B89BA;
    ADC.W #$0080                                                         ;8B89BB;
    STA.W DP_Temp16                                                      ;8B89BE;
    DEC.W DP_Temp14                                                      ;8B89C1;
    BEQ .return                                                          ;8B89C4;
    BRA .loop                                                            ;8B89C6;

  .return:
    STX.W Mode7Stack                                                     ;8B89C8;
    PLY                                                                  ;8B89CB;
    PLX                                                                  ;8B89CC;
    PLP                                                                  ;8B89CD;
    RTS                                                                  ;8B89CE;


;;; $89CF: Unused. Indirect instruction function - draw the [[Y] + 3] x [[Y] + 2] region with column-major tilemap values at [Y] + 4 to mode 7 tilemap ;;;
UNUSED_CinematicBGObjects_IndirectInstructionFunction_8B89CF:
;; Parameters:
;;     X: Cinematic BG object index
;;     Y: Pointer to instruction

; Expects pushed Y, X and PSR
    JSR.W UNUSED_CinematicBGObjects_Mode7TilemapOffsetForTile_8B8A2C     ;8B89CF;
    LDA.W $0002,Y                                                        ;8B89D2;
    AND.W #$00FF                                                         ;8B89D5;
    STA.W DP_Temp12                                                      ;8B89D8;
    LDA.W $0003,Y                                                        ;8B89DB;
    AND.W #$00FF                                                         ;8B89DE;
    STA.W DP_Temp14                                                      ;8B89E1;
    TYA                                                                  ;8B89E4;
    CLC                                                                  ;8B89E5;
    ADC.W #$0004                                                         ;8B89E6;
    TAY                                                                  ;8B89E9;
    LDX.W Mode7Stack                                                     ;8B89EA;

  .loop:
    LDA.W #$0080                                                         ;8B89ED;
    STA.W Mode7Transfer.control,X                                        ;8B89F0;
    TYA                                                                  ;8B89F3;
    STA.W Mode7Transfer.src,X                                            ;8B89F4;
    LDA.W #$008B                                                         ;8B89F7;
    STA.W Mode7Transfer.src+2,X                                          ;8B89FA;
    LDA.W DP_Temp14                                                      ;8B89FD;
    STA.W Mode7Transfer.size,X                                           ;8B8A00;
    LDA.W DP_Temp16                                                      ;8B8A03;
    STA.W Mode7Transfer.dest,X                                           ;8B8A06;
    LDA.W #$0002                                                         ;8B8A09;
    STA.W Mode7Transfer.inc,X                                            ;8B8A0C;
    TXA                                                                  ;8B8A0F;
    CLC                                                                  ;8B8A10;
    ADC.W #$0009                                                         ;8B8A11;
    TAX                                                                  ;8B8A14;
    TYA                                                                  ;8B8A15;
    CLC                                                                  ;8B8A16;
    ADC.W DP_Temp14                                                      ;8B8A17;
    TAY                                                                  ;8B8A1A;
    INC.W DP_Temp16                                                      ;8B8A1B;
    DEC.W DP_Temp12                                                      ;8B8A1E;
    BEQ .return                                                          ;8B8A21;
    BRA .loop                                                            ;8B8A23;

  .return:
    STX.W Mode7Stack                                                     ;8B8A25;
    PLY                                                                  ;8B8A28;
    PLX                                                                  ;8B8A29;
    PLP                                                                  ;8B8A2A;
    RTS                                                                  ;8B8A2B;


;;; $8A2C: Unused. $16 = mode 7 tilemap offset for tile ([$12], [$13]) ;;;
UNUSED_CinematicBGObjects_Mode7TilemapOffsetForTile_8B8A2C:
;; Parameters:
;;     $12: Tile X
;;     $13: Tile Y
;; Returns:
;;     $16: Tilemap offset (in octets). [$13] * 80h + [$12]

; Uses the multiplication registers for some reason
; Only called by unused routines
    LDA.W DP_Temp12                                                      ;8B8A2C;
    AND.W #$00FF                                                         ;8B8A2F;
    STA.W DP_Temp14                                                      ;8B8A32;
    SEP #$20                                                             ;8B8A35;
    LDA.B #$80                                                           ;8B8A37;
    STA.W $4202                                                          ;8B8A39;
    LDA.W DP_Temp13                                                      ;8B8A3C;
    STA.W $4203                                                          ;8B8A3F;
    NOP                                                                  ;8B8A42;
    NOP                                                                  ;8B8A43;
    NOP                                                                  ;8B8A44;
    REP #$20                                                             ;8B8A45;
    LDA.W $4216                                                          ;8B8A47;
    CLC                                                                  ;8B8A4A;
    ADC.W DP_Temp14                                                      ;8B8A4B;
    STA.W DP_Temp16                                                      ;8B8A4E;
    RTS                                                                  ;8B8A51;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $8A52: Calculate position of Samus in rotating elevator room ;;;
Calculate_SamusPosition_InRotatingElevatorRoom:
; Calculates
;     p = p_0 + M⁻¹ (p - p_0)
; where
;     p: Samus position (as a column vector)
;     p_0: Mode 7 transformation origin (as a column vector)
;     M⁻¹: Inverse of the mode 7 transformation matrix

; Given that M is the clockwise rotation matrix of some angle t (see $89:ACC3):
;     M = ( cos(t), sin(t))
;         (-sin(t), cos(t))
; this expands to:
;     x = x_0 + (x - x_0) * cos(t) - (y - y_0) * sin(t)
;     y = y_0 + (x - x_0) * sin(t) + (y - y_0) * cos(t)
; where
;     x,y: Samus position
;     x_0,y_0: Mode 7 transformation origin
    PHP                                                                  ;8B8A52;
    PHB                                                                  ;8B8A53;
    PHK                                                                  ;8B8A54;
    PLB                                                                  ;8B8A55;
    REP #$30                                                             ;8B8A56;
    LDA.W SamusXPosition                                                 ;8B8A58;
    SEC                                                                  ;8B8A5B;
    SBC.B DP_Mode7TransOriginX                                           ;8B8A5C;
    STA.B DP_Temp22                                                      ;8B8A5E;
    LDA.B DP_Mode7TransOriginY                                           ;8B8A60;
    SEC                                                                  ;8B8A62;
    SBC.W SamusYPosition                                                 ;8B8A63;
    STA.B DP_Temp24                                                      ;8B8A66;
    LDA.B DP_Temp22                                                      ;8B8A68;
    STA.B DP_Temp26                                                      ;8B8A6A;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8A6C;
    STA.B DP_Temp28                                                      ;8B8A6E;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8A70;
    SEP #$20                                                             ;8B8A73;
    LDA.B DP_Temp2A                                                      ;8B8A75;
    XBA                                                                  ;8B8A77;
    LDA.B DP_Temp2D                                                      ;8B8A78;
    REP #$20                                                             ;8B8A7A;
    STA.B DP_Temp1A                                                      ;8B8A7C;
    LDA.B DP_Mode7TransMatrixB                                           ;8B8A7E;
    STA.B DP_Temp26                                                      ;8B8A80;
    LDA.B DP_Temp24                                                      ;8B8A82;
    STA.B DP_Temp28                                                      ;8B8A84;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8A86;
    SEP #$20                                                             ;8B8A89;
    LDA.B DP_Temp2A                                                      ;8B8A8B;
    XBA                                                                  ;8B8A8D;
    LDA.B DP_Temp2D                                                      ;8B8A8E;
    REP #$20                                                             ;8B8A90;
    CLC                                                                  ;8B8A92;
    ADC.B DP_Temp1A                                                      ;8B8A93;
    STA.B DP_Temp1A                                                      ;8B8A95;
    LDA.B DP_Mode7TransOriginX                                           ;8B8A97;
    CLC                                                                  ;8B8A99;
    ADC.B DP_Temp1A                                                      ;8B8A9A;
    STA.W SamusXPosition                                                 ;8B8A9C;
    LDA.B DP_Mode7TransMatrixC                                           ;8B8A9F;
    STA.B DP_Temp26                                                      ;8B8AA1;
    LDA.B DP_Temp22                                                      ;8B8AA3;
    STA.B DP_Temp28                                                      ;8B8AA5;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8AA7;
    SEP #$20                                                             ;8B8AAA;
    LDA.B DP_Temp2A                                                      ;8B8AAC;
    XBA                                                                  ;8B8AAE;
    LDA.B DP_Temp2D                                                      ;8B8AAF;
    REP #$20                                                             ;8B8AB1;
    STA.B DP_Temp1A                                                      ;8B8AB3;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8AB5;
    STA.B DP_Temp26                                                      ;8B8AB7;
    LDA.B DP_Temp24                                                      ;8B8AB9;
    STA.B DP_Temp28                                                      ;8B8ABB;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8ABD;
    SEP #$20                                                             ;8B8AC0;
    LDA.B DP_Temp2A                                                      ;8B8AC2;
    XBA                                                                  ;8B8AC4;
    LDA.B DP_Temp2D                                                      ;8B8AC5;
    REP #$20                                                             ;8B8AC7;
    CLC                                                                  ;8B8AC9;
    ADC.B DP_Temp1A                                                      ;8B8ACA;
    STA.B DP_Temp1A                                                      ;8B8ACC;
    LDA.B DP_Mode7TransOriginY                                           ;8B8ACE;
    SEC                                                                  ;8B8AD0;
    SBC.B DP_Temp1A                                                      ;8B8AD1;
    STA.W SamusYPosition                                                 ;8B8AD3;
    PLB                                                                  ;8B8AD6;
    PLP                                                                  ;8B8AD7;
    RTL                                                                  ;8B8AD8;


;;; $8AD9: Calculate position of projectile in rotating elevator room ;;;
Calculate_ProjectilePosition_InRotatingElevatorRoom:
;; Parameters:
;;     X: Projectile index
;; Returns:
;      $12: Y position on screen
;      $14: X position on screen
    PHP                                                                  ;8B8AD9;
    PHB                                                                  ;8B8ADA;
    PHK                                                                  ;8B8ADB;
    PLB                                                                  ;8B8ADC;
    REP #$30                                                             ;8B8ADD;
    LDA.W SamusProjectile_XPositions,X                                   ;8B8ADF;
    SEC                                                                  ;8B8AE2;
    SBC.B DP_Mode7TransOriginX                                           ;8B8AE3;
    STA.B DP_Temp22                                                      ;8B8AE5;
    LDA.B DP_Mode7TransOriginY                                           ;8B8AE7;
    SEC                                                                  ;8B8AE9;
    SBC.W SamusProjectile_YPositions,X                                   ;8B8AEA;
    STA.B DP_Temp24                                                      ;8B8AED;
    LDA.B DP_Temp22                                                      ;8B8AEF;
    STA.B DP_Temp26                                                      ;8B8AF1;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8AF3;
    STA.B DP_Temp28                                                      ;8B8AF5;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8AF7;
    SEP #$20                                                             ;8B8AFA;
    LDA.B DP_Temp2A                                                      ;8B8AFC;
    XBA                                                                  ;8B8AFE;
    LDA.B DP_Temp2D                                                      ;8B8AFF;
    REP #$20                                                             ;8B8B01;
    STA.B DP_Temp1A                                                      ;8B8B03;
    LDA.B DP_Mode7TransMatrixB                                           ;8B8B05;
    STA.B DP_Temp26                                                      ;8B8B07;
    LDA.B DP_Temp24                                                      ;8B8B09;
    STA.B DP_Temp28                                                      ;8B8B0B;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8B0D;
    SEP #$20                                                             ;8B8B10;
    LDA.B DP_Temp2A                                                      ;8B8B12;
    XBA                                                                  ;8B8B14;
    LDA.B DP_Temp2D                                                      ;8B8B15;
    REP #$20                                                             ;8B8B17;
    CLC                                                                  ;8B8B19;
    ADC.B DP_Temp1A                                                      ;8B8B1A;
    STA.B DP_Temp1A                                                      ;8B8B1C;
    LDA.B DP_Mode7TransOriginX                                           ;8B8B1E;
    CLC                                                                  ;8B8B20;
    ADC.B DP_Temp1A                                                      ;8B8B21;
    SEC                                                                  ;8B8B23;
    SBC.W Layer1XPosition                                                ;8B8B24;
    STA.B DP_Temp14                                                      ;8B8B27;
    LDA.B DP_Mode7TransMatrixC                                           ;8B8B29;
    STA.B DP_Temp26                                                      ;8B8B2B;
    LDA.B DP_Temp22                                                      ;8B8B2D;
    STA.B DP_Temp28                                                      ;8B8B2F;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8B31;
    SEP #$20                                                             ;8B8B34;
    LDA.B DP_Temp2A                                                      ;8B8B36;
    XBA                                                                  ;8B8B38;
    LDA.B DP_Temp2D                                                      ;8B8B39;
    REP #$20                                                             ;8B8B3B;
    STA.B DP_Temp1A                                                      ;8B8B3D;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8B3F;
    STA.B DP_Temp26                                                      ;8B8B41;
    LDA.B DP_Temp24                                                      ;8B8B43;
    STA.B DP_Temp28                                                      ;8B8B45;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8B47;
    SEP #$20                                                             ;8B8B4A;
    LDA.B DP_Temp2A                                                      ;8B8B4C;
    XBA                                                                  ;8B8B4E;
    LDA.B DP_Temp2D                                                      ;8B8B4F;
    REP #$20                                                             ;8B8B51;
    CLC                                                                  ;8B8B53;
    ADC.B DP_Temp1A                                                      ;8B8B54;
    STA.B DP_Temp1A                                                      ;8B8B56;
    LDA.B DP_Mode7TransOriginY                                           ;8B8B58;
    SEC                                                                  ;8B8B5A;
    SBC.B DP_Temp1A                                                      ;8B8B5B;
    SEC                                                                  ;8B8B5D;
    SBC.W Layer1YPosition                                                ;8B8B5E;
    STA.B DP_Temp12                                                      ;8B8B61;
    PLB                                                                  ;8B8B63;
    PLP                                                                  ;8B8B64;
    RTL                                                                  ;8B8B65;


;;; $8B66: Calculate position of Ceres steam in rotating elevator room ;;;
Calculate_CeresSteamPosition_InRotatingElevatorRoom:
;; Parameters:
;      $12: X position
;      $14: Y position
;; Returns:
;      $12: X position
;      $14: Y position

; This should be the only one of these functions, the others could just call this one >_<;
    PHP                                                                  ;8B8B66;
    PHB                                                                  ;8B8B67;
    PHK                                                                  ;8B8B68;
    PLB                                                                  ;8B8B69;
    REP #$30                                                             ;8B8B6A;
    LDA.B DP_Temp12                                                      ;8B8B6C;
    SEC                                                                  ;8B8B6E;
    SBC.B DP_Mode7TransOriginX                                           ;8B8B6F;
    STA.B DP_Temp22                                                      ;8B8B71;
    LDA.B DP_Mode7TransOriginY                                           ;8B8B73;
    SEC                                                                  ;8B8B75;
    SBC.B DP_Temp14                                                      ;8B8B76;
    STA.B DP_Temp24                                                      ;8B8B78;
    LDA.B DP_Temp22                                                      ;8B8B7A;
    STA.B DP_Temp26                                                      ;8B8B7C;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8B7E;
    STA.B DP_Temp28                                                      ;8B8B80;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8B82;
    SEP #$20                                                             ;8B8B85;
    LDA.B DP_Temp2A                                                      ;8B8B87;
    XBA                                                                  ;8B8B89;
    LDA.B DP_Temp2D                                                      ;8B8B8A;
    REP #$20                                                             ;8B8B8C;
    STA.B DP_Temp1A                                                      ;8B8B8E;
    LDA.B DP_Mode7TransMatrixB                                           ;8B8B90;
    STA.B DP_Temp26                                                      ;8B8B92;
    LDA.B DP_Temp24                                                      ;8B8B94;
    STA.B DP_Temp28                                                      ;8B8B96;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8B98;
    SEP #$20                                                             ;8B8B9B;
    LDA.B DP_Temp2A                                                      ;8B8B9D;
    XBA                                                                  ;8B8B9F;
    LDA.B DP_Temp2D                                                      ;8B8BA0;
    REP #$20                                                             ;8B8BA2;
    CLC                                                                  ;8B8BA4;
    ADC.B DP_Temp1A                                                      ;8B8BA5;
    STA.B DP_Temp1A                                                      ;8B8BA7;
    LDA.B DP_Mode7TransOriginX                                           ;8B8BA9;
    CLC                                                                  ;8B8BAB;
    ADC.B DP_Temp1A                                                      ;8B8BAC;
    STA.B DP_Temp12                                                      ;8B8BAE;
    LDA.B DP_Mode7TransMatrixC                                           ;8B8BB0;
    STA.B DP_Temp26                                                      ;8B8BB2;
    LDA.B DP_Temp22                                                      ;8B8BB4;
    STA.B DP_Temp28                                                      ;8B8BB6;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8BB8;
    SEP #$20                                                             ;8B8BBB;
    LDA.B DP_Temp2A                                                      ;8B8BBD;
    XBA                                                                  ;8B8BBF;
    LDA.B DP_Temp2D                                                      ;8B8BC0;
    REP #$20                                                             ;8B8BC2;
    STA.B DP_Temp1A                                                      ;8B8BC4;
    LDA.B DP_Mode7TransMatrixA                                           ;8B8BC6;
    STA.B DP_Temp26                                                      ;8B8BC8;
    LDA.B DP_Temp24                                                      ;8B8BCA;
    STA.B DP_Temp28                                                      ;8B8BCC;
    JSR.W Multiplication_16bitSigned_8B858F                              ;8B8BCE;
    SEP #$20                                                             ;8B8BD1;
    LDA.B DP_Temp2A                                                      ;8B8BD3;
    XBA                                                                  ;8B8BD5;
    LDA.B DP_Temp2D                                                      ;8B8BD6;
    REP #$20                                                             ;8B8BD8;
    CLC                                                                  ;8B8BDA;
    ADC.B DP_Temp1A                                                      ;8B8BDB;
    STA.B DP_Temp1A                                                      ;8B8BDD;
    LDA.B DP_Mode7TransOriginY                                           ;8B8BDF;
    SEC                                                                  ;8B8BE1;
    SBC.B DP_Temp1A                                                      ;8B8BE2;
    STA.B DP_Temp14                                                      ;8B8BE4;
    PLB                                                                  ;8B8BE6;
    PLP                                                                  ;8B8BE7;
    RTL                                                                  ;8B8BE8;


;;; $8BE9: Copy current palettes to fading palettes ;;;
PaletteCrossFading_CopyCurrentPalettesToFadingPalettes:
; Temporarily changes DB to $7F for absolutely no reason!
    PHP                                                                  ;8B8BE9;
    PHB                                                                  ;8B8BEA;
    SEP #$30                                                             ;8B8BEB;
    LDA.B #$7F                                                           ;8B8BED;
    PHA                                                                  ;8B8BEF;
    PLB                                                                  ;8B8BF0;
    REP #$30                                                             ;8B8BF1;
    LDY.W #$0100                                                         ;8B8BF3;
    LDX.W #$0000                                                         ;8B8BF6;

  .loop:
    LDA.L Palettes,X                                                     ;8B8BF9;
    STA.L FadingPalettes_Initial,X                                       ;8B8BFD;
    INX                                                                  ;8B8C01;
    INX                                                                  ;8B8C02;
    DEY                                                                  ;8B8C03;
    BNE .loop                                                            ;8B8C04;
    PLB                                                                  ;8B8C06;
    PLP                                                                  ;8B8C07;
    RTS                                                                  ;8B8C08;


;;; $8C09: Decompose palette data for fading ;;;
PaletteCrossFading_DecomposePaletteDataForFading:
    PHP                                                                  ;8B8C09;
    PHB                                                                  ;8B8C0A;
    SEP #$30                                                             ;8B8C0B;
    LDA.B #$7F                                                           ;8B8C0D;
    PHA                                                                  ;8B8C0F;
    PLB                                                                  ;8B8C10;
    REP #$30                                                             ;8B8C11;
    LDX.W #$0000                                                         ;8B8C13;
    LDY.W #$0100                                                         ;8B8C16;

  .loop:
    LDA.L FadingPalettes_Initial,X                                       ;8B8C19;
    STA.B DP_Temp12                                                      ;8B8C1D;
    AND.W #$001F                                                         ;8B8C1F;
    XBA                                                                  ;8B8C22;
    STA.L FadingPalettes_Red,X                                           ;8B8C23;
    XBA                                                                  ;8B8C27;
    ASL                                                                  ;8B8C28;
    ASL                                                                  ;8B8C29;
    ASL                                                                  ;8B8C2A;
    STA.L FadingPalettes_DeltaRed,X                                      ;8B8C2B;
    LDA.B DP_Temp12                                                      ;8B8C2F;
    AND.W #$03E0                                                         ;8B8C31;
    ASL                                                                  ;8B8C34;
    ASL                                                                  ;8B8C35;
    ASL                                                                  ;8B8C36;
    STA.L FadingPalettes_Green,X                                         ;8B8C37;
    XBA                                                                  ;8B8C3B;
    ASL                                                                  ;8B8C3C;
    ASL                                                                  ;8B8C3D;
    ASL                                                                  ;8B8C3E;
    STA.L FadingPalettes_DeltaGreen,X                                    ;8B8C3F;
    LDA.B DP_Temp12                                                      ;8B8C43;
    AND.W #$7C00                                                         ;8B8C45;
    LSR                                                                  ;8B8C48;
    LSR                                                                  ;8B8C49;
    STA.L FadingPalettes_Blue,X                                          ;8B8C4A;
    XBA                                                                  ;8B8C4E;
    ASL                                                                  ;8B8C4F;
    ASL                                                                  ;8B8C50;
    ASL                                                                  ;8B8C51;
    STA.L FadingPalettes_DeltaBlue,X                                     ;8B8C52;
    INX                                                                  ;8B8C56;
    INX                                                                  ;8B8C57;
    DEY                                                                  ;8B8C58;
    BNE .loop                                                            ;8B8C59;
    PLB                                                                  ;8B8C5B;
    PLP                                                                  ;8B8C5C;
    RTS                                                                  ;8B8C5D;


;;; $8C5E: Clear [Y] colours starting from colour index [X] ;;;
PaletteCrossFading_ClearYColorsStartingFromColorIndexX:
;; Parameters:
;;     X: Colour index
;;     Y: Number of colours
    PHP                                                                  ;8B8C5E;
    PHB                                                                  ;8B8C5F;
    SEP #$20                                                             ;8B8C60;
    LDA.B #$7F                                                           ;8B8C62;
    PHA                                                                  ;8B8C64;
    PLB                                                                  ;8B8C65;
    REP #$30                                                             ;8B8C66;

  .loop:
    LDA.W #$0000                                                         ;8B8C68;
    STA.L FadingPalettes_Initial,X                                       ;8B8C6B;
    STA.L FadingPalettes_Red,X                                           ;8B8C6F;
    STA.L FadingPalettes_Green,X                                         ;8B8C73;
    STA.L FadingPalettes_Blue,X                                          ;8B8C77;
    INX                                                                  ;8B8C7B;
    INX                                                                  ;8B8C7C;
    DEY                                                                  ;8B8C7D;
    BNE .loop                                                            ;8B8C7E;
    PLB                                                                  ;8B8C80;
    PLP                                                                  ;8B8C81;
    RTS                                                                  ;8B8C82;


;;; $8C83: Fade out [Y] colours starting from colour index [X] ;;;
PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX:
;; Parameters:
;;     X: Colour index
;;     Y: Number of colours
    PHP                                                                  ;8B8C83;

  .loop:
    LDA.L FadingPalettes_Red,X                                           ;8B8C84;
    SEC                                                                  ;8B8C88;
    SBC.L FadingPalettes_DeltaRed,X                                      ;8B8C89;
    STA.L FadingPalettes_Red,X                                           ;8B8C8D;
    LDA.L FadingPalettes_Green,X                                         ;8B8C91;
    SEC                                                                  ;8B8C95;
    SBC.L FadingPalettes_DeltaGreen,X                                    ;8B8C96;
    STA.L FadingPalettes_Green,X                                         ;8B8C9A;
    LDA.L FadingPalettes_Blue,X                                          ;8B8C9E;
    SEC                                                                  ;8B8CA2;
    SBC.L FadingPalettes_DeltaBlue,X                                     ;8B8CA3;
    STA.L FadingPalettes_Blue,X                                          ;8B8CA7;
    INX                                                                  ;8B8CAB;
    INX                                                                  ;8B8CAC;
    DEY                                                                  ;8B8CAD;
    BNE .loop                                                            ;8B8CAE;
    PLP                                                                  ;8B8CB0;
    RTS                                                                  ;8B8CB1;


;;; $8CB2: Fade in [Y] colours starting from colour index [X] ;;;
PaletteCrossFading_FadeInYColorsStartingFromColorIndexX:
;; Parameters:
;;     X: Colour index
;;     Y: Number of colours
    PHP                                                                  ;8B8CB2;

  .loop:
    LDA.L FadingPalettes_Red,X                                           ;8B8CB3;
    CLC                                                                  ;8B8CB7;
    ADC.L FadingPalettes_DeltaRed,X                                      ;8B8CB8;
    AND.W #$1FFF                                                         ;8B8CBC;
    STA.L FadingPalettes_Red,X                                           ;8B8CBF;
    LDA.L FadingPalettes_Green,X                                         ;8B8CC3;
    CLC                                                                  ;8B8CC7;
    ADC.L FadingPalettes_DeltaGreen,X                                    ;8B8CC8;
    AND.W #$1FFF                                                         ;8B8CCC;
    STA.L FadingPalettes_Green,X                                         ;8B8CCF;
    LDA.L FadingPalettes_Blue,X                                          ;8B8CD3;
    CLC                                                                  ;8B8CD7;
    ADC.L FadingPalettes_DeltaBlue,X                                     ;8B8CD8;
    AND.W #$1FFF                                                         ;8B8CDC;
    STA.L FadingPalettes_Blue,X                                          ;8B8CDF;
    INX                                                                  ;8B8CE3;
    INX                                                                  ;8B8CE4;
    DEY                                                                  ;8B8CE5;
    BNE .loop                                                            ;8B8CE6;
    PLP                                                                  ;8B8CE8;
    RTS                                                                  ;8B8CE9;


;;; $8CEA: Compose fading palettes ;;;
PaletteCrossFading_ComposeFadingPalettes:
    PHP                                                                  ;8B8CEA;
    LDX.W #$0000                                                         ;8B8CEB;
    LDY.W #$0100                                                         ;8B8CEE;

  .loop:
    LDA.L FadingPalettes_Red,X                                           ;8B8CF1;
    XBA                                                                  ;8B8CF5;
    AND.W #$001F                                                         ;8B8CF6;
    STA.B DP_Temp12                                                      ;8B8CF9;
    LDA.L FadingPalettes_Green,X                                         ;8B8CFB;
    LSR                                                                  ;8B8CFF;
    LSR                                                                  ;8B8D00;
    LSR                                                                  ;8B8D01;
    AND.W #$03E0                                                         ;8B8D02;
    ORA.B DP_Temp12                                                      ;8B8D05;
    STA.B DP_Temp12                                                      ;8B8D07;
    LDA.L FadingPalettes_Blue,X                                          ;8B8D09;
    ASL                                                                  ;8B8D0D;
    ASL                                                                  ;8B8D0E;
    AND.W #$7C00                                                         ;8B8D0F;
    ORA.B DP_Temp12                                                      ;8B8D12;
    STA.L FadingPalettes,X                                               ;8B8D14;
    STA.L Palettes,X                                                     ;8B8D18;
    INX                                                                  ;8B8D1C;
    INX                                                                  ;8B8D1D;
    DEY                                                                  ;8B8D1E;
    BNE .loop                                                            ;8B8D1F;
    PLP                                                                  ;8B8D21;
    RTS                                                                  ;8B8D22;


if !PAL == 0
;;; $8D23: Load Japanese intro text tiles ;;;
LoadIntroSubtitleTiles:
;; Parameters:
;;     Y: Pointer to Japanese intro text data

; Format:
;     dddd,nnnn
;     tttt,bbbb
;     tttt,bbbb
;     ...
; where
;     d: Japanese text tiles destination offset ($7E:4000/4300 + d)
;     n: Number of characters
;     t: Top Japanese text tiles source offset ($7F:A000 + t)
;     b: Bottom Japanese text tiles source offset ($7F:A000 + b)
    PHP                                                                  ;8B8D23;
    REP #$30                                                             ;8B8D24;
    PHX                                                                  ;8B8D26;
    LDA.W $0000,Y                                                        ;8B8D27;
    TAX                                                                  ;8B8D2A;
    LDA.W $0002,Y                                                        ;8B8D2B;
    STA.B DP_Temp12                                                      ;8B8D2E;

  .loop:
    LDA.W $0004,Y                                                        ;8B8D30;
    STA.B DP_Temp16                                                      ;8B8D33;
    PHY                                                                  ;8B8D35;
    LDA.W #$A000                                                         ;8B8D36;
    CLC                                                                  ;8B8D39;
    ADC.B DP_Temp16                                                      ;8B8D3A;
    TAY                                                                  ;8B8D3C;
    PHB                                                                  ;8B8D3D;
    PEA.W $7F00                                                          ;8B8D3E;
    PLB                                                                  ;8B8D41;
    PLB                                                                  ;8B8D42;
    LDA.W $0000,Y                                                        ;8B8D43;
    STA.L IntroBG3SubtitleTiles,X                                        ;8B8D46;
    LDA.W $0002,Y                                                        ;8B8D4A;
    STA.L IntroBG3SubtitleTiles+2,X                                      ;8B8D4D;
    LDA.W $0004,Y                                                        ;8B8D51;
    STA.L IntroBG3SubtitleTiles+4,X                                      ;8B8D54;
    LDA.W $0006,Y                                                        ;8B8D58;
    STA.L IntroBG3SubtitleTiles+6,X                                      ;8B8D5B;
    LDA.W $0008,Y                                                        ;8B8D5F;
    STA.L IntroBG3SubtitleTiles+8,X                                      ;8B8D62;
    LDA.W $000A,Y                                                        ;8B8D66;
    STA.L IntroBG3SubtitleTiles+$A,X                                     ;8B8D69;
    LDA.W $000C,Y                                                        ;8B8D6D;
    STA.L IntroBG3SubtitleTiles+$C,X                                     ;8B8D70;
    LDA.W $000E,Y                                                        ;8B8D74;
    STA.L IntroBG3SubtitleTiles+$E,X                                     ;8B8D77;
    PLB                                                                  ;8B8D7B;
    PLY                                                                  ;8B8D7C;
    LDA.W $0006,Y                                                        ;8B8D7D;
    STA.B DP_Temp16                                                      ;8B8D80;
    TXA                                                                  ;8B8D82;
    CLC                                                                  ;8B8D83;
    ADC.W #$0300                                                         ;8B8D84;
    TAX                                                                  ;8B8D87;
    PHY                                                                  ;8B8D88;
    LDA.W #$A000                                                         ;8B8D89;
    CLC                                                                  ;8B8D8C;
    ADC.B DP_Temp16                                                      ;8B8D8D;
    TAY                                                                  ;8B8D8F;
    PHB                                                                  ;8B8D90;
    PEA.W $7F00                                                          ;8B8D91;
    PLB                                                                  ;8B8D94;
    PLB                                                                  ;8B8D95;
    LDA.W $0000,Y                                                        ;8B8D96;
    STA.L IntroBG3SubtitleTiles,X                                        ;8B8D99;
    LDA.W $0002,Y                                                        ;8B8D9D;
    STA.L IntroBG3SubtitleTiles+2,X                                      ;8B8DA0;
    LDA.W $0004,Y                                                        ;8B8DA4;
    STA.L IntroBG3SubtitleTiles+4,X                                      ;8B8DA7;
    LDA.W $0006,Y                                                        ;8B8DAB;
    STA.L IntroBG3SubtitleTiles+6,X                                      ;8B8DAE;
    LDA.W $0008,Y                                                        ;8B8DB2;
    STA.L IntroBG3SubtitleTiles+8,X                                      ;8B8DB5;
    LDA.W $000A,Y                                                        ;8B8DB9;
    STA.L IntroBG3SubtitleTiles+$A,X                                     ;8B8DBC;
    LDA.W $000C,Y                                                        ;8B8DC0;
    STA.L IntroBG3SubtitleTiles+$C,X                                     ;8B8DC3;
    LDA.W $000E,Y                                                        ;8B8DC7;
    STA.L IntroBG3SubtitleTiles+$E,X                                     ;8B8DCA;
    PLB                                                                  ;8B8DCE;
    PLY                                                                  ;8B8DCF;
    TXA                                                                  ;8B8DD0;
    SEC                                                                  ;8B8DD1;
    SBC.W #$02F0                                                         ;8B8DD2;
    TAX                                                                  ;8B8DD5;
    TYA                                                                  ;8B8DD6;
    CLC                                                                  ;8B8DD7;
    ADC.W #$0004                                                         ;8B8DD8;
    TAY                                                                  ;8B8DDB;
    DEC.B DP_Temp12                                                      ;8B8DDC;
    BEQ .return                                                          ;8B8DDE;
    JMP.W .loop                                                          ;8B8DE0;

  .return:
    PLX                                                                  ;8B8DE3;
    PLP                                                                  ;8B8DE4;
    RTS                                                                  ;8B8DE5;


;;; $8DE6: Transfer Japanese text tiles to VRAM ;;;
TransferSubtitleTilesToVRAM:
; Queue transfer of $7E:4000..45FF to VRAM $4180..447F
    PHX                                                                  ;8B8DE6;
    LDX.W VRAMWriteStack                                                 ;8B8DE7;
    LDA.W #$0600                                                         ;8B8DEA;
    STA.B VRAMWrite.size,X                                               ;8B8DED;
    INX                                                                  ;8B8DEF;
    INX                                                                  ;8B8DF0;
    LDA.W #IntroBG3SubtitleTiles                                         ;8B8DF1;
    STA.B VRAMWrite.size,X                                               ;8B8DF4;
    INX                                                                  ;8B8DF6;
    INX                                                                  ;8B8DF7;
    SEP #$20                                                             ;8B8DF8;
    LDA.B #IntroBG3SubtitleTiles>>16                                     ;8B8DFA;
    STA.B VRAMWrite.size,X                                               ;8B8DFC;
    REP #$20                                                             ;8B8DFE;
    INX                                                                  ;8B8E00;
    LDA.W #$4180                                                         ;8B8E01;
    STA.B VRAMWrite.size,X                                               ;8B8E04;
    INX                                                                  ;8B8E06;
    INX                                                                  ;8B8E07;
    STX.W VRAMWriteStack                                                 ;8B8E08;
    PLX                                                                  ;8B8E0B;
    RTS                                                                  ;8B8E0C;
else
LoadIntroSubtitleTilemapTopRow:
;; Parameters:
;;     $00: Subtitle text data. Bank $7F
;;     $12: Size (in bytes)
    PHP
    SEP #$30
    LDA.B #IntroSubtitleTilemaps>>$10
    STA.B DP_Temp00+2
    REP #$30
    PHX
    PHY
    LDY.W #$0000
    LDX.W #$0000

  .loop:
    LDA.B [DP_Temp00],Y
    CMP.W #$002F
    BEQ .space
    ORA.W #$2000
    STA.L CinematicBGTilemap_Subtitles_TopRow,X
    BRA .next

  .space
    LDA.W #$3029
    STA.L CinematicBGTilemap_Subtitles_TopRow,X

  .next
    INY
    INY
    INX
    INX
    CPX.B DP_Temp12
    BMI .loop
    PLY
    PLX
    PLP
    RTS


LoadIntroSubtitleTilemapBottomRow:
;; Parameters:
;;     $00: Subtitle text data. Bank $7F
;;     $12: Size (in bytes)
    PHP
    SEP #$30
    LDA.B #IntroSubtitleTilemaps>>$10
    STA.B DP_Temp00+2
    REP #$30
    PHX
    PHY
    LDY.W #$0000
    LDX.W #$0000

  .loop:
    LDA.B [DP_Temp00],Y
    CMP.W #$002F
    BEQ +
    ORA.W #$2000
    STA.L CinematicBGTilemap_Subtitles_BottomRow,X
    BRA ++

+   LDA.W #$3029
    STA.L CinematicBGTilemap_Subtitles_BottomRow,X

++  INY
    INY
    INX
    INX
    CPX.B DP_Temp12
    BMI .loop
    PLY
    PLX
    PLP
    RTS


TransferIntroSubtitleTilemapToVRAM:
; Queue transfer of $7E:3600..FF to VRAM $4F00..7F
; This function is called only to clear the subtitle tilemap,
; other tilemap transfers are handled by the usual cinematic BG handler
; In fact, the usual cinematic BG handler seems to be fully capable of clearing the tilemap too,
; making this function completely redundant
    PHP
    REP #$30
    PHX
    LDX.W VRAMWriteStack
    LDA.W #CinematicBGTilemap_Subtitles_End-CinematicBGTilemap_Subtitles
    STA.B VRAMWrite.size,X
    INX
    INX
    LDA.W #CinematicBGTilemap_Subtitles
    STA.B VRAMWrite.size,X ; Actually src
    INX
    INX
    SEP #$20
    LDA.B #CinematicBGTilemap_Subtitles>>16
    STA.B VRAMWrite.size,X ; Actually src+2
    REP #$20
    INX
    LDA.W #$4F00
    STA.B VRAMWrite.size,X ; Actually dest
    INX
    INX
    STX.W VRAMWriteStack
    PLX
    PLP
    RTS
endif


;;; $8E0D: Handle Samus during intro ;;;
HandleSamusDuringIntro:
    LDA.W IntroSamusDisplayFlag                                          ;8B8E0D;
    BEQ .return                                                          ;8B8E10;
    JSL.L SamusCurrentStateHandler                                       ;8B8E12;
    JSL.L SamusNewStateHandler                                           ;8B8E16;
    LDA.W SamusInvincibilityTimer                                        ;8B8E1A;
    BEQ .handleKnockback                                                 ;8B8E1D;
    DEC                                                                  ;8B8E1F;
    STA.W SamusInvincibilityTimer                                        ;8B8E20;

  .handleKnockback:
    LDA.W SamusKnockbackTimer                                            ;8B8E23;
    BEQ .return                                                          ;8B8E26;
    DEC                                                                  ;8B8E28;
    STA.W SamusKnockbackTimer                                            ;8B8E29;

  .return:
    RTS                                                                  ;8B8E2C;


;;; $8E2D: Draw intro sprites ;;;
DrawIntroSprites:
    LDA.W IntroSamusDisplayFlag                                          ;8B8E2D;
    BEQ .noSamus                                                         ;8B8E30;
    BMI .samusPriority                                                   ;8B8E32;
    JSR.W Draw_CinematicSpriteObjects_IntroTitleSequence                 ;8B8E34;
    JSL.L DrawSamusAndProjectiles                                        ;8B8E37;
    JSL.L DrawProjectiles                                                ;8B8E3B;
    BRA .return                                                          ;8B8E3F;

  .samusPriority:
    JSL.L DrawSamusAndProjectiles                                        ;8B8E41;
    JSL.L DrawProjectiles                                                ;8B8E45;
    JSR.W Draw_CinematicSpriteObjects_IntroTitleSequence                 ;8B8E49;
    BRA .return                                                          ;8B8E4C;

  .noSamus:
    JSR.W Draw_CinematicSpriteObjects_IntroTitleSequence                 ;8B8E4E;

  .return:
    RTS                                                                  ;8B8E51;


if !FEATURE_KEEP_UNREFERENCED
;;; $8E52: Unused. Calculate X/Y components of radius [A] angle [Y] ;;;
UNUSED_CalculateXYComponentsOfRadiusAAngleY_8B8E52:
;; Parameters:
;;     A: Radius
;;     Y: Angle * 2. Origin = up, positive direction = clockwise
;; Returns:
;;     $14: X component of radius
;;     $16: Y component of radius

; Clone of $86:9BA2
    PHP                                                                  ;8B8E52;
    REP #$30                                                             ;8B8E53;
    PHX                                                                  ;8B8E55;
    STA.B DP_Temp18                                                      ;8B8E56;
    TYA                                                                  ;8B8E58;
    STA.B DP_Temp1A                                                      ;8B8E59;
    CMP.W #$0080                                                         ;8B8E5B;
    BPL +                                                                ;8B8E5E;
    ASL                                                                  ;8B8E60;
    TAX                                                                  ;8B8E61;
    JSR.W UNUSED_Math_8B8EA3                                             ;8B8E62;
    BRA .storeXComponent                                                 ;8B8E65;

+   SEC                                                                  ;8B8E67;
    SBC.W #$0080                                                         ;8B8E68;
    AND.W #$00FF                                                         ;8B8E6B;
    ASL                                                                  ;8B8E6E;
    TAX                                                                  ;8B8E6F;
    JSR.W UNUSED_Math_8B8EA3                                             ;8B8E70;
    EOR.W #$FFFF                                                         ;8B8E73;
    INC                                                                  ;8B8E76;

  .storeXComponent:
    STA.B DP_Temp14                                                      ;8B8E77;
    LDA.B DP_Temp1A                                                      ;8B8E79;
    SEC                                                                  ;8B8E7B;
    SBC.W #$0040                                                         ;8B8E7C;
    AND.W #$00FF                                                         ;8B8E7F;
    CMP.W #$0080                                                         ;8B8E82;
    BPL +                                                                ;8B8E85;
    ASL                                                                  ;8B8E87;
    TAX                                                                  ;8B8E88;
    JSR.W UNUSED_Math_8B8EA3                                             ;8B8E89;
    BRA .storeYComponent                                                 ;8B8E8C;

+   SEC                                                                  ;8B8E8E;
    SBC.W #$0080                                                         ;8B8E8F;
    AND.W #$00FF                                                         ;8B8E92;
    ASL                                                                  ;8B8E95;
    TAX                                                                  ;8B8E96;
    JSR.W UNUSED_Math_8B8EA3                                             ;8B8E97;
    EOR.W #$FFFF                                                         ;8B8E9A;
    INC                                                                  ;8B8E9D;

  .storeYComponent:
    STA.B DP_Temp16                                                      ;8B8E9E;
    PLX                                                                  ;8B8EA0;
    PLP                                                                  ;8B8EA1;
    RTS                                                                  ;8B8EA2;


;;; $8EA3: A = [$18] * sin([X] / 2 * pi / 80h) ;;;
UNUSED_Math_8B8EA3:
;; Parameters:
;;     X: Angle * 2
;;     $18: Radius
;; Returns:
;;     A: Sine component

; Clone of $86:9BF3
; Only called by above unused routine
    SEP #$20                                                             ;8B8EA3;
    LDA.L SineCosineTables_8bitSine_SignExtended,X                       ;8B8EA5;
    STA.W $4202                                                          ;8B8EA9;
    LDA.B DP_Temp18                                                      ;8B8EAC;
    STA.W $4203                                                          ;8B8EAE;
    NOP                                                                  ;8B8EB1;
    NOP                                                                  ;8B8EB2;
    NOP                                                                  ;8B8EB3;
    REP #$20                                                             ;8B8EB4;
    LDA.W $4216                                                          ;8B8EB6;
    XBA                                                                  ;8B8EB9;
    AND.W #$00FF                                                         ;8B8EBA;
    STA.B DP_Temp12                                                      ;8B8EBD;
    SEP #$20                                                             ;8B8EBF;
    LDA.L SineCosineTables_8bitSine_SignExtended+1,X                     ;8B8EC1;
    STA.W $4202                                                          ;8B8EC5;
    LDA.B DP_Temp18                                                      ;8B8EC8;
    STA.W $4203                                                          ;8B8ECA;
    NOP                                                                  ;8B8ECD;
    NOP                                                                  ;8B8ECE;
    NOP                                                                  ;8B8ECF;
    REP #$20                                                             ;8B8ED0;
    LDA.W $4216                                                          ;8B8ED2;
    CLC                                                                  ;8B8ED5;
    ADC.B DP_Temp12                                                      ;8B8ED6;
    RTS                                                                  ;8B8ED8;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $8ED9: Move unused sprites off-screen ;;;
MoveUnusedSpritesOffScreen:
; Move unused sprites to X = 180h
; Uses one hell of an unrolled loop
; TODO: this might be buggy for [OAM stack pointer] = 1FCh
    PHP                                                                  ;8B8ED9;
    REP #$30                                                             ;8B8EDA;
    LDA.W OAMStack                                                       ;8B8EDC;
    CMP.W #$0200                                                         ;8B8EDF;
    BPL .return                                                          ;8B8EE2;
    LSR                                                                  ;8B8EE4;
    LSR                                                                  ;8B8EE5;
    PHA                                                                  ;8B8EE6;
    AND.W #$0007                                                         ;8B8EE7;
    ASL                                                                  ;8B8EEA;
    TAY                                                                  ;8B8EEB;
    PLA                                                                  ;8B8EEC;
    LSR                                                                  ;8B8EED;
    LSR                                                                  ;8B8EEE;
    TAX                                                                  ;8B8EEF;
    LDA.W OAMHigh,X                                                      ;8B8EF0;
    ORA.W .Xpos,Y                                                        ;8B8EF3;
    STA.W OAMHigh,X                                                      ;8B8EF6;
    CPX.W #$001E                                                         ;8B8EF9;
    BPL .setXpos                                                         ;8B8EFC;
    INX                                                                  ;8B8EFE;
    INX                                                                  ;8B8EFF;

  .loop:
    LDA.W #$5555                                                         ;8B8F00;
    STA.W OAMHigh,X                                                      ;8B8F03;
    INX                                                                  ;8B8F06;
    INX                                                                  ;8B8F07;
    CPX.W #$0020                                                         ;8B8F08;
    BMI .loop                                                            ;8B8F0B;

  .setXpos:
    LDA.W OAMStack                                                       ;8B8F0D;
    LSR                                                                  ;8B8F10;
    STA.B DP_Temp12                                                      ;8B8F11;
    LSR                                                                  ;8B8F13;
    ADC.B DP_Temp12                                                      ;8B8F14;
    CLC                                                                  ;8B8F16;
    ADC.W #.moveAllSprites                                               ;8B8F17;
    STA.B DP_Temp12                                                      ;8B8F1A;
    LDA.W #$0080                                                         ;8B8F1C;
    SEP #$30                                                             ;8B8F1F;
    JMP.W (DP_Temp12)                                                    ;8B8F21;

  .return:
    PLP                                                                  ;8B8F24;
    RTS                                                                  ;8B8F25;

  .Xpos:                                                                 ;8B8F26;
    dw $5555 ; Sprites 0..7 high X position bits
    dw $5554 ; Sprites 1..7 high X position bits
    dw $5550 ; Sprites 2..7 high X position bits
    dw $5540 ; Sprites 3..7 high X position bits
    dw $5500 ; Sprites 4..7 high X position bits
    dw $5400 ; Sprites 5..7 high X position bits
    dw $5000 ; Sprites 6..7 high X position bits
    dw $4000 ; Sprites 7 high X position bit

  .moveAllSprites:
    STA.W OAMLow                                                         ;8B8F36;
    STA.W OAMLow+4                                                       ;8B8F39;
    STA.W OAMLow+8                                                       ;8B8F3C;
    STA.W OAMLow+$C                                                      ;8B8F3F;
    STA.W OAMLow+$10                                                     ;8B8F42;
    STA.W OAMLow+$14                                                     ;8B8F45;
    STA.W OAMLow+$18                                                     ;8B8F48;
    STA.W OAMLow+$1C                                                     ;8B8F4B;
    STA.W OAMLow+$20                                                     ;8B8F4E;
    STA.W OAMLow+$24                                                     ;8B8F51;
    STA.W OAMLow+$28                                                     ;8B8F54;
    STA.W OAMLow+$2C                                                     ;8B8F57;
    STA.W OAMLow+$30                                                     ;8B8F5A;
    STA.W OAMLow+$34                                                     ;8B8F5D;
    STA.W OAMLow+$38                                                     ;8B8F60;
    STA.W OAMLow+$3C                                                     ;8B8F63;
    STA.W OAMLow+$40                                                     ;8B8F66;
    STA.W OAMLow+$44                                                     ;8B8F69;
    STA.W OAMLow+$48                                                     ;8B8F6C;
    STA.W OAMLow+$4C                                                     ;8B8F6F;
    STA.W OAMLow+$50                                                     ;8B8F72;
    STA.W OAMLow+$54                                                     ;8B8F75;
    STA.W OAMLow+$58                                                     ;8B8F78;
    STA.W OAMLow+$5C                                                     ;8B8F7B;
    STA.W OAMLow+$60                                                     ;8B8F7E;
    STA.W OAMLow+$64                                                     ;8B8F81;
    STA.W OAMLow+$68                                                     ;8B8F84;
    STA.W OAMLow+$6C                                                     ;8B8F87;
    STA.W OAMLow+$70                                                     ;8B8F8A;
    STA.W OAMLow+$74                                                     ;8B8F8D;
    STA.W OAMLow+$78                                                     ;8B8F90;
    STA.W OAMLow+$7C                                                     ;8B8F93;
    STA.W OAMLow+$80                                                     ;8B8F96;
    STA.W OAMLow+$84                                                     ;8B8F99;
    STA.W OAMLow+$88                                                     ;8B8F9C;
    STA.W OAMLow+$8C                                                     ;8B8F9F;
    STA.W OAMLow+$90                                                     ;8B8FA2;
    STA.W OAMLow+$94                                                     ;8B8FA5;
    STA.W OAMLow+$98                                                     ;8B8FA8;
    STA.W OAMLow+$9C                                                     ;8B8FAB;
    STA.W OAMLow+$A0                                                     ;8B8FAE;
    STA.W OAMLow+$A4                                                     ;8B8FB1;
    STA.W OAMLow+$A8                                                     ;8B8FB4;
    STA.W OAMLow+$AC                                                     ;8B8FB7;
    STA.W OAMLow+$B0                                                     ;8B8FBA;
    STA.W OAMLow+$B4                                                     ;8B8FBD;
    STA.W OAMLow+$B8                                                     ;8B8FC0;
    STA.W OAMLow+$BC                                                     ;8B8FC3;
    STA.W OAMLow+$C0                                                     ;8B8FC6;
    STA.W OAMLow+$C4                                                     ;8B8FC9;
    STA.W OAMLow+$C8                                                     ;8B8FCC;
    STA.W OAMLow+$CC                                                     ;8B8FCF;
    STA.W OAMLow+$D0                                                     ;8B8FD2;
    STA.W OAMLow+$D4                                                     ;8B8FD5;
    STA.W OAMLow+$D8                                                     ;8B8FD8;
    STA.W OAMLow+$DC                                                     ;8B8FDB;
    STA.W OAMLow+$E0                                                     ;8B8FDE;
    STA.W OAMLow+$E4                                                     ;8B8FE1;
    STA.W OAMLow+$E8                                                     ;8B8FE4;
    STA.W OAMLow+$EC                                                     ;8B8FE7;
    STA.W OAMLow+$F0                                                     ;8B8FEA;
    STA.W OAMLow+$F4                                                     ;8B8FED;
    STA.W OAMLow+$F8                                                     ;8B8FF0;
    STA.W OAMLow+$FC                                                     ;8B8FF3;
    STA.W OAMLow+$100                                                    ;8B8FF6;
    STA.W OAMLow+$104                                                    ;8B8FF9;
    STA.W OAMLow+$108                                                    ;8B8FFC;
    STA.W OAMLow+$10C                                                    ;8B8FFF;
    STA.W OAMLow+$110                                                    ;8B9002;
    STA.W OAMLow+$114                                                    ;8B9005;
    STA.W OAMLow+$118                                                    ;8B9008;
    STA.W OAMLow+$11C                                                    ;8B900B;
    STA.W OAMLow+$120                                                    ;8B900E;
    STA.W OAMLow+$124                                                    ;8B9011;
    STA.W OAMLow+$128                                                    ;8B9014;
    STA.W OAMLow+$12C                                                    ;8B9017;
    STA.W OAMLow+$130                                                    ;8B901A;
    STA.W OAMLow+$134                                                    ;8B901D;
    STA.W OAMLow+$138                                                    ;8B9020;
    STA.W OAMLow+$13C                                                    ;8B9023;
    STA.W OAMLow+$140                                                    ;8B9026;
    STA.W OAMLow+$144                                                    ;8B9029;
    STA.W OAMLow+$148                                                    ;8B902C;
    STA.W OAMLow+$14C                                                    ;8B902F;
    STA.W OAMLow+$150                                                    ;8B9032;
    STA.W OAMLow+$154                                                    ;8B9035;
    STA.W OAMLow+$158                                                    ;8B9038;
    STA.W OAMLow+$15C                                                    ;8B903B;
    STA.W OAMLow+$160                                                    ;8B903E;
    STA.W OAMLow+$164                                                    ;8B9041;
    STA.W OAMLow+$168                                                    ;8B9044;
    STA.W OAMLow+$16C                                                    ;8B9047;
    STA.W OAMLow+$170                                                    ;8B904A;
    STA.W OAMLow+$174                                                    ;8B904D;
    STA.W OAMLow+$178                                                    ;8B9050;
    STA.W OAMLow+$17C                                                    ;8B9053;
    STA.W OAMLow+$180                                                    ;8B9056;
    STA.W OAMLow+$184                                                    ;8B9059;
    STA.W OAMLow+$188                                                    ;8B905C;
    STA.W OAMLow+$18C                                                    ;8B905F;
    STA.W OAMLow+$190                                                    ;8B9062;
    STA.W OAMLow+$194                                                    ;8B9065;
    STA.W OAMLow+$198                                                    ;8B9068;
    STA.W OAMLow+$19C                                                    ;8B906B;
    STA.W OAMLow+$1A0                                                    ;8B906E;
    STA.W OAMLow+$1A4                                                    ;8B9071;
    STA.W OAMLow+$1A8                                                    ;8B9074;
    STA.W OAMLow+$1AC                                                    ;8B9077;
    STA.W OAMLow+$1B0                                                    ;8B907A;
    STA.W OAMLow+$1B4                                                    ;8B907D;
    STA.W OAMLow+$1B8                                                    ;8B9080;
    STA.W OAMLow+$1BC                                                    ;8B9083;
    STA.W OAMLow+$1C0                                                    ;8B9086;
    STA.W OAMLow+$1C4                                                    ;8B9089;
    STA.W OAMLow+$1C8                                                    ;8B908C;
    STA.W OAMLow+$1CC                                                    ;8B908F;
    STA.W OAMLow+$1D0                                                    ;8B9092;
    STA.W OAMLow+$1D4                                                    ;8B9095;
    STA.W OAMLow+$1D8                                                    ;8B9098;
    STA.W OAMLow+$1DC                                                    ;8B909B;
    STA.W OAMLow+$1E0                                                    ;8B909E;
    STA.W OAMLow+$1E4                                                    ;8B90A1;
    STA.W OAMLow+$1E8                                                    ;8B90A4;
    STA.W OAMLow+$1EC                                                    ;8B90A7;
    STA.W OAMLow+$1F0                                                    ;8B90AA;
    STA.W OAMLow+$1F4                                                    ;8B90AD;
    STA.W OAMLow+$1F8                                                    ;8B90B0;
    STA.W OAMLow+$1FC                                                    ;8B90B3;
    PLP                                                                  ;8B90B6;
    RTS                                                                  ;8B90B7;


;;; $90B8: Advance fast screen fade out ;;;
AdvanceFastScreenFadeOut:
;; Returns:
;;     Carry: Set if reached zero brightness, otherwise clear

; Screen darkens at rate [screen fade counter] / Fh per frame
    PHP                                                                  ;8B90B8;
    SEP #$30                                                             ;8B90B9;
    LDA.B DP_Brightness                                                  ;8B90BB;
    AND.B #$0F                                                           ;8B90BD;
    BEQ .return                                                          ;8B90BF;
    SEC                                                                  ;8B90C1;
    SBC.W ScreenFadeCounter                                              ;8B90C2;
    BEQ .forcedBlank                                                     ;8B90C5;
    BMI .forcedBlank                                                     ;8B90C7;
    STA.B DP_Brightness                                                  ;8B90C9;
    PLP                                                                  ;8B90CB;
    CLC                                                                  ;8B90CC;
    RTS                                                                  ;8B90CD;

  .forcedBlank:
    LDA.B #$80                                                           ;8B90CE;
    STA.B DP_Brightness                                                  ;8B90D0;

  .return:
    PLP                                                                  ;8B90D2;
    SEC                                                                  ;8B90D3;
    RTS                                                                  ;8B90D4;


;;; $90D5: Advance slow screen fade out ;;;
AdvanceSlowScreenFadeOut:
;; Returns:
;;     Carry: Set if reached zero brightness, otherwise clear

; Screen darkens at rate 1/Fh per [screen fade counter] frames
    PHP                                                                  ;8B90D5;
    SEP #$30                                                             ;8B90D6;
    DEC.W ScreenFadeDelay                                                ;8B90D8;
    BEQ .checkBrightness                                                 ;8B90DB;
    BPL .returnFading                                                    ;8B90DD;

  .checkBrightness:
    LDA.B DP_Brightness                                                  ;8B90DF;
    AND.B #$0F                                                           ;8B90E1;
    BEQ .done                                                            ;8B90E3;
    DEC                                                                  ;8B90E5;
    BEQ .zeroBrightness                                                  ;8B90E6;
    STA.B DP_Brightness                                                  ;8B90E8;
    LDA.W ScreenFadeCounter                                              ;8B90EA;
    STA.W ScreenFadeDelay                                                ;8B90ED;

  .returnFading:
    PLP                                                                  ;8B90F0;
    CLC                                                                  ;8B90F1;
    RTS                                                                  ;8B90F2;

  .zeroBrightness:
    LDA.B #$80                                                           ;8B90F3;
    STA.B DP_Brightness                                                  ;8B90F5;
    STZ.W ScreenFadeDelay                                                ;8B90F7;
    STZ.W ScreenFadeCounter                                              ;8B90FA;

  .done:
    PLP                                                                  ;8B90FD;
    SEC                                                                  ;8B90FE;
    RTS                                                                  ;8B90FF;


;;; $9100: Advance fast screen fade in ;;;
AdvanceFastScreenFadeIn:
;; Returns:
;;     Carry: Set if reached max brightness, otherwise clear

; Screen brightens at rate [screen fade counter] / Fh per frame
    PHP                                                                  ;8B9100;
    SEP #$30                                                             ;8B9101;
    LDA.B DP_Brightness                                                  ;8B9103;
    CLC                                                                  ;8B9105;
    ADC.W ScreenFadeCounter                                              ;8B9106;
    AND.B #$1F                                                           ;8B9109;
    CMP.B #$0F                                                           ;8B910B;
    BPL .disableForcedBlank                                              ;8B910D;
    STA.B DP_Brightness                                                  ;8B910F;
    PLP                                                                  ;8B9111;
    CLC                                                                  ;8B9112;
    RTS                                                                  ;8B9113;

  .disableForcedBlank:
    LDA.B #$0F                                                           ;8B9114;
    STA.B DP_Brightness                                                  ;8B9116;
    PLP                                                                  ;8B9118;
    SEC                                                                  ;8B9119;
    RTS                                                                  ;8B911A;


;;; $911B: Advance slow screen fade in ;;;
AdvanceSlowScreenFadeIn:
;; Returns:
;;     Carry: Set if reached max brightness, otherwise clear

; Screen brightens at rate 1/Fh per [screen fade counter] frames
    PHP                                                                  ;8B911B;
    SEP #$30                                                             ;8B911C;
    DEC.W ScreenFadeDelay                                                ;8B911E;
    BEQ .checkBrightness                                                 ;8B9121;
    BPL .fading                                                          ;8B9123;

  .checkBrightness:
    LDA.B DP_Brightness                                                  ;8B9125;
    INC                                                                  ;8B9127;
    AND.B #$1F                                                           ;8B9128;
    CMP.B #$0F                                                           ;8B912A;
    BPL .maxBrightness                                                   ;8B912C;
    STA.B DP_Brightness                                                  ;8B912E;
    LDA.W ScreenFadeCounter                                              ;8B9130;
    STA.W ScreenFadeDelay                                                ;8B9133;

  .fading:
    PLP                                                                  ;8B9136;
    CLC                                                                  ;8B9137;
    RTS                                                                  ;8B9138;

  .maxBrightness:
    LDA.B #$0F                                                           ;8B9139;
    STA.B DP_Brightness                                                  ;8B913B;
    STZ.W ScreenFadeDelay                                                ;8B913D;
    STZ.W ScreenFadeCounter                                              ;8B9140;
    PLP                                                                  ;8B9143;
    SEC                                                                  ;8B9144;
    RTS                                                                  ;8B9145;


;;; $9146: Initialise IO registers and display Nintendo logo ;;;
Initialise_IO_Registers_and_Display_Nintendo_Logo:
    PHP                                                                  ;8B9146;
    PHB                                                                  ;8B9147;
    PHK                                                                  ;8B9148;
    PLB                                                                  ;8B9149;
    SEP #$30                                                             ;8B914A;
    LDA.B #$8F                                                           ;8B914C;
    STA.W $2100                                                          ;8B914E;
    STA.B DP_Brightness                                                  ;8B9151;
    REP #$30                                                             ;8B9153;
    STZ.W OAMStack                                                       ;8B9155;
    JSL.L ClearHighOAM                                                   ;8B9158;
    JSL.L Finalise_OAM                                                   ;8B915C;
    STZ.W SamusTiles_TopHalfFlag                                         ;8B9160;
    STZ.W SamusTiles_TopHalfTilesDef                                     ;8B9163;
    STZ.W SamusTiles_BottomHalfTilesDef                                  ;8B9166;
    SEP #$20                                                             ;8B9169;
    LDA.B #$01                                                           ;8B916B;
    STA.W $4200                                                          ;8B916D;
    STA.B DP_IRQAutoJoy                                                  ;8B9170;
    STZ.W $4201                                                          ;8B9172;
    STZ.W $4202                                                          ;8B9175;
    STZ.W $4203                                                          ;8B9178;
    STZ.W $4204                                                          ;8B917B;
    STZ.W $4205                                                          ;8B917E;
    STZ.W $4206                                                          ;8B9181;
    STZ.W $4207                                                          ;8B9184;
    STZ.W $4208                                                          ;8B9187;
    STZ.W $4209                                                          ;8B918A;
    STZ.W $420A                                                          ;8B918D;
    STZ.W $420B                                                          ;8B9190;
    STZ.W $420C                                                          ;8B9193;
    STZ.B DP_HDMAEnable                                                  ;8B9196;
    LDA.B #$01                                                           ;8B9198;
    STA.W $420D                                                          ;8B919A;
    STA.B DP_ROMAccessSpeed                                              ;8B919D;
    LDA.B #$03                                                           ;8B919F;
    STA.W $2101                                                          ;8B91A1;
    STA.B DP_SpriteSizeAddr                                              ;8B91A4;
    STZ.W $2102                                                          ;8B91A6;
    STZ.B DP_OAMAddrPrio                                                 ;8B91A9;
    LDA.B #$80                                                           ;8B91AB;
    STA.W $2103                                                          ;8B91AD;
    STA.B DP_OAMAddrPrio+1                                               ;8B91B0;
    STZ.W $2104                                                          ;8B91B2;
    STZ.W $2104                                                          ;8B91B5;
    LDA.B #$01                                                           ;8B91B8;
    STA.W $2105                                                          ;8B91BA;
    STA.B DP_BGModeSize                                                  ;8B91BD;
    STZ.W $2106                                                          ;8B91BF;
    STZ.B DP_Mosaic                                                      ;8B91C2;
    STZ.W $2107                                                          ;8B91C4;
    STZ.B DP_BG1TilemapAddrSize                                          ;8B91C7;
    STZ.W $2108                                                          ;8B91C9;
    STZ.B DP_BG2TilemapAddrSize                                          ;8B91CC;
    STZ.W $2109                                                          ;8B91CE;
    STZ.B DP_BG3TilemapAddrSize                                          ;8B91D1;
    STZ.W $210A                                                          ;8B91D3;
    STZ.B DP_BG4TilemapAddrSize                                          ;8B91D6;
    STZ.W $210B                                                          ;8B91D8;
    STZ.B DP_BGTilesAddr                                                 ;8B91DB;
    STZ.W $210C                                                          ;8B91DD;
    STZ.B DP_BGTilesAddr+1                                               ;8B91E0;
    STZ.W $210D                                                          ;8B91E2;
    STZ.W $210D                                                          ;8B91E5;
    STZ.W $210E                                                          ;8B91E8;
    STZ.W $210E                                                          ;8B91EB;
    STZ.W $210F                                                          ;8B91EE;
    STZ.W $210F                                                          ;8B91F1;
    STZ.W $2110                                                          ;8B91F4;
    STZ.W $2110                                                          ;8B91F7;
    STZ.W $2111                                                          ;8B91FA;
    STZ.W $2111                                                          ;8B91FD;
    STZ.W $2112                                                          ;8B9200;
    STZ.W $2112                                                          ;8B9203;
    STZ.W $2113                                                          ;8B9206;
    STZ.W $2113                                                          ;8B9209;
    STZ.W $2114                                                          ;8B920C;
    STZ.W $2114                                                          ;8B920F;
    STZ.W $2115                                                          ;8B9212;
    STZ.W $211A                                                          ;8B9215;
    STZ.B DP_Mode7Settings                                               ;8B9218;
    STZ.W $211B                                                          ;8B921A;
    STZ.W $211C                                                          ;8B921D;
    STZ.W $211D                                                          ;8B9220;
    STZ.W $211E                                                          ;8B9223;
    STZ.W $211F                                                          ;8B9226;
    STZ.W $2120                                                          ;8B9229;
    STZ.W $2123                                                          ;8B922C;
    STZ.B DP_WindowMaskBG12                                              ;8B922F;
    STZ.W $2124                                                          ;8B9231;
    STZ.B DP_WindowMaskBG34                                              ;8B9234;
    STZ.W $2125                                                          ;8B9236;
    STZ.B DP_WindowMaskSprite                                            ;8B9239;
    STZ.W $2126                                                          ;8B923B;
    STZ.B DP_Window1Left                                                 ;8B923E;
    STZ.W $2127                                                          ;8B9240;
    STZ.B DP_Window1Right                                                ;8B9243;
    STZ.W $2128                                                          ;8B9245;
    STZ.B DP_Window2Left                                                 ;8B9248;
    STZ.W $2129                                                          ;8B924A;
    STZ.B DP_Window2Right                                                ;8B924D;
    STZ.W $212A                                                          ;8B924F;
    STZ.B DP_Window12BGMaskLogic                                         ;8B9252;
    STZ.W $212B                                                          ;8B9254;
    STZ.B DP_Window12SpriteMaskLogic                                     ;8B9257;
    LDA.B #$10                                                           ;8B9259;
    STA.W $212C                                                          ;8B925B;
    STA.B DP_MainScreenLayers                                            ;8B925E;
    STZ.W $212E                                                          ;8B9260;
    STZ.B DP_WindowAreaMainScreen                                        ;8B9263;
    STZ.W $212D                                                          ;8B9265;
    STZ.B DP_SubScreenLayers                                             ;8B9268;
    STZ.W $212F                                                          ;8B926A;
    STZ.B DP_WindowAreaSubScreen                                         ;8B926D;
    STZ.W $2130                                                          ;8B926F;
    STZ.B DP_NextGameplayColorMathA                                      ;8B9272;
    STZ.W $2131                                                          ;8B9274;
    STZ.B DP_NextGameplayColorMathB                                      ;8B9277;
    LDA.B #$E0                                                           ;8B9279;
    STA.W $2132                                                          ;8B927B;
    LDA.B #$20                                                           ;8B927E;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8B9280;
    LDA.B #$40                                                           ;8B9282;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8B9284;
    LDA.B #$80                                                           ;8B9286;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8B9288;
    LDA.B #$00                                                           ;8B928A;
    STA.W $2133                                                          ;8B928C;
    STA.B DP_DisplayResolution                                           ;8B928F;
    REP #$20                                                             ;8B9291;
    LDA.W #Tiles_Title_Sprite>>8&$FF00                                   ;8B9293;
    STA.B DP_DecompSrc+1                                                 ;8B9296;
    LDA.W #Tiles_Title_Sprite                                            ;8B9298;
    STA.B DP_DecompSrc                                                   ;8B929B;
    JSL.L Decompression_HardcodedDestination                             ;8B929D;
    dl TitleSpriteTiles                                                  ;8B92A1;
    SEP #$30                                                             ;8B92A4;
    LDA.B #$00                                                           ;8B92A6;
    STA.W $2116                                                          ;8B92A8;
    LDA.B #$60                                                           ;8B92AB;
    STA.W $2117                                                          ;8B92AD;
    LDA.B #$80                                                           ;8B92B0;
    STA.W $2115                                                          ;8B92B2;
    JSL.L SetupHDMATransfer                                              ;8B92B5;
    db $01,$01,$18                                                       ;8B92B9;
    dl TitleSpriteTiles                                                  ;8B92BC;
    dw $4000                                                             ;8B92BF;
    LDA.B #$02                                                           ;8B92C1;
    STA.W $420B                                                          ;8B92C3;
    LDA.B #$80                                                           ;8B92C6;
    STA.B DP_Brightness                                                  ;8B92C8;
    REP #$30                                                             ;8B92CA;
    LDX.W #$0000                                                         ;8B92CC;

  .loop:
    LDA.L Palettes_TitleScreen,X                                         ;8B92CF;
    STA.L Palettes,X                                                     ;8B92D3;
    INX                                                                  ;8B92D7;
    INX                                                                  ;8B92D8;
    CPX.W #$0200                                                         ;8B92D9;
    BMI .loop                                                            ;8B92DC;
    JSL.L EnableNMI                                                      ;8B92DE;
    LDA.W #$0001                                                         ;8B92E2;
    STA.W ScreenFadeDelay                                                ;8B92E5;
    STA.W ScreenFadeCounter                                              ;8B92E8;

  .fadeIn:
    JSL.L ClearHighOAM                                                   ;8B92EB;
    STZ.W OAMStack                                                       ;8B92EF;
    JSR.W AddNintendoBootLogoSpritemapToOAM                              ;8B92F2;
    JSR.W AdvanceFastScreenFadeIn                                        ;8B92F5;
    BCS .maxBrightness                                                   ;8B92F8;
    JSL.L Finalise_OAM                                                   ;8B92FA;
    JSL.L WaitForNMI                                                     ;8B92FE;
    BRA .fadeIn                                                          ;8B9302;

  .maxBrightness:
    JSL.L Finalise_OAM                                                   ;8B9304;
    JSL.L WaitForNMI                                                     ;8B9308;
    LDA.W #$0078                                                         ;8B930C;
    STA.W GameOptionsMenuIndex                                           ;8B930F;

  .loopNintendoLogo:
    JSL.L ClearHighOAM                                                   ;8B9312;
    STZ.W OAMStack                                                       ;8B9316;
    JSR.W AddNintendoBootLogoSpritemapToOAM                              ;8B9319;
    DEC.W GameOptionsMenuIndex                                           ;8B931C;
    BEQ .timerExpired                                                    ;8B931F;
    JSL.L Finalise_OAM                                                   ;8B9321;
    JSL.L WaitForNMI                                                     ;8B9325;
    BRA .loopNintendoLogo                                                ;8B9329;

  .timerExpired:
    JSL.L Finalise_OAM                                                   ;8B932B;
    JSL.L WaitForNMI                                                     ;8B932F;
    LDA.W #$0001                                                         ;8B9333;
    STA.W ScreenFadeDelay                                                ;8B9336;
    STA.W ScreenFadeCounter                                              ;8B9339;

  .loopFadeOut:
    JSL.L ClearHighOAM                                                   ;8B933C;
    STZ.W OAMStack                                                       ;8B9340;
    JSR.W AddNintendoBootLogoSpritemapToOAM                              ;8B9343;
    JSR.W AdvanceFastScreenFadeOut                                       ;8B9346;
    BCS .zeroBrightness                                                  ;8B9349;
    JSL.L Finalise_OAM                                                   ;8B934B;
    JSL.L WaitForNMI                                                     ;8B934F;
    BRA .loopFadeOut                                                     ;8B9353;

  .zeroBrightness:
    JSL.L Finalise_OAM                                                   ;8B9355;
    JSL.L WaitForNMI                                                     ;8B9359;
    SEP #$30                                                             ;8B935D;
    LDA.B #$8F                                                           ;8B935F;
    STA.W $2100                                                          ;8B9361;
    STA.B DP_Brightness                                                  ;8B9364;
    REP #$30                                                             ;8B9366;
    PLB                                                                  ;8B9368;
    PLP                                                                  ;8B9369;
    RTL                                                                  ;8B936A;


;;; $936B: Add Nintendo boot logo spritemap to OAM ;;;
AddNintendoBootLogoSpritemapToOAM:
    PHP                                                                  ;8B936B;
    REP #$30                                                             ;8B936C;
    PHB                                                                  ;8B936E;
    PEA.W TitleSequenceSpritemaps_NintendoBootLogo>>8&$FF00              ;8B936F;
    PLB                                                                  ;8B9372;
    PLB                                                                  ;8B9373;
    LDY.W #TitleSequenceSpritemaps_NintendoBootLogo                      ;8B9374;
    STZ.B DP_Temp16                                                      ;8B9377;
    LDA.W #$0080                                                         ;8B9379;
    STA.B DP_Temp14                                                      ;8B937C;
    LDA.W #$0070                                                         ;8B937E;
    STA.B DP_Temp12                                                      ;8B9381;
    JSL.L AddSpritemapToOAM                                              ;8B9383;
    PLB                                                                  ;8B9387;
    PLP                                                                  ;8B9388;
    RTS                                                                  ;8B9389;


;;; $938A: Spawn cinematic sprite object [Y] ;;;
Spawn_CinematicSpriteObject_Y:
;; Parameters:
;;     A: Initialisation parameter
;;     Y: Pointer to cinematic sprite object definition
    PHP                                                                  ;8B938A;
    REP #$30                                                             ;8B938B;
    PHX                                                                  ;8B938D;
    STA.W CinematicSpriteObject_InitParam                                ;8B938E;
    TYX                                                                  ;8B9391;
    LDY.W #$001E                                                         ;8B9392;

  .loop:
    LDA.W CinematicSpriteObject_InstListPointers,Y                       ;8B9395;
    BEQ SpawnCinematicSpriteObject_XToIndexY                             ;8B9398;
    DEY                                                                  ;8B939A;
    DEY                                                                  ;8B939B;
    BPL .loop                                                            ;8B939C;
    PLX                                                                  ;8B939E;
    PLP                                                                  ;8B939F;
    SEC                                                                  ;8B93A0;
    RTS                                                                  ;8B93A1;


;;; $93A2: Spawn cinematic sprite object [Y] to index [$12] ;;;
Spawn_CinematicSpriteObject_YToIndex12:
;; Parameters:
;;     A: Initialisation parameter
;;     Y: Pointer to cinematic sprite object definition
;;     $12: Cinematic sprite object index
    PHP                                                                  ;8B93A2;
    REP #$30                                                             ;8B93A3;
    PHX                                                                  ;8B93A5;
    STA.W CinematicSpriteObject_InitParam                                ;8B93A6;
    TYX                                                                  ;8B93A9;
    LDY.B DP_Temp12                                                      ;8B93AA; fallthrough to SpawnCinematicSpriteObject_XToIndexY


;;; $93AC: Spawn cinematic sprite object [X] to index [Y] ;;;
SpawnCinematicSpriteObject_XToIndexY:
;; Parameters:
;;     X: Pointer to cinematic sprite object definition
;;     Y: Cinematic sprite object index
    REP #$30                                                             ;8B93AC;
    LDA.W $0002,X                                                        ;8B93AE;
    STA.W CinematicSpriteObject_PreInstructions,Y                        ;8B93B1;
    LDA.W $0004,X                                                        ;8B93B4;
    STA.W CinematicSpriteObject_InstListPointers,Y                       ;8B93B7;
    LDA.W #$0001                                                         ;8B93BA;
    STA.W CinematicSpriteObject_InstructionTimers,Y                      ;8B93BD;
    LDA.W #$0000                                                         ;8B93C0;
    STA.W CinematicSpriteObject_SpritemapPointers,Y                      ;8B93C3;
    LDA.W #$0000                                                         ;8B93C6;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8B93C9;
    STA.W CinematicSpriteObject_XSubPosition,Y                           ;8B93CC;
    STA.W CinematicSpriteObject_YSubPosition,Y                           ;8B93CF;
    JSR.W ($0000,X)                                                      ;8B93D2;
    PLX                                                                  ;8B93D5;
    PLP                                                                  ;8B93D6;
    CLC                                                                  ;8B93D7;
    RTS                                                                  ;8B93D8;


;;; $93D9: RTS ;;;
RTS_8B93D9:
    RTS                                                                  ;8B93D9;


;;; $93DA: Clear cinematic sprite objects ;;;
Clear_CinematicSpriteObjects:
    PHP                                                                  ;8B93DA;
    REP #$30                                                             ;8B93DB;
    LDX.W #$001E                                                         ;8B93DD;
    LDA.W #$0000                                                         ;8B93E0;

  .loop:
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8B93E3;
    STA.W CinematicSpriteObject_SpritemapPointers,X                      ;8B93E6;
    DEX                                                                  ;8B93E9;
    DEX                                                                  ;8B93EA;
    BPL .loop                                                            ;8B93EB;
    PLP                                                                  ;8B93ED;
    RTS                                                                  ;8B93EE;


;;; $93EF: Handle cinematic sprite objects ;;;
Handle_CinematicSpriteObjects:
    PHP                                                                  ;8B93EF;
    REP #$30                                                             ;8B93F0;
    LDX.W #$001E                                                         ;8B93F2;

  .loop:
    STX.W CinematicSpriteObject_Index                                    ;8B93F5;
    LDA.W CinematicSpriteObject_InstListPointers,X                       ;8B93F8;
    BEQ .next                                                            ;8B93FB;
    JSR.W Process_CinematicSpriteObjects_InstList                        ;8B93FD;
    LDX.W CinematicSpriteObject_Index                                    ;8B9400;

  .next:
    DEX                                                                  ;8B9403;
    DEX                                                                  ;8B9404;
    BPL .loop                                                            ;8B9405;
    PLP                                                                  ;8B9407;
    RTS                                                                  ;8B9408;


;;; $9409: Process cinematic sprite object instruction list ;;;
Process_CinematicSpriteObjects_InstList:
;; Parameters:
;;     X: Cinematic sprite object index

; Some instructions (e.g. sleep) pop the return address pushed to the stack by $9420 to return out of *this* routine
; (marked "terminate processing cinematic sprite object")
    JSR.W (CinematicSpriteObject_PreInstructions,X)                      ;8B9409;
    LDX.W CinematicSpriteObject_Index                                    ;8B940C;
    DEC.W CinematicSpriteObject_InstructionTimers,X                      ;8B940F;
    BNE .return                                                          ;8B9412;
    LDY.W CinematicSpriteObject_InstListPointers,X                       ;8B9414;

  .loop:
    LDA.W $0000,Y                                                        ;8B9417;
    BPL +                                                                ;8B941A;
    STA.B DP_Temp12                                                      ;8B941C;
    INY                                                                  ;8B941E;
    INY                                                                  ;8B941F;
    PEA.W .loop-1                                                        ;8B9420;
    JMP.W (DP_Temp12)                                                    ;8B9423;

+   STA.W CinematicSpriteObject_InstructionTimers,X                      ;8B9426;
    LDA.W $0002,Y                                                        ;8B9429;
    STA.W CinematicSpriteObject_SpritemapPointers,X                      ;8B942C;
    TYA                                                                  ;8B942F;
    CLC                                                                  ;8B9430;
    ADC.W #$0004                                                         ;8B9431;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8B9434;

  .return:
    RTS                                                                  ;8B9437;


;;; $9438: Instruction - delete ;;;
CinematicSpriteObject_Instruction_Delete:
;; Parameters:
;;     X: Cinematic sprite object index
    REP #$30                                                             ;8B9438;
    STZ.W CinematicSpriteObject_SpritemapPointers,X                      ;8B943A;
    STZ.W CinematicSpriteObject_InstListPointers,X                       ;8B943D;
    PLA                                                                  ;8B9440;
    RTS                                                                  ;8B9441;


if !FEATURE_KEEP_UNREFERENCED
;;; $9442: Unused. Instruction - sleep ;;;
UNUSED_CinematicSpriteObject_Instruction_Sleep_8B9442:
;; Parameters:
;;     X: Cinematic sprite object index
;;     Y: Pointer to after this instruction
    REP #$30                                                             ;8B9442;
    DEY                                                                  ;8B9444;
    DEY                                                                  ;8B9445;
    TYA                                                                  ;8B9446;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8B9447;
    PLA                                                                  ;8B944A;
    RTS                                                                  ;8B944B;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $944C: Instruction - pre-instruction = [[Y]] ;;;
CinematicSpriteObject_Instruction_PreInstructionY:
;; Parameters:
;;     X: Cinematic sprite object index
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B944C;
    LDA.W $0000,Y                                                        ;8B944E;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8B9451;
    INY                                                                  ;8B9454;
    INY                                                                  ;8B9455;
    RTS                                                                  ;8B9456;


if !FEATURE_KEEP_UNREFERENCED
;;; $9457: Unused. Instruction - clear pre-instruction ;;;
UNUSED_CinematicSpriteObject_Inst_ClearPreInstruction_8B9457:
;; Parameters:
;;     X: Cinematic sprite object index
    REP #$30                                                             ;8B9457;
    LDA.W #.return                                                       ;8B9459;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8B945C;

  .return:
    RTS                                                                  ;8B945F;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9460: Unused. Instruction - call external function [[Y]] ;;;
CinematicSpriteObject_Inst_CallExternalFunctionY_8B9460:
;; Parameters:
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B9460;
    LDA.W $0000,Y                                                        ;8B9462;
    STA.W DP_Temp12                                                      ;8B9465;
    LDA.W $0001,Y                                                        ;8B9468;
    STA.W DP_Temp13                                                      ;8B946B;
    PHY                                                                  ;8B946E;
    JSL.L .externalFunction                                              ;8B946F;
    PLY                                                                  ;8B9473;
    LDX.W CinematicSpriteObject_Index                                    ;8B9474;
    INY                                                                  ;8B9477;
    INY                                                                  ;8B9478;
    INY                                                                  ;8B9479;
    RTS                                                                  ;8B947A;

  .externalFunction:
    JML.W [DP_Temp12]                                                    ;8B947B;


;;; $947E: Unused. Instruction - call external function [[Y]] with A = [[Y] + 3] ;;;
CinematicSpriteObject_Inst_CallExternalFunctionYWithA_8B947E:
;; Parameters:
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B947E;
    LDA.W $0000,Y                                                        ;8B9480;
    STA.W DP_Temp12                                                      ;8B9483;
    LDA.W $0001,Y                                                        ;8B9486;
    STA.W DP_Temp13                                                      ;8B9489;
    LDA.W $0003,Y                                                        ;8B948C;
    PHY                                                                  ;8B948F;
    JSL.L .externalFunction                                              ;8B9490;
    PLY                                                                  ;8B9494;
    LDX.W CinematicSpriteObject_Index                                    ;8B9495;
    TYA                                                                  ;8B9498;
    CLC                                                                  ;8B9499;
    ADC.W #$0005                                                         ;8B949A;
    TAY                                                                  ;8B949D;
    RTS                                                                  ;8B949E;

  .externalFunction:
    JML.W [DP_Temp12]                                                    ;8B949F;


if !FEATURE_KEEP_UNREFERENCED
;;; $94A2: Unused. Instruction - go to [Y] + ±[[Y]] ;;;
UNUSED_CinematicSpriteObject_Inst_GotoY_8B94A2:
;; Parameters:
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B94A2;
    STY.W DP_Temp12                                                      ;8B94A4;
    DEY                                                                  ;8B94A7;
    LDA.W $0000,Y                                                        ;8B94A8;
    XBA                                                                  ;8B94AB;
    BMI .highByte                                                        ;8B94AC;
    AND.W #$00FF                                                         ;8B94AE;
    BRA +                                                                ;8B94B1;

  .highByte:
    ORA.W #$FF00                                                         ;8B94B3;

+   CLC                                                                  ;8B94B6;
    ADC.W DP_Temp12                                                      ;8B94B7;
    TAY                                                                  ;8B94BA;
    RTS                                                                  ;8B94BB;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $94BC: Instruction - go to [[Y]] ;;;
CinematicSpriteObject_Instruction_GotoY:
;; Parameters:
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B94BC;
    LDA.W $0000,Y                                                        ;8B94BE;
    TAY                                                                  ;8B94C1;
    RTS                                                                  ;8B94C2;


;;; $94C3: Instruction - decrement timer and go to [[Y]] if non-zero ;;;
CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero:
;; Parameters:
;;     X: Cinematic sprite object index
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B94C3;
    DEC.W CinematicSpriteObject_Timers,X                                 ;8B94C5;
    BNE CinematicSpriteObject_Instruction_GotoY                          ;8B94C8;
    INY                                                                  ;8B94CA;
    INY                                                                  ;8B94CB;
    RTS                                                                  ;8B94CC;


if !FEATURE_KEEP_UNREFERENCED
;;; $94CD: Unused. Instruction - decrement timer and go to [Y] + ±[[Y]] if non-zero ;;;
UNUSED_CinematicSpriteObject_Inst_DecTimer_GotoY_8B94CD:
;; Parameters:
;;     X: Cinematic sprite object index
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B94CD;
    DEC.W CinematicSpriteObject_Timers,X                                 ;8B94CF;
    BNE UNUSED_CinematicSpriteObject_Inst_GotoY_8B94A2                   ;8B94D2;
    INY                                                                  ;8B94D4;
    RTS                                                                  ;8B94D5;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $94D6: Instruction - timer = [[Y]] ;;;
CinematicSpriteObject_Instruction_TimerInY:
;; Parameters:
;;     X: Cinematic sprite object index
;;     Y: Pointer to instruction arguments
;; Returns:
;;     Y: Pointer to next instruction
    REP #$30                                                             ;8B94D6;
    LDA.W $0000,Y                                                        ;8B94D8;
    STA.W CinematicSpriteObject_Timers,X                                 ;8B94DB;
    INY                                                                  ;8B94DE;
    INY                                                                  ;8B94DF;
    RTS                                                                  ;8B94E0;


if !FEATURE_KEEP_UNREFERENCED
;;; $94E1: Unused. RTS ;;;
UNUSED_REP30RTS_8B94E1:
    REP #$30                                                             ;8B94E1;
    RTS                                                                  ;8B94E3;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $94E4: Spawn mode 7 object ;;;
Spawn_Mode7Objects:
;; Parameters:
;;     A: Initialisation parameter. Never actually used by anything
;;     Y: Pointer to mode 7 object definition
    PHP                                                                  ;8B94E4;
    REP #$30                                                             ;8B94E5;
    PHX                                                                  ;8B94E7;
    STA.W neverRead19B3                                                  ;8B94E8;
    TYX                                                                  ;8B94EB;
    LDY.W #$0002                                                         ;8B94EC;

  .loop:
    LDA.W Mode7Object_InstListPointers,Y                                 ;8B94EF;
    BEQ .spawn                                                           ;8B94F2;
    DEY                                                                  ;8B94F4;
    DEY                                                                  ;8B94F5;
    BPL .loop                                                            ;8B94F6;
    PLX                                                                  ;8B94F8;
    PLP                                                                  ;8B94F9;
    SEC                                                                  ;8B94FA;
    RTS                                                                  ;8B94FB;

  .spawn:
    REP #$30                                                             ;8B94FC;
    LDA.W $0002,X                                                        ;8B94FE;
    STA.W Mode7Object_PreInstructions,Y                                  ;8B9501;
    LDA.W $0004,X                                                        ;8B9504;
    STA.W Mode7Object_InstListPointers,Y                                 ;8B9507;
    LDA.W #$0001                                                         ;8B950A;
    STA.W Mode7Object_InstructionTimers,Y                                ;8B950D;
    LDA.W #$0000                                                         ;8B9510;
    STA.W Mode7Object_Timers,Y                                           ;8B9513;
    JSR.W ($0000,X)                                                      ;8B9516;
    PLX                                                                  ;8B9519;
    PLP                                                                  ;8B951A;
    CLC                                                                  ;8B951B;
    RTS                                                                  ;8B951C;


;;; $951D: Handle mode 7 objects ;;;
Handle_Mode7Objects:
    PHP                                                                  ;8B951D;
    REP #$30                                                             ;8B951E;
    LDX.W #$0002                                                         ;8B9520;

  .loop:
    STX.W Mode7Object_Index                                              ;8B9523;
    LDA.W Mode7Object_InstListPointers,X                                 ;8B9526;
    BEQ .next                                                            ;8B9529;
    JSR.W Process_Mode7Objects_InstList                                  ;8B952B;
    LDX.W Mode7Object_Index                                              ;8B952E;

  .next:
    DEX                                                                  ;8B9531;
    DEX                                                                  ;8B9532;
    BPL .loop                                                            ;8B9533;
    PLP                                                                  ;8B9535;
    RTS                                                                  ;8B9536;


;;; $9537: Process mode 7 object instruction list ;;;
Process_Mode7Objects_InstList:
;; Parameters:
;;     X: Mode 7 object index

; The sleep instruction pops the return address pushed to the stack by $954E to return out of *this* routine
; (marked "terminate processing mode 7 object")
    JSR.W (Mode7Object_PreInstructions,X)                                ;8B9537;
    LDX.W Mode7Object_Index                                              ;8B953A;
    DEC.W Mode7Object_InstructionTimers,X                                ;8B953D;
    BNE .return                                                          ;8B9540;
    LDY.W Mode7Object_InstListPointers,X                                 ;8B9542;

  .loop:
    LDA.W $0000,Y                                                        ;8B9545;
    BPL .timer                                                           ;8B9548;
    STA.B DP_Temp12                                                      ;8B954A;
    INY                                                                  ;8B954C;
    INY                                                                  ;8B954D;
    PEA.W .loop-1                                                        ;8B954E;
    JMP.W (DP_Temp12)                                                    ;8B9551;

  .timer:
    STA.W Mode7Object_InstructionTimers,X                                ;8B9554;
    PHY                                                                  ;8B9557;
    PHX                                                                  ;8B9558;
    LDX.W $0002,Y                                                        ;8B9559;
    JSL.L QueueMode7Transfers                                            ;8B955C;
    PLX                                                                  ;8B9560;
    PLY                                                                  ;8B9561;
    TYA                                                                  ;8B9562;
    CLC                                                                  ;8B9563;
    ADC.W #$0004                                                         ;8B9564;
    STA.W Mode7Object_InstListPointers,X                                 ;8B9567;

  .return:
    RTS                                                                  ;8B956A;


;;; $956B: Instruction - delete ;;;
Mode7Objects_Instruction_Delete:
;; Parameters:
;;     X: Mode 7 object index
    REP #$30                                                             ;8B956B;
    STZ.W Mode7Object_InstListPointers,X                                 ;8B956D;
    PLA                                                                  ;8B9570;
    RTS                                                                  ;8B9571;


if !FEATURE_KEEP_UNREFERENCED
;;; $9572: Unused. Instruction - pre-instruction = [[Y]] ;;;
UNUSED_Mode7Objects_Instruction_PreInstructionY_8B9572:
    REP #$30                                                             ;8B9572;
    LDA.W $0000,Y                                                        ;8B9574;
    STA.W Mode7Object_PreInstructions,X                                  ;8B9577;
    INY                                                                  ;8B957A;
    INY                                                                  ;8B957B;
    RTS                                                                  ;8B957C;


;;; $957D: Unused. Instruction - clear pre-instruction ;;;
UNUSED_Mode7Objects_Instruction_ClearPreInstruction_8B957D:
    REP #$30                                                             ;8B957D;
    LDA.W #.return                                                       ;8B957F;
    STA.W Mode7Object_PreInstructions,X                                  ;8B9582;

  .return:
    RTS                                                                  ;8B9585;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9586: Instruction - go to [[Y]] ;;;
Mode7Objects_Instruction_GotoY:
    REP #$30                                                             ;8B9586;
    LDA.W $0000,Y                                                        ;8B9588;
    TAY                                                                  ;8B958B;
    RTS                                                                  ;8B958C;


;;; $958D: Instruction - decrement timer and go to [[Y]] if non-zero ;;;
Mode7Objects_Instruction_DecrementTimer_GotoYIfNonZero:
    REP #$30                                                             ;8B958D;
    DEC.W Mode7Object_Timers,X                                           ;8B958F;
    BNE Mode7Objects_Instruction_GotoY                                   ;8B9592;
    INY                                                                  ;8B9594;
    INY                                                                  ;8B9595;
    RTS                                                                  ;8B9596;


;;; $9597: Instruction - timer = [[Y]] ;;;
Mode7Objects_Instruction_TimerInY:
    REP #$30                                                             ;8B9597;
    LDA.W $0000,Y                                                        ;8B9599;
    STA.W Mode7Object_Timers,X                                           ;8B959C;
    INY                                                                  ;8B959F;
    INY                                                                  ;8B95A0;
    RTS                                                                  ;8B95A1;


;;; $95A2: Enable cinematic BG objects ;;;
Enable_CinematicBGObjects:
    PHP                                                                  ;8B95A2;
    REP #$30                                                             ;8B95A3;
    LDA.W #$8000                                                         ;8B95A5;
    TSB.W CinematicBGObject_Enable                                       ;8B95A8;
    PLP                                                                  ;8B95AB;
    RTL                                                                  ;8B95AC;


;;; $95AD: Disable cinematic BG objects ;;;
Disable_CinematicBGObjects:
    PHP                                                                  ;8B95AD;
    REP #$30                                                             ;8B95AE;
    LDA.W #$8000                                                         ;8B95B0;
    TRB.W CinematicBGObject_Enable                                       ;8B95B3;
    PLP                                                                  ;8B95B6;
    RTL                                                                  ;8B95B7;


;;; $95B8: Enable cinematic BG tilemap updates ;;;
Enable_CinematicBGTilemap_Updates:
    PHP                                                                  ;8B95B8;
    REP #$30                                                             ;8B95B9;
    LDA.W #$8000                                                         ;8B95BB;
    TSB.W CinematicBGObject_TilemapUpdateFlag                            ;8B95BE;
    PLP                                                                  ;8B95C1;
    RTL                                                                  ;8B95C2;


;;; $95C3: Disable cinematic BG tilemap updates ;;;
Disable_CinematicBGTilemap_Updates:
    PHP                                                                  ;8B95C3;
    REP #$30                                                             ;8B95C4;
    LDA.W #$8000                                                         ;8B95C6;
    TRB.W CinematicBGObject_TilemapUpdateFlag                            ;8B95C9;
    PLP                                                                  ;8B95CC;
    RTL                                                                  ;8B95CD;


;;; $95CE: Clear cinematic BG objects, cinematic BG tilemap = [A] ;;;
Clear_CinematicBGObjects_CinematicBGTilemap:
    PHP                                                                  ;8B95CE;
    REP #$30                                                             ;8B95CF;
    PHX                                                                  ;8B95D1;
    LDX.W #CinematicBGTilemap_End-CinematicBGTilemap-2                   ;8B95D2;

  .loopTilemap:
    STA.L CinematicBGTilemap,X                                           ;8B95D5;
    DEX                                                                  ;8B95D9;
    DEX                                                                  ;8B95DA;
    BPL .loopTilemap                                                     ;8B95DB;
    LDX.W #$0006                                                         ;8B95DD;

  .loopObjects:
    STZ.W CinematicBGObject_IndirectInstructionPointers,X                ;8B95E0;
    STZ.W CinematicBGObject_InstListPointers,X                           ;8B95E3;
    DEX                                                                  ;8B95E6;
    DEX                                                                  ;8B95E7;
    BPL .loopObjects                                                     ;8B95E8;
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8B95EA;
    PLX                                                                  ;8B95ED;
    PLP                                                                  ;8B95EE;
    RTL                                                                  ;8B95EF;


;;; $95F0: Spawn cinematic BG object ;;;
Spawn_CinematicBGObject:
    PHP                                                                  ;8B95F0;
    REP #$30                                                             ;8B95F1;
    PHX                                                                  ;8B95F3;
    STA.W CinematicBGObject_VRAMAddr                                     ;8B95F4;
    TYX                                                                  ;8B95F7;
    LDY.W #$0006                                                         ;8B95F8;

  .loop:
    LDA.W CinematicBGObject_InstListPointers,Y                           ;8B95FB;
    BEQ .spawn                                                           ;8B95FE;
    DEY                                                                  ;8B9600;
    DEY                                                                  ;8B9601;
    BPL .loop                                                            ;8B9602;
    PLX                                                                  ;8B9604;
    PLP                                                                  ;8B9605;
    SEC                                                                  ;8B9606;
    RTS                                                                  ;8B9607;

  .spawn:
    REP #$30                                                             ;8B9608;
    LDA.W $0002,X                                                        ;8B960A;
    STA.W CinematicBGObject_PreInstructions,Y                            ;8B960D;
    LDA.W $0004,X                                                        ;8B9610;
    STA.W CinematicBGObject_InstListPointers,Y                           ;8B9613;
    LDA.W #$0001                                                         ;8B9616;
    STA.W CinematicBGObject_InstructionTimers,Y                          ;8B9619;
    LDA.W #$0000                                                         ;8B961C;
    STA.W CinematicBGObject_IndirectInstructionPointers,Y                ;8B961F;
    LDA.W #$0000                                                         ;8B9622;
    STA.W CinematicBGObject_Timers,Y                                     ;8B9625;
    JSR.W ($0000,X)                                                      ;8B9628;
    PLX                                                                  ;8B962B;
    PLP                                                                  ;8B962C;
    CLC                                                                  ;8B962D;
    RTS                                                                  ;8B962E;


;;; $962F: Handle cinematic BG objects ;;;
Handle_CinematicBGObjects:
    PHP                                                                  ;8B962F;
    REP #$30                                                             ;8B9630;
    BIT.W CinematicBGObject_Enable                                       ;8B9632;
    BPL .return                                                          ;8B9635;
    LDX.W #$0006                                                         ;8B9637;

  .loop:
    STX.W CinematicBGObject_Index                                        ;8B963A;
    LDA.W CinematicBGObject_InstListPointers,X                           ;8B963D;
    BEQ .next                                                            ;8B9640;
    JSR.W Process_CinematicBGObject_InstList                             ;8B9642;
    LDX.W CinematicBGObject_Index                                        ;8B9645;

  .next:
    DEX                                                                  ;8B9648;
    DEX                                                                  ;8B9649;
    BPL .loop                                                            ;8B964A;
    BIT.W CinematicBGObject_TilemapUpdateFlag                            ;8B964C;
    BPL .updateEyes                                                      ;8B964F;
    JSR.W CinematicBGObjects_Update32x30CinematicBGTilemap               ;8B9651;

  .updateEyes:
    JSR.W CinematicBGObjects_UpdateSamusEyesTilemap                      ;8B9654;

  .return:
    PLP                                                                  ;8B9657;
    RTS                                                                  ;8B9658;


if !PAL != 0
Handle_CinematicBGObjects_NoEyes:
; Same as Handle_CinematicBGObjects, but omits the call to CinematicBGObjects_UpdateSamusEyesTilemap
    PHP
    REP #$30
    BIT.W CinematicBGObject_Enable
    BPL .return
    LDX.W #$0006

  .loop
    STX.W CinematicBGObject_Index
    LDA.W CinematicBGObject_InstListPointers,X
    BEQ .next
    JSR.W Process_CinematicBGObject_InstList
    LDX.W CinematicBGObject_Index

  .next:
    DEX
    DEX
    BPL .loop
    BIT.W CinematicBGObject_TilemapUpdateFlag
    BPL .return
    JSR.W CinematicBGObjects_Update32x30CinematicBGTilemap

  .return
    PLP
    RTS
endif


;;; $9659: Process cinematic BG object instruction list ;;;
Process_CinematicBGObject_InstList:
;; Parameter:
;;     X: Cinematic BG object index

; Some instructions (e.g. sleep) pop the return address pushed to the stack by $9676 and bank to return out of *this* routine
; (marked "terminate processing cinematic BG object")
    JSR.W (CinematicBGObject_PreInstructions,X)                          ;8B9659;
    PHB                                                                  ;8B965C;
    PEA.W CinematicBGObjectInstLists>>8&$FF00                            ;8B965D;
    PLB                                                                  ;8B9660;
    PLB                                                                  ;8B9661;
    LDX.W CinematicBGObject_Index                                        ;8B9662;
    DEC.W CinematicBGObject_InstructionTimers,X                          ;8B9665;
    BNE .return                                                          ;8B9668;
    LDY.W CinematicBGObject_InstListPointers,X                           ;8B966A;

  .loop:
    LDA.W $0000,Y                                                        ;8B966D;
    BPL .timer                                                           ;8B9670;
    STA.B DP_Temp12                                                      ;8B9672;
    INY                                                                  ;8B9674;
    INY                                                                  ;8B9675;
    PEA.W .loop-1                                                        ;8B9676;
    JMP.W (DP_Temp12)                                                    ;8B9679;

  .timer:
    STA.W CinematicBGObject_InstructionTimers,X                          ;8B967C;
    LDA.W $0002,Y                                                        ;8B967F;
    STA.W DP_Temp12                                                      ;8B9682;
    LDA.W $0004,Y                                                        ;8B9685;
    STA.W CinematicBGObject_IndirectInstructionPointers,X                ;8B9688;
    JSR.W CinematicBGObjects_ProcessIndirectInstruction                  ;8B968B;
    TYA                                                                  ;8B968E;
    CLC                                                                  ;8B968F;
    ADC.W #$0006                                                         ;8B9690;
    STA.W CinematicBGObject_InstListPointers,X                           ;8B9693;

  .return:
    PLB                                                                  ;8B9696;
    RTS                                                                  ;8B9697;


;;; $9698: Instruction - delete ;;;
CinematicBGObject_Instruction_Delete:
    REP #$30                                                             ;8B9698;
    STZ.W CinematicBGObject_IndirectInstructionPointers,X                ;8B969A;
    STZ.W CinematicBGObject_InstListPointers,X                           ;8B969D;
    PLA                                                                  ;8B96A0;
    PLB                                                                  ;8B96A1;
    RTS                                                                  ;8B96A2;


if !FEATURE_KEEP_UNREFERENCED
;;; $96A3: Unused. Instruction - sleep ;;;
UNUSED_CinematicBGObject_Instruction_Sleep_8B96A3:
    REP #$30                                                             ;8B96A3;
    DEY                                                                  ;8B96A5;
    DEY                                                                  ;8B96A6;
    TYA                                                                  ;8B96A7;
    STA.W CinematicBGObject_InstListPointers,X                           ;8B96A8;
    PLA                                                                  ;8B96AB;
    PLB                                                                  ;8B96AC;
    RTS                                                                  ;8B96AD;


;;; $96AE: Unused. Instruction - pre-instruction = [[Y]] ;;;
UNUSED_CinematicBGObject_Instruction_PreInstructionY_8B96AE:
    REP #$30                                                             ;8B96AE;
    LDA.W $0000,Y                                                        ;8B96B0;
    STA.W CinematicBGObject_PreInstructions,X                            ;8B96B3;
    INY                                                                  ;8B96B6;
    INY                                                                  ;8B96B7;
    RTS                                                                  ;8B96B8;


;;; $96B9: Unused. Instruction - clear pre-instruction ;;;
UNUSED_CinematicBGObject_Inst_ClearPreInstruction_8B96B9:
    REP #$30                                                             ;8B96B9;
    LDA.W #.return                                                       ;8B96BB;
    STA.W CinematicBGObject_PreInstructions,X                            ;8B96BE;

  .return:
    RTS                                                                  ;8B96C1;


;;; $96C2: Unused. Instruction - call external function [[Y]] ;;;
UNUSED_CinematicBGObjects_Inst_CallExternalFunction_8B96C2:
    REP #$30                                                             ;8B96C2;
    LDA.W $0000,Y                                                        ;8B96C4;
    STA.W DP_Temp12                                                      ;8B96C7;
    LDA.W $0001,Y                                                        ;8B96CA;
    STA.W DP_Temp13                                                      ;8B96CD;
    PHY                                                                  ;8B96D0;
    JSL.L .externalFunction                                              ;8B96D1;
    PLY                                                                  ;8B96D5;
    LDX.W CinematicBGObject_Index                                        ;8B96D6;
    INY                                                                  ;8B96D9;
    INY                                                                  ;8B96DA;
    INY                                                                  ;8B96DB;
    RTS                                                                  ;8B96DC;

  .externalFunction:
    JML.W [DP_Temp12]                                                    ;8B96DD;


;;; $96E0: Unused. Instruction - call external function [[Y]] with A = [[Y] + 3] ;;;
UNUSED_CinematicBGObjects_Inst_CallExternalFunction_8B96E0:
    REP #$30                                                             ;8B96E0;
    LDA.W $0000,Y                                                        ;8B96E2;
    STA.W DP_Temp12                                                      ;8B96E5;
    LDA.W $0001,Y                                                        ;8B96E8;
    STA.W DP_Temp13                                                      ;8B96EB;
    LDA.W $0003,Y                                                        ;8B96EE;
    PHY                                                                  ;8B96F1;
    JSL.L .externalFunction                                              ;8B96F2;
    PLY                                                                  ;8B96F6;
    LDX.W CinematicBGObject_Index                                        ;8B96F7;
    TYA                                                                  ;8B96FA;
    CLC                                                                  ;8B96FB;
    ADC.W #$0005                                                         ;8B96FC;
    TAY                                                                  ;8B96FF;
    RTS                                                                  ;8B9700;

  .externalFunction:
    JML.W [DP_Temp12]                                                    ;8B9701;


;;; $9704: Unused. Instruction - go to [Y] + ±[[Y]] ;;;
UNUSED_CinematicBGObjects_Inst_GotoY_8B9704:
    REP #$30                                                             ;8B9704;
    STY.W DP_Temp12                                                      ;8B9706;
    DEY                                                                  ;8B9709;
    LDA.W $0000,Y                                                        ;8B970A;
    XBA                                                                  ;8B970D;
    BMI .highByte                                                        ;8B970E;
    AND.W #$00FF                                                         ;8B9710;
    BRA +                                                                ;8B9713;

  .highByte:
    ORA.W #$FF00                                                         ;8B9715;

+   CLC                                                                  ;8B9718;
    ADC.W DP_Temp12                                                      ;8B9719;
    TAY                                                                  ;8B971C;
    RTS                                                                  ;8B971D;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $971E: Instruction - go to [[Y]] ;;;
CinematicBGObject_Instruction_GotoY:
    REP #$30                                                             ;8B971E;
    LDA.W $0000,Y                                                        ;8B9720;
    TAY                                                                  ;8B9723;
    RTS                                                                  ;8B9724;


if !FEATURE_KEEP_UNREFERENCED
;;; $9725: Unused. Instruction - decrement timer and go to [[Y]] if non-zero ;;;
UNUSED_CinematicBGObjects_Inst_DecrementTimer_GotoY_8B9724:
    REP #$30                                                             ;8B9725;
    DEC.W CinematicBGObject_Timers,X                                     ;8B9727;
    BNE CinematicBGObject_Instruction_GotoY                              ;8B972A;
    INY                                                                  ;8B972C;
    INY                                                                  ;8B972D;
    RTS                                                                  ;8B972E;


;;; $972F: Unused. Instruction - decrement timer and go to [Y] + ±[[Y]] if non-zero ;;;
UNUSED_CinematicBGObjects_Inst_DecrementTimer_GotoY_8B972F:
    REP #$30                                                             ;8B972F;
    DEC.W CinematicBGObject_Timers,X                                     ;8B9731;
    BNE UNUSED_CinematicBGObjects_Inst_GotoY_8B9704                      ;8B9734;
    INY                                                                  ;8B9736;
    RTS                                                                  ;8B9737;


;;; $9738: Unused. Instruction - timer = [[Y]] ;;;
UNUSED_CinematicBGObjects_Inst_TimerInY_8B9738:
    REP #$30                                                             ;8B9738;
    LDA.W $0000,Y                                                        ;8B973A;
    STA.W CinematicBGObject_Timers,X                                     ;8B973D;
    INY                                                                  ;8B9740;
    INY                                                                  ;8B9741;
    RTS                                                                  ;8B9742;


;;; $9743: Unused. RTS ;;;
UNUSED_REP30RTS_8B9743:
    REP #$30                                                             ;8B9743;
    RTS                                                                  ;8B9745;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9746: Draw cinematic sprite objects - intro/title sequence ;;;
Draw_CinematicSpriteObjects_IntroTitleSequence:
    PHP                                                                  ;8B9746;
    REP #$30                                                             ;8B9747;
    PHB                                                                  ;8B9749;
    LDX.W #$001E                                                         ;8B974A;

  .loop:
    LDA.W CinematicSpriteObject_SpritemapPointers,X                      ;8B974D;
    BEQ .next                                                            ;8B9750;
    PEA.W CinematicBGObjectInstLists>>8                                  ;8B9752;
    PLB                                                                  ;8B9755;
    PLB                                                                  ;8B9756;
    LDY.W CinematicSpriteObject_SpritemapPointers,X                      ;8B9757;
    LDA.W CinematicSpriteObject_PaletteIndices,X                         ;8B975A;
    STA.B DP_Temp16                                                      ;8B975D;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8B975F;
    SEC                                                                  ;8B9762;
    SBC.W Layer1XPosition                                                ;8B9763;
    STA.B DP_Temp14                                                      ;8B9766;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8B9768;
    SEC                                                                  ;8B976B;
    SBC.W Layer1YPosition                                                ;8B976C;
    STA.B DP_Temp12                                                      ;8B976F;
    BIT.W #$FF00                                                         ;8B9771;
    BNE +                                                                ;8B9774;
    CLC                                                                  ;8B9776;
    ADC.W #$0080                                                         ;8B9777;
    CMP.W #$01FF                                                         ;8B977A;
    BCS .next                                                            ;8B977D;
    JSL.L AddSpritemapToOAM                                              ;8B977F;
    BRA .next                                                            ;8B9783;

+   CLC                                                                  ;8B9785;
    ADC.W #$0080                                                         ;8B9786;
    CMP.W #$01FF                                                         ;8B9789;
    BCS .next                                                            ;8B978C;
    JSL.L AddSpritemapToOAM_Offscreen                                    ;8B978E;

  .next:
    DEX                                                                  ;8B9792;
    DEX                                                                  ;8B9793;
    BPL .loop                                                            ;8B9794;
    PLB                                                                  ;8B9796;
    PLP                                                                  ;8B9797;
    RTS                                                                  ;8B9798;


;;; $9799: Draw cinematic sprite objects - ending/credits ;;;
Draw_CinematicSpriteObjects_EndingCredits:
    PHP                                                                  ;8B9799;
    REP #$30                                                             ;8B979A;
    PHB                                                                  ;8B979C;
    LDX.W #$001E                                                         ;8B979D;

  .loop:
    LDA.W CinematicSpriteObject_SpritemapPointers,X                      ;8B97A0;
    BEQ .next                                                            ;8B97A3;
    PEA.W $8C00                                                          ;8B97A5;
    PLB                                                                  ;8B97A8;
    PLB                                                                  ;8B97A9;
    LDY.W CinematicSpriteObject_SpritemapPointers,X                      ;8B97AA;
    LDA.W CinematicSpriteObject_PaletteIndices,X                         ;8B97AD;
    STA.B DP_Temp16                                                      ;8B97B0;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8B97B2;
    SEC                                                                  ;8B97B5;
    SBC.W Layer1XPosition                                                ;8B97B6;
    STA.B DP_Temp14                                                      ;8B97B9;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8B97BB;
    SEC                                                                  ;8B97BE;
    SBC.W Layer1YPosition                                                ;8B97BF;
    STA.B DP_Temp12                                                      ;8B97C2;
    BIT.W #$FF00                                                         ;8B97C4;
    BNE +                                                                ;8B97C7;
    CLC                                                                  ;8B97C9;
    ADC.W #$0080                                                         ;8B97CA;
    CMP.W #$01FF                                                         ;8B97CD;
    BCS .next                                                            ;8B97D0;
    JSL.L AddSpritemapToOAM                                              ;8B97D2;
    BRA .next                                                            ;8B97D6;

+   CLC                                                                  ;8B97D8;
    ADC.W #$0080                                                         ;8B97D9;
    CMP.W #$01FF                                                         ;8B97DC;
    BCS .next                                                            ;8B97DF;
    JSL.L AddSpritemapToOAM_Offscreen                                    ;8B97E1;

  .next:
    DEX                                                                  ;8B97E5;
    DEX                                                                  ;8B97E6;
    BPL .loop                                                            ;8B97E7;
    PLB                                                                  ;8B97E9;
    LDA.W CinematicFunction                                              ;8B97EA;
    CMP.W #CinematicFunc_Ending_ZebesDestruction2_CrossFade_FadingIn     ;8B97ED;
    BPL .return                                                          ;8B97F0;
    JSR.W MoveUnusedSpritesOffScreen                                     ;8B97F2;

  .return:
    PLP                                                                  ;8B97F5;
    RTS                                                                  ;8B97F6;


;;; $97F7: Spawn text glow object ;;;
Spawn_TextGlowObject:
    PHX                                                                  ;8B97F7;
    LDX.W #$000E                                                         ;8B97F8;

  .loop:
    LDA.W TextGlowObject_IndirectInstructionPointers,X                   ;8B97FB;
    BEQ .spawn                                                           ;8B97FE;
    DEX                                                                  ;8B9800;
    DEX                                                                  ;8B9801;
    BPL .loop                                                            ;8B9802;
    PLX                                                                  ;8B9804;
    RTS                                                                  ;8B9805;

  .spawn:
    TYA                                                                  ;8B9806;
    STA.W TextGlowObject_IndirectInstructionPointers,X                   ;8B9807;
    LDA.W #$0001                                                         ;8B980A;
    STA.W TextGlowObject_Timers,X                                        ;8B980D;
    LDA.B DP_Temp12                                                      ;8B9810;
    AND.W #$00FF                                                         ;8B9812;
    STA.W TextGlowObject_XPositions,X                                    ;8B9815;
    LDA.B DP_Temp13                                                      ;8B9818;
    AND.W #$00FF                                                         ;8B981A;
    STA.W TextGlowObject_YPositions,X                                    ;8B981D;
    LDA.W #$0000                                                         ;8B9820;
    STA.W TextGlowObject_PaletteIndices,X                                ;8B9823;
    PLX                                                                  ;8B9826;
    RTS                                                                  ;8B9827;


;;; $9828: Handle text glow objects ;;;
Handle_TextGlowObject:
    PHP                                                                  ;8B9828;
    REP #$30                                                             ;8B9829;
    PHB                                                                  ;8B982B;
    PEA.W IndirectInstructions>>8                                        ;8B982C;
    PLB                                                                  ;8B982F;
    PLB                                                                  ;8B9830;
    LDX.W #$000E                                                         ;8B9831;

  .loop:
    STX.W TextGlowObject_Index                                           ;8B9834;
    LDA.W TextGlowObject_IndirectInstructionPointers,X                   ;8B9837;
    BEQ .next                                                            ;8B983A;
    JSR.W Process_TextGlowObject                                         ;8B983C;
    LDX.W TextGlowObject_Index                                           ;8B983F;

  .next:
    DEX                                                                  ;8B9842;
    DEX                                                                  ;8B9843;
    BPL .loop                                                            ;8B9844;
    PLB                                                                  ;8B9846;
    PLP                                                                  ;8B9847;
    RTS                                                                  ;8B9848;


;;; $9849: Process text glow object ;;;
Process_TextGlowObject:
    LDX.W TextGlowObject_Index                                           ;8B9849;
    DEC.W TextGlowObject_Timers,X                                        ;8B984C;
    BEQ +                                                                ;8B984F;
    RTS                                                                  ;8B9851;

+   LDA.W TextGlowObject_PaletteIndices,X                                ;8B9852;
    STA.B DP_Temp1C                                                      ;8B9855;
    LDY.W TextGlowObject_IndirectInstructionPointers,X                   ;8B9857;
    LDA.W TextGlowObject_XPositions,X                                    ;8B985A;
    AND.W #$00FF                                                         ;8B985D;
    ASL                                                                  ;8B9860;
    STA.W DP_Temp14                                                      ;8B9861;
    SEP #$20                                                             ;8B9864;
    LDA.B #$40                                                           ;8B9866;
    STA.W $4202                                                          ;8B9868;
    LDA.W TextGlowObject_YPositions,X                                    ;8B986B;
    STA.W $4203                                                          ;8B986E;
    NOP                                                                  ;8B9871;
    NOP                                                                  ;8B9872;
    NOP                                                                  ;8B9873;
    REP #$20                                                             ;8B9874;
    LDA.W $4216                                                          ;8B9876;
    CLC                                                                  ;8B9879;
    ADC.W DP_Temp14                                                      ;8B987A;
    STA.W DP_Temp16                                                      ;8B987D;
    TAX                                                                  ;8B9880;
    LDA.W $0002,Y                                                        ;8B9881;
    AND.W #$00FF                                                         ;8B9884;
    STA.W DP_Temp12                                                      ;8B9887;
    STA.W DP_Temp18                                                      ;8B988A;
    LDA.W $0003,Y                                                        ;8B988D;
    AND.W #$00FF                                                         ;8B9890;
    STA.W DP_Temp14                                                      ;8B9893;

  .loop:
    LDA.L CinematicBGTilemap,X                                           ;8B9896;
    AND.W #$E3FF                                                         ;8B989A;
    ORA.B DP_Temp1C                                                      ;8B989D;
    STA.L CinematicBGTilemap,X                                           ;8B989F;
    INY                                                                  ;8B98A3;
    INY                                                                  ;8B98A4;
    INX                                                                  ;8B98A5;
    INX                                                                  ;8B98A6;
    DEC.W DP_Temp12                                                      ;8B98A7;
    BEQ +                                                                ;8B98AA;
    BRA .loop                                                            ;8B98AC;

+   LDA.W DP_Temp18                                                      ;8B98AE;
    STA.W DP_Temp12                                                      ;8B98B1;
    DEC.W DP_Temp14                                                      ;8B98B4;
    BEQ +                                                                ;8B98B7;
    LDA.W DP_Temp16                                                      ;8B98B9;
    CLC                                                                  ;8B98BC;
    ADC.W #$0040                                                         ;8B98BD;
    STA.W DP_Temp16                                                      ;8B98C0;
    TAX                                                                  ;8B98C3;
    BRA .loop                                                            ;8B98C4;

+   LDX.W TextGlowObject_Index                                           ;8B98C6;
    LDA.W TextGlowObject_PaletteIndices,X                                ;8B98C9;
    CMP.W #$0C00                                                         ;8B98CC;
    BEQ .return                                                          ;8B98CF;
    CLC                                                                  ;8B98D1;
    ADC.W #$0400                                                         ;8B98D2;
    STA.W TextGlowObject_PaletteIndices,X                                ;8B98D5;
    LDA.W #$0005                                                         ;8B98D8;
    STA.W TextGlowObject_Timers,X                                        ;8B98DB;
    RTS                                                                  ;8B98DE;

  .return:
    STZ.W TextGlowObject_IndirectInstructionPointers,X                   ;8B98DF;
    RTS                                                                  ;8B98E2;


;;; $98E3: Enable credits object ;;;
Enable_CreditsObject:
    PHP                                                                  ;8B98E3;
    REP #$30                                                             ;8B98E4;
    LDA.W #$8000                                                         ;8B98E6;
    TSB.W CreditsObject_Enable                                           ;8B98E9;
    PLP                                                                  ;8B98EC;
    RTS                                                                  ;8B98ED;


;;; $98EE: Disable credits object ;;;
Disable_CreditsObject:
    PHP                                                                  ;8B98EE;
    REP #$30                                                             ;8B98EF;
    LDA.W #$8000                                                         ;8B98F1;
    TRB.W CreditsObject_Enable                                           ;8B98F4;
    PLP                                                                  ;8B98F7;
    RTS                                                                  ;8B98F8;


;;; $98F9: Clear credits object, cinematic BG tilemap = [A] ;;;
Clear_CreditsObject_CinematicBGTilemapInA:
    PHP                                                                  ;8B98F9;
    REP #$30                                                             ;8B98FA;
    PHX                                                                  ;8B98FC;
    LDX.W #$07FE                                                         ;8B98FD;

  .loop:
    STA.L CinematicBGTilemap,X                                           ;8B9900;
    DEX                                                                  ;8B9904;
    DEX                                                                  ;8B9905;
    BPL .loop                                                            ;8B9906;
    LDA.W #$0000                                                         ;8B9908;
    STA.W CreditsObject_CinematicBGTilemapRowIndex                       ;8B990B;
    STZ.W TextGlowObject_IndirectInstructionPointers                     ;8B990E;
    STZ.W CreditsObject_InstructionTimer                                 ;8B9911;
    STZ.W CreditsObject_Timer                                            ;8B9914;
    STZ.W CreditsObject_PreInstruction                                   ;8B9917;
    LDA.W #$4800                                                         ;8B991A;
    STA.W CinematicBGObject_VRAMAddr                                     ;8B991D;
    STZ.W CreditsObject_LastCreditsUpdateYPosition                       ;8B9920;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9923;
    STZ.W CinematicBG1_XPosition                                         ;8B9926;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9929;
    STZ.W CinematicBG1_YPosition                                         ;8B992C;
    PLX                                                                  ;8B992F;
    PLP                                                                  ;8B9930;
    RTS                                                                  ;8B9931;


;;; $9932: Spawn credits object ;;;
Spawn_CreditsObject:
    PHP                                                                  ;8B9932;
    REP #$30                                                             ;8B9933;
    PHX                                                                  ;8B9935;
    TYX                                                                  ;8B9936;
    LDA.W $0002,X                                                        ;8B9937;
    STA.W CreditsObject_PreInstruction                                   ;8B993A;
    LDA.W $0004,X                                                        ;8B993D;
    STA.W TextGlowObject_IndirectInstructionPointers                     ;8B9940;
    LDA.W #$0001                                                         ;8B9943;
    STA.W CreditsObject_InstructionTimer                                 ;8B9946;
    LDA.W #$0000                                                         ;8B9949;
    STA.W CreditsObject_Timer                                            ;8B994C;
    JSR.W ($0000,X)                                                      ;8B994F;
    PLX                                                                  ;8B9952;
    PLP                                                                  ;8B9953;
    RTS                                                                  ;8B9954;


;;; $9955: Handle credits object ;;;
Handle_CreditsObject:
    PHP                                                                  ;8B9955;
    REP #$30                                                             ;8B9956;
    BIT.W CreditsObject_Enable                                           ;8B9958;
    BPL .return                                                          ;8B995B;
    LDA.W TextGlowObject_IndirectInstructionPointers                     ;8B995D;
    BEQ .updateTilemap                                                   ;8B9960;
    JSR.W Process_CreditsObject_InstList                                 ;8B9962;

  .updateTilemap:
    JSR.W CinematicBGObjects_Update32x32CinematicBGTilemap               ;8B9965;

  .return:
    PLP                                                                  ;8B9968;
    RTS                                                                  ;8B9969;


;;; $996A: Process credits object instruction list ;;;
Process_CreditsObject_InstList:
; The delete instruction pops the return address pushed to the stack by $99A4 and bank to return out of *this* routine
; (marked "terminate processing credits object")
    LDX.W #$0000                                                         ;8B996A;
    JSR.W (CreditsObject_PreInstruction,X)                               ;8B996D;
    PHB                                                                  ;8B9970;
    PEA.W CreditsInstLists>>8                                            ;8B9971;
    PLB                                                                  ;8B9974;
    PLB                                                                  ;8B9975;
    LDA.W CinematicBG1_YSubPosition                                      ;8B9976;
    CLC                                                                  ;8B9979;
    ADC.W #regional($8000, $9800)                                        ;8B997A;
    STA.W CinematicBG1_YSubPosition                                      ;8B997D;
    LDA.W CinematicBG1_YPosition                                         ;8B9980;
    ADC.W #$0000                                                         ;8B9983;
    STA.W CinematicBG1_YPosition                                         ;8B9986;
    SEC                                                                  ;8B9989;
    SBC.W CreditsObject_LastCreditsUpdateYPosition                       ;8B998A;
    CMP.W #$0008                                                         ;8B998D;
    BMI .return                                                          ;8B9990;
    LDA.W CinematicBG1_YPosition                                         ;8B9992;
    STA.W CreditsObject_LastCreditsUpdateYPosition                       ;8B9995;
    LDY.W TextGlowObject_IndirectInstructionPointers                     ;8B9998;

  .loop:
    LDA.W $0000,Y                                                        ;8B999B;
    BPL .copyRow                                                         ;8B999E;
    STA.B DP_Temp12                                                      ;8B99A0;
    INY                                                                  ;8B99A2;
    INY                                                                  ;8B99A3;
    PEA.W .loop-1                                                        ;8B99A4;
    JMP.W (DP_Temp12)                                                    ;8B99A7;

  .copyRow:
    JSR.W Copy_CreditsRow_ToCinematicBGTilemap                           ;8B99AA;
    LDA.W CreditsObject_CinematicBGTilemapRowIndex                       ;8B99AD;
    INC                                                                  ;8B99B0;
    AND.W #$001F                                                         ;8B99B1;
    STA.W CreditsObject_CinematicBGTilemapRowIndex                       ;8B99B4;
    TYA                                                                  ;8B99B7;
    CLC                                                                  ;8B99B8;
    ADC.W #$0004                                                         ;8B99B9;
    STA.W TextGlowObject_IndirectInstructionPointers                     ;8B99BC;

  .return:
    PLB                                                                  ;8B99BF;
    RTS                                                                  ;8B99C0;


;;; $99C1: Copy credits row to cinematic BG tilemap ;;;
Copy_CreditsRow_ToCinematicBGTilemap:
; Copy 40h bytes from $7F:0000 + [[Y] + 2] to $7E:3000 + CreditsObject_CinematicBGTilemapRowIndex * 40h
    PHP                                                                  ;8B99C1;
    REP #$30                                                             ;8B99C2;
    LDA.W #$7F00                                                         ;8B99C4;
    STA.B DP_Temp01                                                      ;8B99C7;
    STZ.B DP_Temp00                                                      ;8B99C9;
    PHY                                                                  ;8B99CB;
    SEP #$20                                                             ;8B99CC;
    LDA.B #$40                                                           ;8B99CE;
    STA.W $4202                                                          ;8B99D0;
    LDA.W CreditsObject_CinematicBGTilemapRowIndex                       ;8B99D3;
    STA.W $4203                                                          ;8B99D6;
    NOP                                                                  ;8B99D9;
    NOP                                                                  ;8B99DA;
    NOP                                                                  ;8B99DB;
    REP #$20                                                             ;8B99DC;
    LDA.W $4216                                                          ;8B99DE;
    TAX                                                                  ;8B99E1;
    LDA.W #$001F                                                         ;8B99E2;
    STA.W DP_Temp14                                                      ;8B99E5;
    LDA.W $0002,Y                                                        ;8B99E8;
    TAY                                                                  ;8B99EB;

  .loop:
    LDA.B [DP_Temp00],Y                                                  ;8B99EC;
    STA.L CinematicBGTilemap,X                                           ;8B99EE;
    INX                                                                  ;8B99F2;
    INX                                                                  ;8B99F3;
    INY                                                                  ;8B99F4;
    INY                                                                  ;8B99F5;
    DEC.W DP_Temp14                                                      ;8B99F6;
    BPL .loop                                                            ;8B99F9;
    PLY                                                                  ;8B99FB;
    PLP                                                                  ;8B99FC;
    RTS                                                                  ;8B99FD;


;;; $99FE: Instruction - delete ;;;
Instruction_CreditsObject_Delete:
    REP #$30                                                             ;8B99FE;
    STZ.W TextGlowObject_IndirectInstructionPointers                     ;8B9A00;
    PLA                                                                  ;8B9A03;
    PLB                                                                  ;8B9A04;
    RTS                                                                  ;8B9A05;


;;; $9A06: Instruction - go to [[Y]] ;;;
Instruction_CreditsObject_GotoY:
    REP #$30                                                             ;8B9A06;
    LDA.W $0000,Y                                                        ;8B9A08;
    TAY                                                                  ;8B9A0B;
    RTS                                                                  ;8B9A0C;


;;; $9A0D: Instruction - decrement timer and go to [[Y]] if non-zero ;;;
Instruction_CreditsObject_DecrementTimer_GotoYIfNonZero:
    REP #$30                                                             ;8B9A0D;
    DEC.W CreditsObject_Timer                                            ;8B9A0F;
    BNE Instruction_CreditsObject_GotoY                                  ;8B9A12;
    INY                                                                  ;8B9A14;
    INY                                                                  ;8B9A15;
    RTS                                                                  ;8B9A16;


;;; $9A17: Instruction - timer = [[Y]] ;;;
Instruction_CreditsObject_TimerInY:
    REP #$30                                                             ;8B9A17;
    LDA.W $0000,Y                                                        ;8B9A19;
    STA.W CreditsObject_Timer                                            ;8B9A1C;
    INY                                                                  ;8B9A1F;
    INY                                                                  ;8B9A20;
    RTS                                                                  ;8B9A21;


;;; $9A22: Game state 1 - title sequence ;;;
GameState1_TitleSequence:
    PHP                                                                  ;8B9A22;
    PHB                                                                  ;8B9A23;
    PHK                                                                  ;8B9A24;
    PLB                                                                  ;8B9A25;
    REP #$30                                                             ;8B9A26;
    PEA.W .manualReturn-1                                                ;8B9A28;
    JMP.W (CinematicFunction)                                            ;8B9A2B;

  .manualReturn:
    JSR.W Handle_CinematicSpriteObjects                                  ;8B9A2E;
    JSR.W Handle_Mode7Objects                                            ;8B9A31;
    JSL.L PaletteFXObject_Handler                                        ;8B9A34;
    JSR.W Draw_CinematicSpriteObjects_IntroTitleSequence                 ;8B9A38;
    JSR.W SkipToTitleScreenCheck                                         ;8B9A3B;
    JSR.W SkipToTitleScreenHandler                                       ;8B9A3E;
    JSR.W HandleMode7TransformMatrixAndBG1Position_NoRotation            ;8B9A41;
    PLB                                                                  ;8B9A44;
    PLP                                                                  ;8B9A45;
    RTL                                                                  ;8B9A46;


;;; $9A47: RTS ;;;
RTS_8B9A47:
    RTS                                                                  ;8B9A47;


;;; $9A48: Skip to title screen check ;;;
SkipToTitleScreenCheck:
    LDA.W CinematicFunction                                              ;8B9A48;
    CMP.W #RTS_8B9F28                                                    ;8B9A4B;
    BPL .return                                                          ;8B9A4E;
    LDA.B DP_Controller1New                                              ;8B9A50;
    BIT.W #$9080                                                         ;8B9A52;
    BEQ .return                                                          ;8B9A55;
    LDA.W SkipToTitleScreenIndex                                         ;8B9A57;
    BNE .return                                                          ;8B9A5A;
    LDA.W #$0001                                                         ;8B9A5C;
    STA.W SkipToTitleScreenIndex                                         ;8B9A5F;
    STZ.W ScreenFadeDelay                                                ;8B9A62;
    LDA.W #$0002                                                         ;8B9A65;
    STA.W ScreenFadeCounter                                              ;8B9A68;

  .return:
    RTS                                                                  ;8B9A6B;


;;; $9A6C: Skip to title screen handler ;;;
SkipToTitleScreenHandler:
    PHP                                                                  ;8B9A6C;
    REP #$30                                                             ;8B9A6D;
    LDA.W SkipToTitleScreenIndex                                         ;8B9A6F;
    BEQ .return                                                          ;8B9A72;
    ASL                                                                  ;8B9A74;
    TAX                                                                  ;8B9A75;
    JSR.W (.pointers,X)                                                  ;8B9A76;

  .return:
    PLP                                                                  ;8B9A79;
    RTS                                                                  ;8B9A7A;

  .pointers:
    dw $0000                                                             ;8B9A7B;
    dw SkipToTitleScreenHandler_1_FadeOut                                ;8B9A7D;
    dw SkipToTitleScreenHandler_2_PrepareTitleScreen                     ;8B9A7F;
    dw SkipToTitleScreenHandler_3_FadeIn                                 ;8B9A81;


;;; $9A83: Skip to title screen handler - 1 (fade out) ;;;
SkipToTitleScreenHandler_1_FadeOut:
    JSR.W AdvanceFastScreenFadeOut                                       ;8B9A83;
    BCC .return                                                          ;8B9A86;
    LDA.W #$0002                                                         ;8B9A88;
    STA.W SkipToTitleScreenIndex                                         ;8B9A8B;
    LDA.W #RTS_8B9F28                                                    ;8B9A8E;
    STA.W CinematicFunction                                              ;8B9A91;
    LDA.W #$0006                                                         ;8B9A94;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8B9A97;

  .return:
    RTS                                                                  ;8B9A9B;


;;; $9A9C: Skip to title screen handler - 2 (prepare title screen) ;;;
SkipToTitleScreenHandler_2_PrepareTitleScreen:
    JSR.W Clear_CinematicSpriteObjects                                   ;8B9A9C;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_SuperMetroidLogoImmediate ;8B9A9F;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9AA2;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_NintendoCopyrightImmediate ;8B9AA5;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9AA8;
    STZ.W ScreenFadeDelay                                                ;8B9AAB;
    LDA.W #$0002                                                         ;8B9AAE;
    STA.W ScreenFadeCounter                                              ;8B9AB1;
    LDA.W #$0100                                                         ;8B9AB4;
    STA.W Mode7TransformationZoomLevel                                   ;8B9AB7;
    STZ.W CinematicBG1_XPosition                                         ;8B9ABA;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9ABD;
    STZ.W CinematicBG1_YPosition                                         ;8B9AC0;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9AC3;
    STZ.W CinematicBG1_XSpeed                                            ;8B9AC6;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B9AC9;
    STZ.W CinematicBG1_YSpeed                                            ;8B9ACC;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B9ACF;
    LDA.W #$0003                                                         ;8B9AD2;
    STA.W SkipToTitleScreenIndex                                         ;8B9AD5;
    LDX.W #$0100                                                         ;8B9AD8;

  .loop:
    LDA.L Palettes_TitleScreen,X                                         ;8B9ADB;
    STA.L Palettes,X                                                     ;8B9ADF;
    INX                                                                  ;8B9AE3;
    INX                                                                  ;8B9AE4;
    CPX.W #$0200                                                         ;8B9AE5;
    BMI .loop                                                            ;8B9AE8;
    LDA.W #$7FFF                                                         ;8B9AEA;
    STA.L Palettes_SpriteP4C9                                            ;8B9AED;
    LDA.W #$7D80                                                         ;8B9AF1;
    STA.L Palettes_SpriteP4CA                                            ;8B9AF4;
    JSL.L Clear_PaletteFXObjects                                         ;8B9AF8;
    LDY.W #PaletteFXObjects_TitleScreenBabyMetroidTubeLight              ;8B9AFC;
    JSL.L Spawn_PaletteFXObject                                          ;8B9AFF;
    LDY.W #PaletteFXObjects_TitleScreenFlickeringDisplays                ;8B9B03;
    JSL.L Spawn_PaletteFXObject                                          ;8B9B06;
    JSR.W Deactivate_TileSequence_BlueLight                              ;8B9B0A;
    SEP #$20                                                             ;8B9B0D;
    LDA.B #$11                                                           ;8B9B0F;
    STA.B DP_MainScreenLayers                                            ;8B9B11;
    REP #$20                                                             ;8B9B13;
    JSL.L Spawn_TitleSequenceGradient_HDMAObjects                        ;8B9B15;
    RTS                                                                  ;8B9B19;


;;; $9B1A: Initialisation function - cinematic sprite object $A119 (Super Metroid title logo - immediate) ;;;
InitFunction_CinematicSpriteObject_SuperMetroidLogoImmediate:
    LDA.W #$0080                                                         ;8B9B1A;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9B1D;
    LDA.W #$0030                                                         ;8B9B20;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9B23;
    LDA.W #$0400                                                         ;8B9B26;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9B29;
    RTS                                                                  ;8B9B2C;


if !FEATURE_KEEP_UNREFERENCED
;;; $9B2D: Initialisation function - cinematic sprite object $A11F (unused. Nintendo boot logo - immediate) ;;;
InitFunction_CinematicSpriteObject_UnusedNintendoBootLogoImm:
    LDA.W #$0080                                                         ;8B9B2D;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9B30;
    LDA.W #$0051                                                         ;8B9B33;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9B36;
    LDA.W #$0000                                                         ;8B9B39;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9B3C;
    RTS                                                                  ;8B9B3F;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9B40: Initialisation function - cinematic sprite object $A125 (Nintendo copyright - immediate) ;;;
InitFunc_CinematicSpriteObject_NintendoCopyrightImmediate:
    LDA.W #$0080                                                         ;8B9B40;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9B43;
    LDA.W #$00C4                                                         ;8B9B46;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9B49;
    LDA.W #$0800                                                         ;8B9B4C;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9B4F;
    RTS                                                                  ;8B9B52;


;;; $9B53: Skip to title screen handler - 3 (fade in) ;;;
SkipToTitleScreenHandler_3_FadeIn:
    JSR.W AdvanceFastScreenFadeIn                                        ;8B9B53;
    BCC .return                                                          ;8B9B56;
    STZ.W SkipToTitleScreenIndex                                         ;8B9B58;
    LDA.W #regional($0384, $02D0)                                        ;8B9B5B;
    STA.W DemoTimer                                                      ;8B9B5E;
    LDA.W #CinematicFunction_TitleScreen                                 ;8B9B61;
    STA.W CinematicFunction                                              ;8B9B64;

  .return:
    RTS                                                                  ;8B9B67;


;;; $9B68: Cinematic function - title sequence - setup ;;;
CinematicFunction_LoadTitleSequence:
    JSL.L Load_Title_Sequence_Graphics                                   ;8B9B68;
    LDA.W #$FF03                                                         ;8B9B6C;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8B9B6F;
    LDA.W #RTS_8B9A47                                                    ;8B9B73;
    STA.W CinematicFunction                                              ;8B9B76;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_1994ScrollingText ;8B9B79;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9B7C;
    LDA.W #$0005                                                         ;8B9B7F;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8B9B82;
    RTS                                                                  ;8B9B86;


;;; $9B87: Load title sequence graphics ;;;
Load_Title_Sequence_Graphics:
; Called by:
;     $9B68: Cinematic function - title sequence - setup
;     $82:85FB: Game state 2Ch (transition from demo)
    PHP                                                                  ;8B9B87;
    PHB                                                                  ;8B9B88;
    PHK                                                                  ;8B9B89;
    PLB                                                                  ;8B9B8A;
    REP #$30                                                             ;8B9B8B;
    JSR.W Setup_PPU_TitleSequence                                        ;8B9B8D;
    STZ.B DP_IRQCmd                                                      ;8B9B90;
    STZ.B DP_NextIRQCmd                                                  ;8B9B92;
    LDX.W #$0000                                                         ;8B9B94;

  .loopTitleScreenPalette:
    LDA.L Palettes_TitleScreen,X                                         ;8B9B97;
    STA.L Palettes,X                                                     ;8B9B9B;
    INX                                                                  ;8B9B9F;
    INX                                                                  ;8B9BA0;
    CPX.W #$0200                                                         ;8B9BA1;
    BMI .loopTitleScreenPalette                                          ;8B9BA4;
    LDA.W #Tiles_Title_Background_Mode7>>8&$FF00                         ;8B9BA6;
    STA.B DP_DecompSrc+1                                                 ;8B9BA9;
    LDA.W #Tiles_Title_Background_Mode7                                  ;8B9BAB;
    STA.B DP_DecompSrc                                                   ;8B9BAE;
    JSL.L Decompression_HardcodedDestination                             ;8B9BB0;
    dl TitleBackgroundMode7Tiles                                         ;8B9BB4;
    LDA.W #Title_Mode7_Tilemap>>8&$FF00                                  ;8B9BB7;
    STA.B DP_DecompSrc+1                                                 ;8B9BBA;
    LDA.W #Title_Mode7_Tilemap                                           ;8B9BBC;
    STA.B DP_DecompSrc                                                   ;8B9BBF;
    JSL.L Decompression_HardcodedDestination                             ;8B9BC1;
    dl TitleMode7Tilemap                                                 ;8B9BC5;
    LDA.W #Tiles_Title_Sprite>>8&$FF00                                   ;8B9BC8;
    STA.B DP_DecompSrc+1                                                 ;8B9BCB;
    LDA.W #Tiles_Title_Sprite                                            ;8B9BCD;
    STA.B DP_DecompSrc                                                   ;8B9BD0;
    JSL.L Decompression_HardcodedDestination                             ;8B9BD2;
    dl TitleSpriteTiles                                                  ;8B9BD6;
    LDA.W #Tiles_Baby_Metroid_Mode7>>8&$FF00                             ;8B9BD9;
    STA.B DP_DecompSrc+1                                                 ;8B9BDC;
    LDA.W #Tiles_Baby_Metroid_Mode7                                      ;8B9BDE;
    STA.B DP_DecompSrc                                                   ;8B9BE1;
    JSL.L Decompression_HardcodedDestination                             ;8B9BE3;
    dl TitleBabyMetroidTiles                                             ;8B9BE7;
    SEP #$30                                                             ;8B9BEA;
    LDA.B #$00                                                           ;8B9BEC;
    STA.W $2116                                                          ;8B9BEE;
    LDA.B #$00                                                           ;8B9BF1;
    STA.W $2117                                                          ;8B9BF3;
    LDA.B #$80                                                           ;8B9BF6;
    STA.W $2115                                                          ;8B9BF8;
    JSL.L SetupHDMATransfer                                              ;8B9BFB;
    db $01,$00,$19                                                       ;8B9BFF;
    dl TitleBackgroundMode7Tiles                                         ;8B9C02;
    dw $4000                                                             ;8B9C05;
    LDA.B #$02                                                           ;8B9C07;
    STA.W $420B                                                          ;8B9C09;
    REP #$10                                                             ;8B9C0C;
    STZ.W $2115                                                          ;8B9C0E;
    STZ.W $2116                                                          ;8B9C11;
    STZ.W $2117                                                          ;8B9C14;
    LDX.W #$4000                                                         ;8B9C17;
    LDA.B #$FF                                                           ;8B9C1A;

  .loop:
    STA.W $2118                                                          ;8B9C1C;
    DEX                                                                  ;8B9C1F;
    BNE .loop                                                            ;8B9C20;
    SEP #$10                                                             ;8B9C22;
    LDA.B #$00                                                           ;8B9C24;
    STA.W $2116                                                          ;8B9C26;
    LDA.B #$00                                                           ;8B9C29;
    STA.W $2117                                                          ;8B9C2B;
    LDA.B #$00                                                           ;8B9C2E;
    STA.W $2115                                                          ;8B9C30;
    JSL.L SetupHDMATransfer                                              ;8B9C33;
    db $01,$00,$18                                                       ;8B9C37;
    dl TitleMode7Tilemap                                                 ;8B9C3A;
    dw $1000                                                             ;8B9C3D;
    LDA.B #$02                                                           ;8B9C3F;
    STA.W $420B                                                          ;8B9C41;
    LDA.B #$00                                                           ;8B9C44;
    STA.W $2116                                                          ;8B9C46;
    LDA.B #$60                                                           ;8B9C49;
    STA.W $2117                                                          ;8B9C4B;
    LDA.B #$80                                                           ;8B9C4E;
    STA.W $2115                                                          ;8B9C50;
    JSL.L SetupHDMATransfer                                              ;8B9C53;
    db $01,$01,$18                                                       ;8B9C57;
    dl TitleSpriteTiles                                                  ;8B9C5A;
    dw $4000                                                             ;8B9C5D;
    LDA.B #$02                                                           ;8B9C5F;
    STA.W $420B                                                          ;8B9C61;
    REP #$30                                                             ;8B9C64;
    LDA.W #$0100                                                         ;8B9C66;
    STA.W $211B                                                          ;8B9C69;
    STA.B DP_Mode7TransMatrixA                                           ;8B9C6C;
    STZ.W $211C                                                          ;8B9C6E;
    STZ.B DP_Mode7TransMatrixB                                           ;8B9C71;
    STZ.W $211D                                                          ;8B9C73;
    STZ.B DP_Mode7TransMatrixC                                           ;8B9C76;
    STA.W $211E                                                          ;8B9C78;
    STA.B DP_Mode7TransMatrixD                                           ;8B9C7B;
    LDA.W #$0080                                                         ;8B9C7D;
    STA.W $211F                                                          ;8B9C80;
    STA.B DP_Mode7TransOriginX                                           ;8B9C83;
    STA.W $2120                                                          ;8B9C85;
    STA.B DP_Mode7TransOriginY                                           ;8B9C88;
    JSL.L EnableNMI                                                      ;8B9C8A;
    LDA.W #$0001                                                         ;8B9C8E;
    STA.W ScreenFadeDelay                                                ;8B9C91;
    STA.W ScreenFadeCounter                                              ;8B9C94;
    JSL.L Enable_HDMAObjects                                             ;8B9C97;
    JSL.L Enable_PaletteFXObjects                                        ;8B9C9B;
    LDA.W #$0000                                                         ;8B9C9F;
    STA.W LayerBlending_DefaultConfig                                    ;8B9CA2;
    LDY.W #PaletteFXObjects_TitleScreenBabyMetroidTubeLight              ;8B9CA5;
    JSL.L Spawn_PaletteFXObject                                          ;8B9CA8;
    LDY.W #PaletteFXObjects_TitleScreenFlickeringDisplays                ;8B9CAC;
    JSL.L Spawn_PaletteFXObject                                          ;8B9CAF;
    LDY.W #Mode7Object_TitleSequenceBabyMetroid                          ;8B9CB3;
    JSR.W Spawn_Mode7Objects                                             ;8B9CB6;
    PLB                                                                  ;8B9CB9;
    PLP                                                                  ;8B9CBA;
    RTL                                                                  ;8B9CBB;


;;; $9CBC: Initialisation function - cinematic sprite object $A0EF ('1994' scrolling text) ;;;
InitFunc_CinematicSpriteObject_1994ScrollingText:
    LDA.W #$0081                                                         ;8B9CBC;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9CBF;
    LDA.W #$0070                                                         ;8B9CC2;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9CC5;
    LDA.W #$0200                                                         ;8B9CC8;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9CCB;
    RTS                                                                  ;8B9CCE;


;;; $9CCF: Pre-instruction - cinematic sprite object $A0EF ('1994' scrolling text) ;;;
PreInstruction_CinematicSpriteObject_1994ScrollingText:
    SEP #$20                                                             ;8B9CCF;
    LDA.B #$0F                                                           ;8B9CD1;
    STA.B DP_Brightness                                                  ;8B9CD3;
    REP #$20                                                             ;8B9CD5;
    LDA.W #RTS_8B93D9                                                    ;8B9CD7;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8B9CDA;
    RTS                                                                  ;8B9CDD;


if !FEATURE_KEEP_UNREFERENCED
;;; $9CDE: Unused. REP #$20 ;;;
UNUSED_REP20RTS_8B9CDE:
    REP #$20                                                             ;8B9CDE;
    RTS                                                                  ;8B9CE0;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9CE1: Instruction - trigger title sequence scene 0 ;;;
Instruction_TriggerTitleSequenceScene0:
    SEP #$20                                                             ;8B9CE1;
    LDA.B #$11                                                           ;8B9CE3;
    STA.B DP_MainScreenLayers                                            ;8B9CE5;
    REP #$20                                                             ;8B9CE7;
    LDA.W #CinematicFunction_TitleSequenceScene0_PanningLeft_Lower       ;8B9CE9;
    STA.W CinematicFunction                                              ;8B9CEC;
    LDA.W #$0048                                                         ;8B9CEF;
    STA.W Mode7TransformationZoomLevel                                   ;8B9CF2;
    LDA.W #$013B                                                         ;8B9CF5;
    STA.W CinematicBG1_XPosition                                         ;8B9CF8;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9CFB;
    LDA.W #$00E1                                                         ;8B9CFE;
    STA.W CinematicBG1_YPosition                                         ;8B9D01;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9D04;
    LDA.W #$FFFE                                                         ;8B9D07;
    STA.W CinematicBG1_XSpeed                                            ;8B9D0A;
    LDA.W #regional($8000, $4000)                                        ;8B9D0D;
    STA.W CinematicBG1_XSubSpeed                                         ;8B9D10;
    JSR.W Activate_TileSequence_BlueLight                                ;8B9D13;
    RTS                                                                  ;8B9D16;


;;; $9D17: Cinematic function - title sequence - scene 0 - panning left - lower ;;;
CinematicFunction_TitleSequenceScene0_PanningLeft_Lower:
    LDA.W CinematicBG1_XSubPosition                                      ;8B9D17;
    CLC                                                                  ;8B9D1A;
    ADC.W CinematicBG1_XSubSpeed                                         ;8B9D1B;
    STA.W CinematicBG1_XSubPosition                                      ;8B9D1E;
    LDA.W CinematicBG1_XPosition                                         ;8B9D21;
    ADC.W CinematicBG1_XSpeed                                            ;8B9D24;
    STA.W CinematicBG1_XPosition                                         ;8B9D27;
    CMP.W #$FFF9                                                         ;8B9D2A;
    BPL .titleScreenCheck                                                ;8B9D2D;
    SEP #$20                                                             ;8B9D2F;
    LDA.B #$10                                                           ;8B9D31;
    STA.B DP_MainScreenLayers                                            ;8B9D33;
    REP #$20                                                             ;8B9D35;
    LDA.W #RTS_8B9A47                                                    ;8B9D37;
    STA.W CinematicFunction                                              ;8B9D3A;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_NintendoScrollingText ;8B9D3D;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9D40;
    JSR.W Deactivate_TileSequence_BlueLight                              ;8B9D43;

  .titleScreenCheck:
    JSR.W SkipToTitleScreenCheck                                         ;8B9D46;
    RTS                                                                  ;8B9D49;


;;; $9D4A: Initialisation function - cinematic sprite object $A0F5 ('NINTENDO' scrolling text) ;;;
InitFunc_CinematicSpriteObject_NintendoScrollingText:
    LDA.W #$0081                                                         ;8B9D4A;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9D4D;
    LDA.W #$0070                                                         ;8B9D50;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9D53;
    LDA.W #$0200                                                         ;8B9D56;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9D59;
    RTS                                                                  ;8B9D5C;


;;; $9D5D: Instruction - trigger title sequence scene 1 ;;;
Instruction_TriggerTitleSequenceScene1:
    SEP #$20                                                             ;8B9D5D;
    LDA.B #$11                                                           ;8B9D5F;
    STA.B DP_MainScreenLayers                                            ;8B9D61;
    REP #$20                                                             ;8B9D63;
    LDA.W #CinematicFunction_TitleSequenceScene1_PanningLeft_Upper       ;8B9D65;
    STA.W CinematicFunction                                              ;8B9D68;
    LDA.W #$0060                                                         ;8B9D6B;
    STA.W Mode7TransformationZoomLevel                                   ;8B9D6E;
    LDA.W #$002C                                                         ;8B9D71;
    STA.W CinematicBG1_XPosition                                         ;8B9D74;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9D77;
    LDA.W #$FF65                                                         ;8B9D7A;
    STA.W CinematicBG1_YPosition                                         ;8B9D7D;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9D80;
    LDA.W #$FFFE                                                         ;8B9D83;
    STA.W CinematicBG1_XSpeed                                            ;8B9D86;
    LDA.W #regional($8000, $4000)                                        ;8B9D89;
    STA.W CinematicBG1_XSubSpeed                                         ;8B9D8C;
    RTS                                                                  ;8B9D8F;


;;; $9D90: Cinematic function - title sequence - scene 1 - panning left - upper ;;;
CinematicFunction_TitleSequenceScene1_PanningLeft_Upper:
    LDA.W CinematicBG1_XSubPosition                                      ;8B9D90;
    CLC                                                                  ;8B9D93;
    ADC.W CinematicBG1_XSubSpeed                                         ;8B9D94;
    STA.W CinematicBG1_XSubPosition                                      ;8B9D97;
    LDA.W CinematicBG1_XPosition                                         ;8B9D9A;
    ADC.W CinematicBG1_XSpeed                                            ;8B9D9D;
    STA.W CinematicBG1_XPosition                                         ;8B9DA0;
    CMP.W #$FF50                                                         ;8B9DA3;
    BPL .titleScreenCheck                                                ;8B9DA6;
    SEP #$20                                                             ;8B9DA8;
    LDA.B #$10                                                           ;8B9DAA;
    STA.B DP_MainScreenLayers                                            ;8B9DAC;
    REP #$20                                                             ;8B9DAE;
    LDA.W #RTS_8B9A47                                                    ;8B9DB0;
    STA.W CinematicFunction                                              ;8B9DB3;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_PresentsScrollingText ;8B9DB6;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9DB9;
    JSR.W Deactivate_TileSequence_BlueLight                              ;8B9DBC;

  .titleScreenCheck:
    JSR.W SkipToTitleScreenCheck                                         ;8B9DBF;
    RTS                                                                  ;8B9DC2;


;;; $9DC3: Initialisation function - cinematic sprite object $A0FB ('PRESENTS' scrolling text) ;;;
InitFunc_CinematicSpriteObject_PresentsScrollingText:
    LDA.W #$0081                                                         ;8B9DC3;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9DC6;
    LDA.W #$0070                                                         ;8B9DC9;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9DCC;
    LDA.W #$0200                                                         ;8B9DCF;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9DD2;
    RTS                                                                  ;8B9DD5;


;;; $9DD6: Instruction - trigger title sequence scene 2 ;;;
Instruction_TriggerTitleSequenceScene2:
    SEP #$20                                                             ;8B9DD6;
    LDA.B #$11                                                           ;8B9DD8;
    STA.B DP_MainScreenLayers                                            ;8B9DDA;
    REP #$20                                                             ;8B9DDC;
    LDA.W #CinematicFunction_TitleSequenceScene2_PanningDown             ;8B9DDE;
    STA.W CinematicFunction                                              ;8B9DE1;
    LDA.W #$0060                                                         ;8B9DE4;
    STA.W Mode7TransformationZoomLevel                                   ;8B9DE7;
    LDA.W #$FF4F                                                         ;8B9DEA;
    STA.W CinematicBG1_XPosition                                         ;8B9DED;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9DF0;
    LDA.W #$FF60                                                         ;8B9DF3;
    STA.W CinematicBG1_YPosition                                         ;8B9DF6;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9DF9;
    STZ.W CinematicBG1_XSpeed                                            ;8B9DFC;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B9DFF;
    LDA.W #$0001                                                         ;8B9E02;
    STA.W CinematicBG1_YSpeed                                            ;8B9E05;
    LDA.W #regional($8000, $C000)                                        ;8B9E08;
    STA.W CinematicBG1_YSubSpeed                                         ;8B9E0B;
    JSR.W Activate_TileSequence_BlueLight                                ;8B9E0E;
    RTS                                                                  ;8B9E11;


;;; $9E12: Cinematic function - title sequence - scene 2 - panning down ;;;
CinematicFunction_TitleSequenceScene2_PanningDown:
    LDA.W CinematicBG1_YSubPosition                                      ;8B9E12;
    CLC                                                                  ;8B9E15;
    ADC.W CinematicBG1_YSubSpeed                                         ;8B9E16;
    STA.W CinematicBG1_YSubPosition                                      ;8B9E19;
    LDA.W CinematicBG1_YPosition                                         ;8B9E1C;
    ADC.W CinematicBG1_YSpeed                                            ;8B9E1F;
    STA.W CinematicBG1_YPosition                                         ;8B9E22;
    CMP.W #$00A3                                                         ;8B9E25;
    BMI .titleScreenCheck                                                ;8B9E28;
    SEP #$20                                                             ;8B9E2A;
    LDA.B #$10                                                           ;8B9E2C;
    STA.B DP_MainScreenLayers                                            ;8B9E2E;
    REP #$20                                                             ;8B9E30;
    LDA.W #RTS_8B9A47                                                    ;8B9E32;
    STA.W CinematicFunction                                              ;8B9E35;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_Metroid3ScrollingText ;8B9E38;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9E3B;
    JSR.W Deactivate_TileSequence_BlueLight                              ;8B9E3E;

  .titleScreenCheck:
    JSR.W SkipToTitleScreenCheck                                         ;8B9E41;
    RTS                                                                  ;8B9E44;


;;; $9E45: Initialisation function - cinematic sprite object $A101 ('METROID 3' scrolling text) ;;;
InitFunc_CinematicSpriteObject_Metroid3ScrollingText:
    LDA.W #$0081                                                         ;8B9E45;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9E48;
    LDA.W #$0070                                                         ;8B9E4B;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9E4E;
    LDA.W #$0200                                                         ;8B9E51;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9E54;
    RTS                                                                  ;8B9E57;


;;; $9E58: Instruction - trigger title sequence scene 3 ;;;
Instruction_TriggerTitleSequenceScene3:
    SEP #$20                                                             ;8B9E58;
    LDA.B #$11                                                           ;8B9E5A;
    STA.B DP_MainScreenLayers                                            ;8B9E5C;
    REP #$20                                                             ;8B9E5E;
    LDA.W #CinematicFunction_TitleSequenceScene3_ZoomingOut              ;8B9E60;
    STA.W CinematicFunction                                              ;8B9E63;
    LDA.W #$0043                                                         ;8B9E66;
    STA.W Mode7TransformationZoomLevel                                   ;8B9E69;
    STZ.W CinematicBG1_XPosition                                         ;8B9E6C;
    STZ.W CinematicBG1_XSubPosition                                      ;8B9E6F;
    STZ.W CinematicBG1_YPosition                                         ;8B9E72;
    STZ.W CinematicBG1_YSubPosition                                      ;8B9E75;
    STZ.W CinematicBG1_XSpeed                                            ;8B9E78;
    STZ.W CinematicBG1_XSubSpeed                                         ;8B9E7B;
    STZ.W CinematicBG1_YSpeed                                            ;8B9E7E;
    STZ.W CinematicBG1_YSubSpeed                                         ;8B9E81;
    PHY                                                                  ;8B9E84;
    JSL.L Spawn_TitleSequenceGradient_HDMAObjects                        ;8B9E85;
    PLY                                                                  ;8B9E89;
    RTS                                                                  ;8B9E8A;


;;; $9E8B: Cinematic function - title sequence - scene 3 - zooming out ;;;
CinematicFunction_TitleSequenceScene3_ZoomingOut:
    LDA.W NMI_FrameCounter                                               ;8B9E8B;
    BIT.W #$0001                                                         ;8B9E8E;
    BNE .return                                                          ;8B9E91;
    LDA.W Mode7TransformationZoomLevel                                   ;8B9E93;
    CMP.W #$0100                                                         ;8B9E96;
    BPL .finish                                                          ;8B9E99;
    INC                                                                  ;8B9E9B;
    STA.W Mode7TransformationZoomLevel                                   ;8B9E9C;

  .return:
    RTS                                                                  ;8B9E9F;

  .finish:
    LDA.W #$0100                                                         ;8B9EA0;
    STA.W Mode7TransformationZoomLevel                                   ;8B9EA3;
    LDA.W #RTS_8B9F28                                                    ;8B9EA6;
    STA.W CinematicFunction                                              ;8B9EA9;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_SuperMetroidTitleLogo_FadeIn ;8B9EAC;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9EAF;
    RTS                                                                  ;8B9EB2;


;;; $9EB3: Initialisation function - cinematic sprite object $A107 (Super Metroid title logo - fade in) ;;;
InitFunc_CinematicSpriteObject_SuperMetroidTitleLogo_FadeIn:
    LDA.W #$0080                                                         ;8B9EB3;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9EB6;
    LDA.W #$0030                                                         ;8B9EB9;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9EBC;
    LDA.W #$0400                                                         ;8B9EBF;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9EC2;
    LDY.W #PaletteFXObjects_FadeInSuperMetroidTitleLogo                  ;8B9EC5;
    JSL.L Spawn_PaletteFXObject                                          ;8B9EC8;
    RTS                                                                  ;8B9ECC;


;;; $9ECD: Instruction - fade in Nintendo copyright ;;;
Instruction_FadeInNintendoCopyright:
    PHY                                                                  ;8B9ECD;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_NintendoCopyright_FadeIn ;8B9ECE;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9ED1;
    PLY                                                                  ;8B9ED4;
    RTS                                                                  ;8B9ED5;


if !FEATURE_KEEP_UNREFERENCED
;;; $9ED6: Initialisation function - cinematic sprite object $A10D (unused. Nintendo boot logo - fade in) ;;;
InitFunc_CinematicSpriteObject_UnusedNintendoBootLogo_FadeIn:
    LDA.W #$0080                                                         ;8B9ED6;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9ED9;
    LDA.W #$0051                                                         ;8B9EDC;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9EDF;
    LDA.W #$0200                                                         ;8B9EE2;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9EE5;
    LDY.W #PaletteFXObjects_FadeInNintendoBootLogoForUnusedCode          ;8B9EE8;
    JSL.L Spawn_PaletteFXObject                                          ;8B9EEB;
    RTS                                                                  ;8B9EEF;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $9EF0: Instruction - use palette 0 and fade in Nintendo copyright ;;;
Instruction_UsePalette0_FadeInNintendoCopyright:
    LDA.W #$0000                                                         ;8B9EF0;
    STA.W CinematicSpriteObject_PaletteIndices,X                         ;8B9EF3;
    PHY                                                                  ;8B9EF6;
    LDY.W #CinematicSpriteObjectDefinitions_TitleSequence_NintendoCopyright_FadeIn ;8B9EF7;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8B9EFA;
    PLY                                                                  ;8B9EFD;
    RTS                                                                  ;8B9EFE;


;;; $9EFF: Initialisation function - cinematic sprite object $A113 (Nintendo copyright - fade in) ;;;
InitFunc_CinematicSpriteObject_NintendoCopyright_FadeIn:
    LDA.W #$0080                                                         ;8B9EFF;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8B9F02;
    LDA.W #$00C4                                                         ;8B9F05;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8B9F08;
    LDA.W #$0800                                                         ;8B9F0B;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8B9F0E;
    LDY.W #PaletteFXObjects_FadeInNintendoCopyright                      ;8B9F11;
    JSL.L Spawn_PaletteFXObject                                          ;8B9F14;
    RTS                                                                  ;8B9F18;


;;; $9F19: Instruction - start demo countdown ;;;
Instruction_StartDemoCountdown:
    PHY                                                                  ;8B9F19;
    LDA.W #regional($0384, $02D0)                                        ;8B9F1A;
    STA.W DemoTimer                                                      ;8B9F1D;
    LDA.W #CinematicFunction_TitleScreen                                 ;8B9F20;
    STA.W CinematicFunction                                              ;8B9F23;
    PLY                                                                  ;8B9F26;
    RTS                                                                  ;8B9F27;


;;; $9F28: RTS ;;;
RTS_8B9F28:
    RTS                                                                  ;8B9F28;


;;; $9F29: Cinematic function - title sequence - title screen ;;;
CinematicFunction_TitleScreen:
    DEC.W DemoTimer                                                      ;8B9F29;
    BEQ .demo                                                            ;8B9F2C;
    BPL .notDemo                                                         ;8B9F2E;

  .demo:
    LDA.W #CinematicFunction_TransitionToDemos                           ;8B9F30;
    STA.W CinematicFunction                                              ;8B9F33;
    BRA .transition                                                      ;8B9F36;

  .notDemo:
    LDA.B DP_Controller1New                                              ;8B9F38;
    BIT.W #$9080                                                         ;8B9F3A;
    BEQ .merge                                                           ;8B9F3D;
    LDA.W #CinematicFunction_TransitionToFileSelectMenu                  ;8B9F3F;
    STA.W CinematicFunction                                              ;8B9F42;

  .transition:
    LDA.W #$0002                                                         ;8B9F45;
    STA.W ScreenFadeDelay                                                ;8B9F48;
    STA.W ScreenFadeCounter                                              ;8B9F4B;

  .merge:
if !DEBUG
    JSR.W Debug_DisplayVersionInfo                                       ;8B9F4E;
endif
    RTS                                                                  ;8B9F51;


;;; $9F52: Cinematic function - title sequence - transition to file select menu ;;;
CinematicFunction_TransitionToFileSelectMenu:
if !DEBUG
    JSR.W Debug_DisplayVersionInfo                                       ;8B9F52;
endif
    JSR.W AdvanceSlowScreenFadeOut                                       ;8B9F55;
    BCC .return                                                          ;8B9F58;
    JSL.L EnableNMI                                                      ;8B9F5A;
    SEP #$20                                                             ;8B9F5E;
    LDA.B #$01                                                           ;8B9F60;
    STA.B DP_BGModeSize                                                  ;8B9F62;
    REP #$20                                                             ;8B9F64;
    STZ.W ScreenFadeDelay                                                ;8B9F66;
    STZ.W ScreenFadeCounter                                              ;8B9F69;
    STZ.B DP_BG2XScroll                                                  ;8B9F6C;
    STZ.B DP_BG3XScroll                                                  ;8B9F6E;
    STZ.B DP_BG2YScroll                                                  ;8B9F70;
    STZ.B DP_BG3YScroll                                                  ;8B9F72;
    STZ.W Mode7TransformationAngle                                       ;8B9F74;
    LDA.W #CinematicFunction_LoadTitleSequence                           ;8B9F77;
    STA.W CinematicFunction                                              ;8B9F7A;
    JSL.L Disable_PaletteFXObjects                                       ;8B9F7D;
    JSL.L Clear_PaletteFXObjects                                         ;8B9F81;
    LDA.W #MessageBoxIndex                                               ;8B9F85;
    DEC                                                                  ;8B9F88;
    DEC                                                                  ;8B9F89;
    SEC                                                                  ;8B9F8A;
    SBC.W #Mode7TransformationAngle                                      ;8B9F8B;
    TAX                                                                  ;8B9F8E;

  .loopClearNonGameplayRAM:
    STZ.W Mode7TransformationAngle,X                                     ;8B9F8F;
    DEX                                                                  ;8B9F92;
    DEX                                                                  ;8B9F93;
    BPL .loopClearNonGameplayRAM                                         ;8B9F94;
    LDX.W #$01FE                                                         ;8B9F96;
    LDA.W #$0000                                                         ;8B9F99;

  .loopClearGradient:
    STA.L TitleScreenGradientColorMathSubScreenBackdropColorHDMATable,X  ;8B9F9C;
    DEX                                                                  ;8B9FA0;
    DEX                                                                  ;8B9FA1;
    BPL .loopClearGradient                                               ;8B9FA2;
    LDA.W #$0004                                                         ;8B9FA4;
    STA.W GameState                                                      ;8B9FA7;
    STZ.W GameOptionsMenuIndex                                           ;8B9FAA;

  .return:
    RTS                                                                  ;8B9FAD;


;;; $9FAE: Cinematic function - title sequence - transition to demos ;;;
CinematicFunction_TransitionToDemos:
if !DEBUG
    JSR.W Debug_DisplayVersionInfo                                       ;8B9FAE;
endif
    JSR.W AdvanceSlowScreenFadeOut                                       ;8B9FB1;
    BCC .return                                                          ;8B9FB4;
    JSL.L EnableNMI                                                      ;8B9FB6;
    SEP #$20                                                             ;8B9FBA;
    LDA.B #$01                                                           ;8B9FBC;
    STA.B DP_BGModeSize                                                  ;8B9FBE;
    REP #$20                                                             ;8B9FC0;
    STZ.W ScreenFadeDelay                                                ;8B9FC2;
    STZ.W ScreenFadeCounter                                              ;8B9FC5;
    STZ.B DP_BG2XScroll                                                  ;8B9FC8;
    STZ.B DP_BG3XScroll                                                  ;8B9FCA;
    STZ.B DP_BG2YScroll                                                  ;8B9FCC;
    STZ.B DP_BG3YScroll                                                  ;8B9FCE;
    STZ.W Mode7TransformationAngle                                       ;8B9FD0;
    LDA.W #CinematicFunction_LoadTitleSequence                           ;8B9FD3;
    STA.W CinematicFunction                                              ;8B9FD6;
    JSL.L Disable_PaletteFXObjects                                       ;8B9FD9;
    JSL.L Clear_PaletteFXObjects                                         ;8B9FDD;
    LDA.W #MessageBoxIndex                                               ;8B9FE1;
    DEC                                                                  ;8B9FE4;
    DEC                                                                  ;8B9FE5;
    SEC                                                                  ;8B9FE6;
    SBC.W #Mode7TransformationAngle                                      ;8B9FE7;
    TAX                                                                  ;8B9FEA;

  .loopClearNonGameplayRAM:
    STZ.W Mode7TransformationAngle,X                                     ;8B9FEB;
    DEX                                                                  ;8B9FEE;
    DEX                                                                  ;8B9FEF;
    BPL .loopClearNonGameplayRAM                                         ;8B9FF0;
    LDX.W #$01FE                                                         ;8B9FF2;
    LDA.W #$0000                                                         ;8B9FF5;

  .loopClearGradient:
    STA.L TitleScreenGradientColorMathSubScreenBackdropColorHDMATable,X  ;8B9FF8;
    DEX                                                                  ;8B9FFC;
    DEX                                                                  ;8B9FFD;
    BPL .loopClearGradient                                               ;8B9FFE;
    LDA.W #$0028                                                         ;8BA000;
    STA.W GameState                                                      ;8BA003;
    STZ.W DemoScene                                                      ;8BA006;

  .return:
    RTS                                                                  ;8BA009;


;;; $A00A: Configure title screen gradient HDMA table ;;;
Configure_TitleScreen_GradientHDMATable:
    PHP                                                                  ;8BA00A;
    PHB                                                                  ;8BA00B;
    PHK                                                                  ;8BA00C;
    PLB                                                                  ;8BA00D;
    REP #$30                                                             ;8BA00E;
    LDA.W Mode7TransformationZoomLevel                                   ;8BA010;
    AND.W #$00F0                                                         ;8BA013;
    LSR                                                                  ;8BA016;
    LSR                                                                  ;8BA017;
    LSR                                                                  ;8BA018;
    TAX                                                                  ;8BA019;
    LDA.L TitleSequenceHDMATables,X                                      ;8BA01A;
    TAY                                                                  ;8BA01E;
    PHB                                                                  ;8BA01F;
    PEA.W TitleSequenceHDMATables>>8&$FF00                               ;8BA020;
    PLB                                                                  ;8BA023;
    PLB                                                                  ;8BA024;
    LDX.W #$0000                                                         ;8BA025;

  .loop:
    LDA.W $0000,Y                                                        ;8BA028;
    STA.L TitleScreenGradientColorMathSubScreenBackdropColorHDMATable,X  ;8BA02B;
    BEQ .return                                                          ;8BA02F;
    INY                                                                  ;8BA031;
    INY                                                                  ;8BA032;
    INX                                                                  ;8BA033;
    INX                                                                  ;8BA034;
    BRA .loop                                                            ;8BA035;

  .return:
    PLB                                                                  ;8BA037;
    PLB                                                                  ;8BA038;
    PLP                                                                  ;8BA039;
    RTL                                                                  ;8BA03A;


;;; $A03B: RTL ;;;
RTL_8BA03B:
    RTL                                                                  ;8BA03B;


;;; $A03C: RTL ;;;
RTL_8BA03C:
    RTL                                                                  ;8BA03C;


;;; $A03D: Instruction list - cinematic sprite object $A0EF ('1994' scrolling text) ;;;
InstList_CinematicSpriteObject_1994ScrollingText:
    dw regional($003C, $0018),$0000                                      ;8BA03D;
    dw $0008*!FPS,TitleSequenceSpritemaps_1                              ;8BA041;
    dw $0008*!FPS,TitleSequenceSpritemaps_19                             ;8BA045;
    dw $0008*!FPS,TitleSequenceSpritemaps_199                            ;8BA049;
    dw regional($002D, $0024),TitleSequenceSpritemaps_1994               ;8BA04D;
    dw Instruction_TriggerTitleSequenceScene0                            ;8BA051;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BA053;


;;; $A055: Instruction list - cinematic sprite object $A0F5 ('NINTENDO' scrolling text) ;;;
InstList_CinematicSpriteObject_NintendoScrollingText:
    dw $0008*!FPS,TitleSequenceSpritemaps_N                              ;8BA055;
    dw $0008*!FPS,TitleSequenceSpritemaps_NI                             ;8BA059;
    dw $0008*!FPS,TitleSequenceSpritemaps_NIN                            ;8BA05D;
    dw $0008*!FPS,TitleSequenceSpritemaps_NINT                           ;8BA061;
    dw $0008*!FPS,TitleSequenceSpritemaps_NINTE                          ;8BA065;
    dw $0008*!FPS,TitleSequenceSpritemaps_NINTEN                         ;8BA069;
    dw $0008*!FPS,TitleSequenceSpritemaps_NINTEND                        ;8BA06D;
    dw regional($002D, $0024),TitleSequenceSpritemaps_NINTENDO           ;8BA071;
    dw Instruction_TriggerTitleSequenceScene1                            ;8BA075;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BA077;


;;; $A079: Instruction list - cinematic sprite object $A0FB ('PRESENTS' scrolling text) ;;;
InstList_CinematicSpriteObject_PresentsScrollingText:
    dw $0008*!FPS,TitleSequenceSpritemaps_P                              ;8BA079;
    dw $0008*!FPS,TitleSequenceSpritemaps_PR                             ;8BA07D;
    dw $0008*!FPS,TitleSequenceSpritemaps_PRE                            ;8BA081;
    dw $0008*!FPS,TitleSequenceSpritemaps_PRES                           ;8BA085;
    dw $0008*!FPS,TitleSequenceSpritemaps_PRESE                          ;8BA089;
    dw $0008*!FPS,TitleSequenceSpritemaps_PRESEN                         ;8BA08D;
    dw $0008*!FPS,TitleSequenceSpritemaps_PRESENT                        ;8BA091;
    dw regional($002D, $0024),TitleSequenceSpritemaps_PRESENTS           ;8BA095;
    dw Instruction_TriggerTitleSequenceScene2                            ;8BA099;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BA09B;


;;; $A09D: Instruction list - cinematic sprite object $A101 ('METROID 3' scrolling text) ;;;
InstList_CinematicSpriteObject_Metroid3ScrollingText:
    dw $0008*!FPS,TitleSequenceSpritemaps_M                              ;8BA09D;
    dw $0008*!FPS,TitleSequenceSpritemaps_ME                             ;8BA0A1;
    dw $0008*!FPS,TitleSequenceSpritemaps_MET                            ;8BA0A5;
    dw $0008*!FPS,TitleSequenceSpritemaps_METR                           ;8BA0A9;
    dw $0008*!FPS,TitleSequenceSpritemaps_METRO                          ;8BA0AD;
    dw $0008*!FPS,TitleSequenceSpritemaps_METROI                         ;8BA0B1;
    dw $0008*!FPS,TitleSequenceSpritemaps_METROID                        ;8BA0B5;
    dw $0008*!FPS,TitleSequenceSpritemaps_METROID_                       ;8BA0B9;
    dw regional($0078, $0060),TitleSequenceSpritemaps_METROID3           ;8BA0BD;
    dw Instruction_TriggerTitleSequenceScene3                            ;8BA0C1;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BA0C3;


;;; $A0C5: Instruction list - cinematic sprite object $A107 (Super Metroid title logo - fade in) ;;;
InstList_CinematicSpriteObject_SuperMetroidTitleLogo_FadeIn:
    dw $0020,TitleSequenceSpritemaps_SuperMetroidTitleLogo               ;8BA0C5;
    dw Instruction_FadeInNintendoCopyright                               ;8BA0C9;


;;; $A0CB: Instruction list - cinematic sprite object $A119 (Super Metroid title logo - immediate) ;;;
InstList_CinematicSpriteObject_SuperMetroidTitleLogo_Immediate:
    dw $0001,TitleSequenceSpritemaps_SuperMetroidTitleLogo               ;8BA0CB;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BA0CF;
    dw InstList_CinematicSpriteObject_SuperMetroidTitleLogo_Immediate    ;8BA0D1;


if !FEATURE_KEEP_UNREFERENCED
;;; $A0D3: Instruction list - cinematic sprite object $A10D (unused. Nintendo boot logo - fade in) ;;;
InstList_CinematicSpriteObject_UnusedNintendoBootLogo_FadeIn:
    dw $0020,TitleSequenceSpritemaps_NintendoBootLogo                    ;8BA0D3;
    dw Instruction_UsePalette0_FadeInNintendoCopyright                   ;8BA0D7;


;;; $A0D9: Instruction list - cinematic sprite object $A11F (unused. Nintendo boot logo - immediate) ;;;
InstList_CinematicSpriteObject_UnusedNintendoBootLogo_Immediate:
    dw $0001,TitleSequenceSpritemaps_NintendoBootLogo                    ;8BA0D9;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BA0DD;
    dw InstList_CinematicSpriteObject_UnusedNintendoBootLogo_Immediate   ;8BA0DF;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $A0E1: Instruction list - cinematic sprite object $A113 (Nintendo copyright - fade in) ;;;
InstList_CinematicSpriteObject_NintendoCopyright_FadeIn:
    dw $0020,TitleSequenceSpritemaps_NintendoCopyright                   ;8BA0E1;
    dw Instruction_StartDemoCountdown                                    ;8BA0E5;


;;; $A0E7: Instruction list - cinematic sprite object $A125 (Nintendo copyright - immediate) ;;;
InstList_CinematicSpriteObject_NintendoCopyright_Immediate:
    dw $0001,TitleSequenceSpritemaps_NintendoCopyright                   ;8BA0E7;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BA0EB;
    dw InstList_CinematicSpriteObject_NintendoCopyright_Immediate        ;8BA0ED;


;;; $A0EF: Cinematic sprite object definitions - title sequence ;;;
CinematicSpriteObjectDefinitions_TitleSequence:
  .1994ScrollingText:
    dw InitFunc_CinematicSpriteObject_1994ScrollingText                  ;8BA0EF; Initialisation function
    dw PreInstruction_CinematicSpriteObject_1994ScrollingText            ;8BA0F1; Pre-instruction
    dw InstList_CinematicSpriteObject_1994ScrollingText                  ;8BA0F3; Instruction list
  .NintendoScrollingText:
    dw InitFunc_CinematicSpriteObject_NintendoScrollingText              ;8BA0F5; Initialisation function
    dw RTS_8B93D9                                                        ;8BA0F7; Pre-instruction
    dw InstList_CinematicSpriteObject_NintendoScrollingText              ;8BA0F9; Instruction list
  .PresentsScrollingText:
    dw InitFunc_CinematicSpriteObject_PresentsScrollingText              ;8BA0FB; Initialisation function
    dw RTS_8B93D9                                                        ;8BA0FD; Pre-instruction
    dw InstList_CinematicSpriteObject_PresentsScrollingText              ;8BA0FF; Instruction list
  .Metroid3ScrollingText:
    dw InitFunc_CinematicSpriteObject_Metroid3ScrollingText              ;8BA101; Initialisation function
    dw RTS_8B93D9                                                        ;8BA103; Pre-instruction
    dw InstList_CinematicSpriteObject_Metroid3ScrollingText              ;8BA105; Instruction list
  .SuperMetroidTitleLogo_FadeIn:
    dw InitFunc_CinematicSpriteObject_SuperMetroidTitleLogo_FadeIn       ;8BA107; Initialisation function
    dw RTS_8B93D9                                                        ;8BA109; Pre-instruction
    dw InstList_CinematicSpriteObject_SuperMetroidTitleLogo_FadeIn       ;8BA10B; Instruction list
if !FEATURE_KEEP_UNREFERENCED
  .UnusedNintendoBootLogo_FadeIn:
    dw InitFunc_CinematicSpriteObject_UnusedNintendoBootLogo_FadeIn      ;8BA10D; Initialisation function
    dw RTS_8B93D9                                                        ;8BA10F; Pre-instruction
    dw InstList_CinematicSpriteObject_UnusedNintendoBootLogo_FadeIn      ;8BA111; Instruction list
endif ; !FEATURE_KEEP_UNREFERENCED
  .NintendoCopyright_FadeIn:
    dw InitFunc_CinematicSpriteObject_NintendoCopyright_FadeIn           ;8BA113; Initialisation function
    dw RTS_8B93D9                                                        ;8BA115; Pre-instruction
    dw InstList_CinematicSpriteObject_NintendoCopyright_FadeIn           ;8BA117; Instruction list
  .SuperMetroidLogoImmediate:
    dw InitFunction_CinematicSpriteObject_SuperMetroidLogoImmediate      ;8BA119; Initialisation function
    dw RTS_8B93D9                                                        ;8BA11B; Pre-instruction
    dw InstList_CinematicSpriteObject_SuperMetroidTitleLogo_Immediate    ;8BA11D; Instruction list
if !FEATURE_KEEP_UNREFERENCED
  .UnusedNintendoBootLogoImm:
    dw InitFunction_CinematicSpriteObject_UnusedNintendoBootLogoImm      ;8BA11F; Initialisation function
    dw RTS_8B93D9                                                        ;8BA121; Pre-instruction
    dw InstList_CinematicSpriteObject_UnusedNintendoBootLogo_Immediate   ;8BA123; Instruction list
endif ; !FEATURE_KEEP_UNREFERENCED
  .NintendoCopyrightImmediate:
    dw InitFunc_CinematicSpriteObject_NintendoCopyrightImmediate         ;8BA125; Initialisation function
    dw RTS_8B93D9                                                        ;8BA127; Pre-instruction
    dw InstList_CinematicSpriteObject_NintendoCopyright_Immediate        ;8BA129; Instruction list


;;; $A12B: Mode 7 object instruction list - title sequence baby metroid ;;;
Mode7Object_InstList_TitleSequenceBabyMetroid_0:
    dw Instruction_LoadBabyMetroid_Colors0                               ;8BA12B;
    dw Mode7Objects_Instruction_TimerInY,$0002                           ;8BA12D;

Mode7Object_InstList_TitleSequenceBabyMetroid_1:
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA131;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA135;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA139;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA13D;
    dw Mode7Objects_Instruction_DecrementTimer_GotoYIfNonZero            ;8BA141;
    dw Mode7Object_InstList_TitleSequenceBabyMetroid_1                   ;8BA143;
    dw Instruction_PlayBabyMetroid_Cry1                                  ;8BA145;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA147;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA149;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA14D;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA14F;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA153;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA155;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA159;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA15B;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA15F;
    dw $0002,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA161;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA165;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA167;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA16B;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA16D;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA171;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA173;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA177;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA179;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA17D;
    dw $0007,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA17F;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA183;
    dw $0008,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA185;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA189;
    dw $0009,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA18B;
    dw Instruction_LoadBabyMetroid_Colors0                               ;8BA18F;
    dw Mode7Objects_Instruction_TimerInY,$0004                           ;8BA191;

Mode7Object_InstList_TitleSequenceBabyMetroid_2:
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA195;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA199;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA19D;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1A1;
    dw Mode7Objects_Instruction_DecrementTimer_GotoYIfNonZero            ;8BA1A5;
    dw Mode7Object_InstList_TitleSequenceBabyMetroid_2                   ;8BA1A7;
    dw Instruction_PlayBabyMetroid_Cry2                                  ;8BA1A9;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA1AB;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA1AD;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1B1;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1B3;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA1B7;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA1B9;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1BD;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1BF;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA1C3;
    dw $0002,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA1C5;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1C9;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1CB;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA1CF;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA1D1;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1D5;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1D7;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA1DB;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA1DD;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1E1;
    dw $0007,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1E3;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA1E7;
    dw $0008,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA1E9;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA1ED;
    dw $0009,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1EF;
    dw Instruction_LoadBabyMetroid_Colors0                               ;8BA1F3;
    dw Mode7Objects_Instruction_TimerInY                                 ;8BA1F5;
    dw $0003                                                             ;8BA1F7;

Mode7Object_InstList_TitleSequenceBabyMetroid_3:
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA1F9;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA1FD;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA201;
    dw $000A,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA205;
    dw Mode7Objects_Instruction_DecrementTimer_GotoYIfNonZero            ;8BA209;
    dw Mode7Object_InstList_TitleSequenceBabyMetroid_3                   ;8BA20B;
    dw Instruction_PlayBabyMetroid_Cry3                                  ;8BA20D;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA20F;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA211;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA215;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA217;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA21B;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA21D;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA221;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA223;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA227;
    dw $0002,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA229;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA22D;
    dw $0003,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA22F;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA233;
    dw $0004,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA235;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA239;
    dw $0005,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA23B;
    dw Instruction_LoadBabyMetroid_Colors1                               ;8BA23F;
    dw $0006,Mode7TransferData_TitleSequenceBabyMetroid_0                ;8BA241;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA245;
    dw $0007,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA247;
    dw Instruction_LoadBabyMetroid_Colors3                               ;8BA24B;
    dw $0008,Mode7TransferData_TitleSequenceBabyMetroid_2                ;8BA24D;
    dw Instruction_LoadBabyMetroid_Colors2                               ;8BA251;
    dw $0009,Mode7TransferData_TitleSequenceBabyMetroid_1                ;8BA253;
    dw Mode7Objects_Instruction_GotoY                                    ;8BA257;
    dw Mode7Object_InstList_TitleSequenceBabyMetroid_0                   ;8BA259;


;;; $A25B: Instruction - play baby metroid cry 1 ;;;
Instruction_PlayBabyMetroid_Cry1:
    LDA.W #$0023                                                         ;8BA25B;
    JSL.L QueueSound_Lib3_Max6                                           ;8BA25E;
    RTS                                                                  ;8BA262;


;;; $A263: Instruction - play baby metroid cry 2 ;;;
Instruction_PlayBabyMetroid_Cry2:
    LDA.W #$0026                                                         ;8BA263;
    JSL.L QueueSound_Lib3_Max6                                           ;8BA266;
    RTS                                                                  ;8BA26A;


;;; $A26B: Instruction - play baby metroid cry 3 ;;;
Instruction_PlayBabyMetroid_Cry3:
    LDA.W #$0027                                                         ;8BA26B;
    JSL.L QueueSound_Lib3_Max6                                           ;8BA26E;
    RTS                                                                  ;8BA272;


;;; $A273: Instruction - load baby metroid colours 0 ;;;
Instruction_LoadBabyMetroid_Colors0:
; BG palette colours 30h..3Fh = [$A2B7..D6]
    PHX                                                                  ;8BA273;
    LDX.W #$001E                                                         ;8BA274;

  .loop:
    LDA.W TitleSequenceBabyMetroid_Colors_0,X                            ;8BA277;
    STA.L Palettes_BG12P3,X                                              ;8BA27A;
    DEX                                                                  ;8BA27E;
    DEX                                                                  ;8BA27F;
    BPL .loop                                                            ;8BA280;
    PLX                                                                  ;8BA282;
    RTS                                                                  ;8BA283;


;;; $A284: Instruction - load baby metroid colours 1 ;;;
Instruction_LoadBabyMetroid_Colors1:
; BG palette colours 30h..3Fh = [$A2D7..F6]
    PHX                                                                  ;8BA284;
    LDX.W #$001E                                                         ;8BA285;

  .loop:
    LDA.W TitleSequenceBabyMetroid_Colors_1,X                            ;8BA288;
    STA.L Palettes_BG12P3,X                                              ;8BA28B;
    DEX                                                                  ;8BA28F;
    DEX                                                                  ;8BA290;
    BPL .loop                                                            ;8BA291;
    PLX                                                                  ;8BA293;
    RTS                                                                  ;8BA294;


;;; $A295: Instruction - load baby metroid colours 2 ;;;
Instruction_LoadBabyMetroid_Colors2:
; BG palette colours 30h..3Fh = [$A2F7..A316]
    PHX                                                                  ;8BA295;
    LDX.W #$001E                                                         ;8BA296;

  .loop:
    LDA.W TitleSequenceBabyMetroid_Colors_2,X                            ;8BA299;
    STA.L Palettes_BG12P3,X                                              ;8BA29C;
    DEX                                                                  ;8BA2A0;
    DEX                                                                  ;8BA2A1;
    BPL .loop                                                            ;8BA2A2;
    PLX                                                                  ;8BA2A4;
    RTS                                                                  ;8BA2A5;


;;; $A2A6: Instruction - load baby metroid colours 3 ;;;
Instruction_LoadBabyMetroid_Colors3:
; BG palette colours 30h..3Fh = [$A317..36]
    PHX                                                                  ;8BA2A6;
    LDX.W #$001E                                                         ;8BA2A7;

  .loop:
    LDA.W TitleSequenceBabyMetroid_Colors_3,X                            ;8BA2AA;
    STA.L Palettes_BG12P3,X                                              ;8BA2AD;
    DEX                                                                  ;8BA2B1;
    DEX                                                                  ;8BA2B2;
    BPL .loop                                                            ;8BA2B3;
    PLX                                                                  ;8BA2B5;
    RTS                                                                  ;8BA2B6;


;;; $A2B7: Title sequence baby metroid colours ;;;
; Game over baby metroid palettes are in bank $82
TitleSequenceBabyMetroid_Colors_0:
    db $00,$10,$F5,$6B,$41,$2E,$A1,$2D,$01,$2D,$5F,$5E,$3F,$18,$14,$10   ;8BA2B7;
    db $0A,$08,$04,$04,$9F,$4F,$D8,$3E,$12,$2E,$70,$6F,$FF,$7F,$E0,$5E   ;8BA2C7;

TitleSequenceBabyMetroid_Colors_1:
    db $00,$38,$F5,$6B,$E1,$06,$41,$06,$A1,$05,$5F,$5E,$3F,$18,$14,$10   ;8BA2D7;
    db $0A,$08,$04,$04,$9F,$4F,$D8,$3E,$12,$2E,$70,$6F,$FF,$7F,$E0,$5E   ;8BA2E7;

TitleSequenceBabyMetroid_Colors_2:
    db $00,$38,$F8,$77,$44,$13,$A4,$12,$04,$12,$BF,$6A,$9F,$24,$77,$1C   ;8BA2F7;
    db $6D,$14,$67,$10,$FF,$5B,$38,$4B,$72,$3A,$D3,$7B,$FF,$7F,$43,$6B   ;8BA307;

TitleSequenceBabyMetroid_Colors_3:
    db $00,$38,$FB,$7F,$A7,$1F,$07,$1F,$67,$1E,$1F,$77,$FF,$30,$DA,$28   ;8BA317;
    db $D0,$20,$CA,$1C,$FF,$67,$9B,$57,$D5,$46,$D6,$7B,$FF,$7F,$A6,$77   ;8BA327;


;;; $A337: Mode 7 transfer data - title sequence baby metroid ;;;
Mode7TransferData_TitleSequenceBabyMetroid_0:
    db $C0                                                               ;8BA337; Control. C0h = write to VRAM tiles
    dl TitleBabyMetroidTiles                                             ;8BA338; Source address
    dw $0100,$3800                                                       ;8BA33B; Size, Destination address (VRAM)
    db $80,$00                                                           ;8BA33F; VRAM address increment mode

Mode7TransferData_TitleSequenceBabyMetroid_1:
    db $C0                                                               ;8BA341; Control. C0h = write to VRAM tiles
    dl TitleBabyMetroidTiles+$100                                        ;8BA342; Source address
    dw $0100,$3800                                                       ;8BA345; Size, Destination address (VRAM)
    db $80,$00                                                           ;8BA349; VRAM address increment mode

Mode7TransferData_TitleSequenceBabyMetroid_2:
    db $C0                                                               ;8BA34B; Control. C0h = write to VRAM tiles
    dl TitleBabyMetroidTiles+$200                                        ;8BA34C; Source address
    dw $0100,$3800                                                       ;8BA34F; Size, Destination address (VRAM)
    db $80,$00                                                           ;8BA353; VRAM address increment mode


;;; $A355: Mode 7 object - title sequence baby metroid ;;;
Mode7Object_TitleSequenceBabyMetroid:
    dw RTS_8B93D9                                                        ;8BA355;
    dw RTS_8B93D9                                                        ;8BA357;
    dw Mode7Object_InstList_TitleSequenceBabyMetroid_0                   ;8BA359;


;;; $A35B: Game state 1Eh/22h/25h (intro / Ceres goes boom, Samus goes to Zebes / Ceres goes boom with Samus) ;;;
GameState_1E_22_25_Intro_CeresGoesBoom_SamusGoesToZebes_8B:
    PHP                                                                  ;8BA35B;
    PHB                                                                  ;8BA35C;
    PHK                                                                  ;8BA35D;
    PLB                                                                  ;8BA35E;
    REP #$30                                                             ;8BA35F;
    PEA.W .manualReturn-1                                                ;8BA361;
    JMP.W (CinematicFunction)                                            ;8BA364;

  .manualReturn:
    LDA.W CinematicSpriteObject_FrameCounter                             ;8BA367;
    BMI +                                                                ;8BA36A;
    INC                                                                  ;8BA36C;
    STA.W CinematicSpriteObject_FrameCounter                             ;8BA36D;

+   INC.W CinematicFrameCounter                                          ;8BA370;
    JSR.W HandleSamusDuringIntro                                         ;8BA373;
    JSR.W Handle_CinematicSpriteObjects                                  ;8BA376;
    JSR.W Handle_Mode7Objects                                            ;8BA379;
    JSR.W Handle_CinematicBGObjects                                      ;8BA37C;
    JSR.W Handle_TextGlowObject                                          ;8BA37F;
    JSL.L PaletteFXObject_Handler                                        ;8BA382;
    JSR.W DrawIntroSprites                                               ;8BA386;
    JSR.W HandleMode7TransformMatrixAndBG1Position                       ;8BA389;
    PLB                                                                  ;8BA38C;
    PLP                                                                  ;8BA38D;
    RTL                                                                  ;8BA38E;


;;; $A38F: RTS ;;;
RTS_8BA38F:
    RTS                                                                  ;8BA38F;


;;; $A390: RTS. Cinematic function - page 6 drawn ;;;
RTS_8BA390:
    RTS                                                                  ;8BA390;


;;; $A391: Cinematic function - nothing ;;;
CinematicFunction_Nothing:
; RTS_BackgroundFLickeringEffect has an RTS'd out background flickering effect
    JSR.W RTS_BackgroundFLickeringEffect                                 ;8BA391;
    RTS                                                                  ;8BA394;


;;; $A395: Cinematic function - intro - initial ;;;
CinematicFunction_Intro_Initial:
    JSR.W Setup_PPU_Intro                                                ;8BA395;
    STZ.B DP_IRQCmd                                                      ;8BA398;
    STZ.B DP_NextIRQCmd                                                  ;8BA39A;
    STZ.W AreaIndex                                                      ;8BA39C;
    LDA.W #$0010                                                         ;8BA39F;
    STA.W RoomWidthBlocks                                                ;8BA3A2;
    STA.W RoomHeightBlocks                                               ;8BA3A5;
    JSL.L InitializeSamus                                                ;8BA3A8;
    JSL.L Update_Beam_Tiles_and_Palette                                  ;8BA3AC;
    LDA.W #$0384                                                         ;8BA3B0;
    STA.W MaxMissiles                                                    ;8BA3B3;
    STA.W Missiles                                                       ;8BA3B6;
    STZ.W IntroSamusDisplayFlag                                          ;8BA3B9;
    LDA.W #SamusDrawingHandler_Default                                   ;8BA3BC;
    STA.W DrawingHandler                                                 ;8BA3BF;
    JSR.W Reset_Button_Assignments_to_Default                            ;8BA3C2;
    STZ.W SamusInvincibilityTimer                                        ;8BA3C5;
    STZ.W SamusKnockbackTimer                                            ;8BA3C8;
    LDA.W #MessageBoxIndex                                               ;8BA3CB;
    DEC                                                                  ;8BA3CE;
    DEC                                                                  ;8BA3CF;
    SEC                                                                  ;8BA3D0;
    SBC.W #Mode7TransformationAngle                                      ;8BA3D1;
    TAX                                                                  ;8BA3D4;

  .loopClearNonGameplayRAM:
    STZ.W Mode7TransformationAngle,X                                     ;8BA3D5;
    DEX                                                                  ;8BA3D8;
    DEX                                                                  ;8BA3D9;
    BPL .loopClearNonGameplayRAM                                         ;8BA3DA;
    LDX.W #$0000                                                         ;8BA3DC;

  .loopPalettes:
    LDA.L Palettes_Intro,X                                               ;8BA3DF;
    STA.L Palettes,X                                                     ;8BA3E3;
    INX                                                                  ;8BA3E7;
    INX                                                                  ;8BA3E8;
    CPX.W #$0200                                                         ;8BA3E9;
    BMI .loopPalettes                                                    ;8BA3EC;
    LDA.W #Tiles_Intro_BG1_BG2>>8&$FF00                                  ;8BA3EE;
    STA.B DP_DecompSrc+1                                                 ;8BA3F1;
    LDA.W #Tiles_Intro_BG1_BG2                                           ;8BA3F3;
    STA.B DP_DecompSrc                                                   ;8BA3F6;
    JSL.L Decompression_HardcodedDestination                             ;8BA3F8;
    dl IntroBackgroundTiles                                              ;8BA3FC;
    LDA.W #Tiles_Font1_BG3>>8&$FF00                                      ;8BA3FF;
    STA.B DP_DecompSrc+1                                                 ;8BA402;
    LDA.W #Tiles_Font1_BG3                                               ;8BA404;
    STA.B DP_DecompSrc                                                   ;8BA407;
    JSL.L Decompression_HardcodedDestination                             ;8BA409;
    dl IntroFont1Tiles                                                   ;8BA40D;
    LDA.W #Intro_BG2_SamusHead_Tilemap>>8&$FF00                          ;8BA410;
    STA.B DP_DecompSrc+1                                                 ;8BA413;
    LDA.W #Intro_BG2_SamusHead_Tilemap                                   ;8BA415;
    STA.B DP_DecompSrc                                                   ;8BA418;
    JSL.L Decompression_HardcodedDestination                             ;8BA41A;
    dl IntroBG2SamusHeadTilemap                                          ;8BA41E;
    LDA.W #Intro_BG1_MotherBrainsRoom_Tilemap>>8&$FF00                   ;8BA421;
    STA.B DP_DecompSrc+1                                                 ;8BA424;
    LDA.W #Intro_BG1_MotherBrainsRoom_Tilemap                            ;8BA426;
    STA.B DP_DecompSrc                                                   ;8BA429;
    JSL.L Decompression_HardcodedDestination                             ;8BA42B;
    dl IntroBG1MotherBrainsRoomTilemap                                   ;8BA42F;
    LDA.W #Tiles_Intro_Sprite>>8&$FF00                                   ;8BA432;
    STA.B DP_DecompSrc+1                                                 ;8BA435;
    LDA.W #Tiles_Intro_Sprite                                            ;8BA437;
    STA.B DP_DecompSrc                                                   ;8BA43A;
    JSL.L Decompression_HardcodedDestination                             ;8BA43C;
    dl IntroSpriteTiles                                                  ;8BA440;
    LDA.W #Intro_BG3_TheLastMetroidIsInCaptivity_Tilemap>>8&$FF00        ;8BA443;
    STA.B DP_DecompSrc+1                                                 ;8BA446;
    LDA.W #Intro_BG3_TheLastMetroidIsInCaptivity_Tilemap                 ;8BA448;
    STA.B DP_DecompSrc                                                   ;8BA44B;
    JSL.L Decompression_HardcodedDestination                             ;8BA44D;
    dl IntroBG3TheLastMetroidTilemap                                     ;8BA451;
    SEP #$30                                                             ;8BA454;
    LDA.B #$00                                                           ;8BA456;
    STA.W $2116                                                          ;8BA458;
    LDA.B #$00                                                           ;8BA45B;
    STA.W $2117                                                          ;8BA45D;
    LDA.B #$80                                                           ;8BA460;
    STA.W $2115                                                          ;8BA462;
    JSL.L SetupHDMATransfer                                              ;8BA465;
    db $01,$01,$18                                                       ;8BA469;
    dl IntroBackgroundTiles                                              ;8BA46C;
    dw $8000                                                             ;8BA46F;
    LDA.B #$02                                                           ;8BA471;
    STA.W $420B                                                          ;8BA473;
    LDA.B #$00                                                           ;8BA476;
    STA.W $2116                                                          ;8BA478;
    LDA.B #$40                                                           ;8BA47B;
    STA.W $2117                                                          ;8BA47D;
    LDA.B #$80                                                           ;8BA480;
    STA.W $2115                                                          ;8BA482;
    JSL.L SetupHDMATransfer                                              ;8BA485;
    db $01,$01,$18                                                       ;8BA489;
    dl IntroFont1Tiles                                                   ;8BA48C;
    dw IntroFont1Tiles_end-IntroFont1Tiles                               ;8BA48F;
    LDA.B #$02                                                           ;8BA491;
    STA.W $420B                                                          ;8BA493;
    LDA.B #$00                                                           ;8BA496;
    STA.W $2116                                                          ;8BA498;
    LDA.B #$48                                                           ;8BA49B;
    STA.W $2117                                                          ;8BA49D;
    LDA.B #$80                                                           ;8BA4A0;
    STA.W $2115                                                          ;8BA4A2;
    JSL.L SetupHDMATransfer                                              ;8BA4A5;
    db $01,$01,$18                                                       ;8BA4A9;
    dl IntroBG2SamusHeadTilemap                                          ;8BA4AC;
    dw $0800                                                             ;8BA4AF;
    LDA.B #$02                                                           ;8BA4B1;
    STA.W $420B                                                          ;8BA4B3;
    LDA.B #$00                                                           ;8BA4B6;
    STA.W $2116                                                          ;8BA4B8;
    LDA.B #$4C                                                           ;8BA4BB;
    STA.W $2117                                                          ;8BA4BD;
    LDA.B #$80                                                           ;8BA4C0;
    STA.W $2115                                                          ;8BA4C2;
    JSL.L SetupHDMATransfer                                              ;8BA4C5;
    db $01,$01,$18                                                       ;8BA4C9;
    dl IntroBG3TheLastMetroidTilemap                                     ;8BA4CC;
    dw $0800                                                             ;8BA4CF;
    LDA.B #$02                                                           ;8BA4D1;
    STA.W $420B                                                          ;8BA4D3;
    LDA.B #$00                                                           ;8BA4D6;
    STA.W $2116                                                          ;8BA4D8;
    LDA.B #$50                                                           ;8BA4DB;
    STA.W $2117                                                          ;8BA4DD;
    LDA.B #$80                                                           ;8BA4E0;
    STA.W $2115                                                          ;8BA4E2;
    JSL.L SetupHDMATransfer                                              ;8BA4E5;
    db $01,$01,$18                                                       ;8BA4E9;
    dl IntroBG1MotherBrainsRoomTilemap                                   ;8BA4EC;
    dw $2000                                                             ;8BA4EF;
    LDA.B #$02                                                           ;8BA4F1;
    STA.W $420B                                                          ;8BA4F3;
    LDA.B #$00                                                           ;8BA4F6;
    STA.W $2116                                                          ;8BA4F8;
    LDA.B #$60                                                           ;8BA4FB;
    STA.W $2117                                                          ;8BA4FD;
    LDA.B #$80                                                           ;8BA500;
    STA.W $2115                                                          ;8BA502;
    JSL.L SetupHDMATransfer                                              ;8BA505;
    db $01,$01,$18                                                       ;8BA509;
    dl Tiles_Standard_Sprite_0                                           ;8BA50C;
    dw $2000                                                             ;8BA50F;
    LDA.B #$02                                                           ;8BA511;
    STA.W $420B                                                          ;8BA513;
    LDA.B #$00                                                           ;8BA516;
    STA.W $2116                                                          ;8BA518;
    LDA.B #$6E                                                           ;8BA51B;
    STA.W $2117                                                          ;8BA51D;
    LDA.B #$80                                                           ;8BA520;
    STA.W $2115                                                          ;8BA522;
    JSL.L SetupHDMATransfer                                              ;8BA525;
    db $01,$01,$18                                                       ;8BA529;
    dl IntroSpriteTiles                                                  ;8BA52C;
    dw $2400                                                             ;8BA52F;
    LDA.B #$02                                                           ;8BA531;
    STA.W $420B                                                          ;8BA533;
    REP #$30                                                             ;8BA536;
if !PAL == 0
    LDA.W #Tiles_Font2_BG3>>8&$FF00                                      ;8BA538;
    STA.B DP_DecompSrc+1                                                 ;8BA53B;
    LDA.W #Tiles_Font2_BG3                                               ;8BA53D;
    STA.B DP_DecompSrc                                                   ;8BA540;
    JSL.L Decompression_HardcodedDestination                             ;8BA542;
    dl IntroFont2Tiles                                                   ;8BA546;
else
    LDA.W #Intro_BG3_Text_Tilemap>>8&$FF00
    STA.B DP_DecompSrc+1
    LDA.W #Intro_BG3_Text_Tilemap
    STA.B DP_DecompSrc
    JSL.L Decompression_HardcodedDestination
    dl IntroSubtitleTilemaps
endif
    JSL.L EnableNMI                                                      ;8BA549;
    LDA.W #$0003                                                         ;8BA54D;
    STA.W ScreenFadeDelay                                                ;8BA550;
    STA.W ScreenFadeCounter                                              ;8BA553;
    JSL.L Enable_HDMAObjects                                             ;8BA556;
    JSL.L Clear_PaletteFXObjects                                         ;8BA55A;
    JSL.L Enable_PaletteFXObjects                                        ;8BA55E;
    STZ.W DoorPointer                                                    ;8BA562;
    STZ.W Layer1XPosition                                                ;8BA565;
    STZ.W Layer1YPosition                                                ;8BA568;
    STZ.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BA56B;
    LDX.W #$07FE                                                         ;8BA56E;

  .loopSamusHead:
    LDA.L IntroBG2SamusHeadTilemap,X                                     ;8BA571;
    STA.L IntroBG2Tilemap,X                                              ;8BA575;
    DEX                                                                  ;8BA579;
    DEX                                                                  ;8BA57A;
    BPL .loopSamusHead                                                   ;8BA57B;
if !PAL != 0
    LDA.W AltText  
    BNE .altText
    LDX.W #$00FE

  .loopGermanText
    LDA.L InitialIntroSubtitleTilemap_DefaultLanguage_Subpage1,X
    STA.L CinematicBGTilemap_InitialSubtitles,X
    DEX
    DEX
    BPL .loopGermanText
    BRA .textDone
endif

  .altText
    LDX.W #$00FE                                                         ;8BA57D;

  .loopAltText:
    LDA.L InitialIntroSubtitleTilemap_AltLanguage,X                      ;8BA580;
    STA.L CinematicBGTilemap_InitialSubtitles,X                          ;8BA584;
    DEX                                                                  ;8BA588;
    DEX                                                                  ;8BA589;
    BPL .loopAltText                                                     ;8BA58A;

  .textDone
    LDA.W #$FFFF                                                         ;8BA58C;
    STA.W CinematicSpriteObject_FrameCounter                             ;8BA58F;
    LDA.W #CinematicFunction_Intro_WaitForMusicQueue_FadeIn              ;8BA592;
    STA.W CinematicFunction                                              ;8BA595;
    LDA.W #$0000                                                         ;8BA598;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA59B;
    LDA.W #$FF3F                                                         ;8BA59F;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA5A2;
    RTS                                                                  ;8BA5A6;


;;; $A5A7: Cinematic function - intro - wait for music queue and fade in ;;;
CinematicFunction_Intro_WaitForMusicQueue_FadeIn:
    JSL.L CheckIfMusicIsQueued                                           ;8BA5A7;
    BCS .return                                                          ;8BA5AB;
    LDA.W #CinematicFunction_Intro_HandleDrawingInitialSubtitle_Wait60f  ;8BA5AD;
    STA.W CinematicFunction                                              ;8BA5B0;
    LDA.W #$0002                                                         ;8BA5B3;
    STA.W ScreenFadeDelay                                                ;8BA5B6;
    STA.W ScreenFadeCounter                                              ;8BA5B9;

  .return:
    RTS                                                                  ;8BA5BC;


;;; $A5BD: Cinematic function - intro - handle drawing initial Japanese text and wait 60 frames ;;;
CinematicFunction_Intro_HandleDrawingInitialSubtitle_Wait60f:
    JSR.W AdvanceSlowScreenFadeIn                                        ;8BA5BD;
    BCC .return                                                          ;8BA5C0;
    LDA.W #CinematicFunction_Intro_PlayTheLastMetroidMusicFor200Frames   ;8BA5C2;
    STA.W CinematicFunction                                              ;8BA5C5;
    LDA.W #$003C                                                         ;8BA5C8;
    STA.W CinematicFunctionTimer                                         ;8BA5CB;
if !PAL == 0
    LDA.W AltText                                                        ;8BA5CE;
    BEQ .return                                                          ;8BA5D1;
endif
    LDX.W VRAMWriteStack                                                 ;8BA5D3;
    LDA.W #$0100                                                         ;8BA5D6;
    STA.B VRAMWrite.size,X                                               ;8BA5D9;
    INX                                                                  ;8BA5DB;
    INX                                                                  ;8BA5DC;
    LDA.W #CinematicBGTilemap_InitialSubtitles                           ;8BA5DD;
    STA.B VRAMWrite.size,X                                               ;8BA5E0;
    INX                                                                  ;8BA5E2;
    INX                                                                  ;8BA5E3;
    SEP #$20                                                             ;8BA5E4;
    LDA.B #CinematicBGTilemap_InitialSubtitles>>16                       ;8BA5E6;
    STA.B VRAMWrite.size,X                                               ;8BA5E8;
    REP #$20                                                             ;8BA5EA;
    INX                                                                  ;8BA5EC;
    LDA.W #$4EE0                                                         ;8BA5ED;
    STA.B VRAMWrite.size,X                                               ;8BA5F0;
    INX                                                                  ;8BA5F2;
    INX                                                                  ;8BA5F3;
    STX.W VRAMWriteStack                                                 ;8BA5F4;

  .return:
    RTS                                                                  ;8BA5F7;


;;; $A5F8: Cinematic function - intro - play "the last Metroid is in captivity" music for 200 frames ;;;
CinematicFunction_Intro_PlayTheLastMetroidMusicFor200Frames:
    DEC.W CinematicFunctionTimer                                         ;8BA5F8;
    BEQ .timerExpired                                                    ;8BA5FB;
    BPL .return                                                          ;8BA5FD;

  .timerExpired:
    LDA.W #CinematicFunction_Intro_PlayGalaxyIsAtPeaceMusic              ;8BA5FF;
    STA.W CinematicFunction                                              ;8BA602;
    LDA.W #$00C8                                                         ;8BA605;
    STA.W CinematicFunctionTimer                                         ;8BA608;
    LDA.W #$0005                                                         ;8BA60B;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA60E;

  .return:
    RTS                                                                  ;8BA612;


;;; $A613: Cinematic function - intro - queue "the galaxy is at peace" music ;;;
CinematicFunction_Intro_PlayGalaxyIsAtPeaceMusic:
    DEC.W CinematicFunctionTimer                                         ;8BA613;
    BEQ .timerExpired                                                    ;8BA616;
    BPL .return                                                          ;8BA618;

  .timerExpired:
    LDA.W #$0000                                                         ;8BA61A;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA61D;
    LDA.W #$FF42                                                         ;8BA621;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA624;
    LDA.W #$0005                                                         ;8BA628;
    LDY.W #$000E                                                         ;8BA62B;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BA62E;
    LDA.W #CinematicFunction_Intro_WaitForMusicQueue_WaitFor240Frames    ;8BA632;
    STA.W CinematicFunction                                              ;8BA635;
if !PAL != 0
    LDA.W AltText  
    BNE .return
    LDX.W #$00FE

  .loop
    LDA.L InitialIntroSubtitleTilemap_DefaultLanguage_Subpage2,X
    STA.L CinematicBGTilemap_InitialSubtitles,X
    DEX
    DEX
    BPL .loop
endif

  .return:
    RTS                                                                  ;8BA638;


;;; $A639: Cinematic function - intro - wait for music queue and wait 240 frames ;;;
CinematicFunction_Intro_WaitForMusicQueue_WaitFor240Frames:
    JSL.L CheckIfMusicIsQueued                                           ;8BA639;
    BCS .return                                                          ;8BA63D;
    LDA.W #CinematicFunction_Intro_FadeOut                               ;8BA63F;
    STA.W CinematicFunction                                              ;8BA642;
    LDA.W #$00F0                                                         ;8BA645;
    STA.W CinematicFunctionTimer                                         ;8BA648;
if !PAL != 0
    LDA.W AltText  
    BNE .return
    LDX.W VRAMWriteStack
    LDA.W #$0100
    STA.B $D0,X
    INX
    INX
    LDA.W #CinematicBGTilemap_InitialSubtitles
    STA.B $D0,X
    INX
    INX
    SEP #$20
    LDA.B #CinematicBGTilemap_InitialSubtitles>>$10
    STA.B $D0,X
    REP #$20
    INX
    LDA.W #$4EE0
    STA $D0,X
    INX
    INX
    STX.W VRAMWriteStack
endif

  .return:
    RTS                                                                  ;8BA64B;


;;; $A64C: Cinematic function - intro - fade out ;;;
CinematicFunction_Intro_FadeOut:
    DEC.W CinematicFunctionTimer                                         ;8BA64C;
    BEQ .timerExpired                                                    ;8BA64F;
    BPL .return                                                          ;8BA651;

  .timerExpired:
    LDA.W #CinematicFunction_Intro_WaitForFadeOut                        ;8BA653;
    STA.W CinematicFunction                                              ;8BA656;
    LDA.W #$0002                                                         ;8BA659;
    STA.W ScreenFadeDelay                                                ;8BA65C;
    STA.W ScreenFadeCounter                                              ;8BA65F;

  .return:
    RTS                                                                  ;8BA662;


;;; $A663: Cinematic function - intro - wait for fade out ;;;
CinematicFunction_Intro_WaitForFadeOut:
    JSR.W AdvanceSlowScreenFadeOut                                       ;8BA663;
    BCC .return                                                          ;8BA666;
    LDA.W #CinematicFunction_Intro_SetupIntroTextPage1                   ;8BA668;
    STA.W CinematicFunction                                              ;8BA66B;

  .return:
    RTS                                                                  ;8BA66E;


;;; $A66F: Cinematic function - intro - set up intro text page 1 ;;;
CinematicFunction_Intro_SetupIntroTextPage1:
    REP #$30                                                             ;8BA66F;
    JSR.W BlankOut_Subtitle_Tiles                                        ;8BA671;
    SEP #$30                                                             ;8BA674;
if !PAL == 0
    LDA.B #$80                                                           ;8BA676;
    STA.W $2116                                                          ;8BA678;
    LDA.B #$41                                                           ;8BA67B;
    STA.W $2117                                                          ;8BA67D;
    LDA.B #$80                                                           ;8BA680;
    STA.W $2115                                                          ;8BA682;
    JSL.L SetupHDMATransfer                                              ;8BA685;
    db $01,$01,$18                                                       ;8BA689;
    dl IntroBG3SubtitleTiles                                             ;8BA68C;
    dw $0600                                                             ;8BA68F;
else
    LDA.B #$00
    STA.W $2116
    LDA.B #$4F
    STA.W $2117
    LDA.B #$80
    STA.W $2115
    JSL.L SetupHDMATransfer
    db $01,$01,$18
    dl CinematicBGTilemap_Subtitles
    dw CinematicBGTilemap_Subtitles_End-CinematicBGTilemap_Subtitles
endif
    LDA.B #$02                                                           ;8BA691;
    STA.W $420B                                                          ;8BA693;
    LDA.B #$16                                                           ;8BA696;
    STA.W $212C                                                          ;8BA698;
    STA.B DP_MainScreenLayers                                            ;8BA69B;
    REP #$30                                                             ;8BA69D;
    LDA.W #$002F                                                         ;8BA69F;
    JSL.L Clear_CinematicBGObjects_CinematicBGTilemap                    ;8BA6A2;
    JSL.L Enable_CinematicBGObjects                                      ;8BA6A6;
    JSL.L Enable_CinematicBGTilemap_Updates                              ;8BA6AA;
    LDA.W #$4C00                                                         ;8BA6AE;
    STA.W CinematicBGObject_VRAMAddr                                     ;8BA6B1;
    LDX.W #$00FE                                                         ;8BA6B4;
    LDA.W #$3C29                                                         ;8BA6B7;

  .loopTopBottomMargins:
    STA.L CinematicBGTilemap_TopMargin,X                                 ;8BA6BA;
    STA.L CinematicBGTilemap_BottomMargin,X                              ;8BA6BE;
    DEX                                                                  ;8BA6C2;
    DEX                                                                  ;8BA6C3;
    BPL .loopTopBottomMargins                                            ;8BA6C4;
if !PAL == 0
    LDX.W #$0600                                                         ;8BA6C6;
    LDY.W #$0000                                                         ;8BA6C9;

  .loopSubtitleTilemap:
    LDA.W .IntroSubtitleTilemap,Y                                        ;8BA6CC;
    STA.L CinematicBGTilemap,X                                           ;8BA6CF;
    INY                                                                  ;8BA6D3;
    INY                                                                  ;8BA6D4;
    INX                                                                  ;8BA6D5;
    INX                                                                  ;8BA6D6;
    CPX.W #$0700                                                         ;8BA6D7;
    BMI .loopSubtitleTilemap                                             ;8BA6DA;
endif
    LDA.W #$1C29                                                         ;8BA6DC;
    STA.L CinematicBGTilemap_BottomMargin+$1E                            ;8BA6DF;
    STA.L CinematicBGTilemap_BottomMargin+$20                            ;8BA6E3;
if !PAL != 0
    JSR.W BlankOut_Subtitle_Tiles
endif
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextCaret               ;8BA6E7;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA6EA;
    LDA.W #$007F                                                         ;8BA6ED;
    STA.W CinematicFunctionTimer                                         ;8BA6F0;
    LDY.W #CinematicSpriteObjectDefinitions_SamusBlinking                ;8BA6F3;
    LDA.W #$4C00                                                         ;8BA6F6;
    JSR.W Spawn_CinematicBGObject                                        ;8BA6F9;
    LDA.W #$0008                                                         ;8BA6FC;
    STA.W CinematicBG1_YPosition                                         ;8BA6FF;
    STA.B DP_BG2YScroll                                                  ;8BA702;
    STA.B DP_BG3YScroll                                                  ;8BA704;
    JSR.W Clear_EnglishText_Tilemap                                      ;8BA706;
    JSR.W RestIntroTextCaret                                             ;8BA709;
    LDA.W #$0000                                                         ;8BA70C;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA70F;
    LDA.W #$FF36                                                         ;8BA713;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BA716;
    LDA.W #$0005                                                         ;8BA71A;
    LDY.W #$000E                                                         ;8BA71D;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BA720;
    LDA.W #CineFunc_Intro_WaitForMusicQueue_FadeIn_SpawnIntroTextPage1   ;8BA724;
    STA.W CinematicFunction                                              ;8BA727;
    RTS                                                                  ;8BA72A;

if !PAL == 0
  .IntroSubtitleTilemap:
    dw $3C29,$3C29,$3C29,$3C29,$3030,$3031,$3032,$3033                   ;8BA72B;
    dw $3034,$3035,$3036,$3037,$3038,$3039,$303A,$303B                   ;8BA73B;
    dw $303C,$303D,$303E,$303F,$3040,$3041,$3042,$3043                   ;8BA74B;
    dw $3044,$3045,$3046,$3047,$3C29,$3C29,$3C29,$3C29                   ;8BA75B;
    dw $3C29,$3C29,$3C29,$3C29,$3060,$3061,$3062,$3063                   ;8BA76B;
    dw $3064,$3065,$3066,$3067,$3068,$3069,$306A,$306B                   ;8BA77B;
    dw $306C,$306D,$306E,$306F,$3070,$3071,$3072,$3073                   ;8BA78B;
    dw $3074,$3075,$3076,$3077,$3C29,$3C29,$3C29,$3C29                   ;8BA79B;
    dw $3C29,$3C29,$3C29,$3C29,$3048,$3049,$304A,$304B                   ;8BA7AB;
    dw $304C,$304D,$304E,$304F,$3050,$3051,$3052,$3053                   ;8BA7BB;
    dw $3054,$3055,$3056,$3057,$3058,$3059,$305A,$305B                   ;8BA7CB;
    dw $305C,$305D,$305E,$305F,$3C29,$3C29,$3C29,$3C29                   ;8BA7DB;
    dw $3C29,$3C29,$3C29,$3C29,$3078,$3079,$307A,$307B                   ;8BA7EB;
    dw $307C,$307D,$307E,$307F,$3080,$3081,$3082,$3083                   ;8BA7FB;
    dw $3084,$3085,$3086,$3087,$3088,$3089,$308A,$308B                   ;8BA80B;
    dw $308C,$308D,$308E,$308F,$3C29,$3C29,$3C29,$3C29                   ;8BA81B;
endif


;;; $A82B: Cinematic function - intro - wait for music queue, fade in and spawn intro text page 1 ;;;
CineFunc_Intro_WaitForMusicQueue_FadeIn_SpawnIntroTextPage1:
    JSL.L CheckIfMusicIsQueued                                           ;8BA82B;
    BCS .return                                                          ;8BA82F;
    LDA.W #CinematicFunction_Intro_WaitForFadeIn                         ;8BA831;
    STA.W CinematicFunction                                              ;8BA834;
    LDA.W #$0002                                                         ;8BA837;
    STA.W ScreenFadeDelay                                                ;8BA83A;
    STA.W ScreenFadeCounter                                              ;8BA83D;
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage1               ;8BA840;
    LDA.W #$4C00                                                         ;8BA843;
    JSR.W Spawn_CinematicBGObject                                        ;8BA846;

  .return:
    RTS                                                                  ;8BA849;


;;; $A84A: Cinematic function - intro - wait for fade in ;;;
CinematicFunction_Intro_WaitForFadeIn:
    JSR.W AdvanceSlowScreenFadeIn                                        ;8BA84A;
    BCC .return                                                          ;8BA84D;
    LDA.W #CinematicFunction_Nothing                                     ;8BA84F;
    STA.W CinematicFunction                                              ;8BA852;

  .return:
    RTS                                                                  ;8BA855;


;;; $A856: Clear English text tilemap ;;;
Clear_EnglishText_Tilemap:
; $7E:3100..35FF = 002Fh
    PHX                                                                  ;8BA856;
    LDX.W #$0100                                                         ;8BA857;
    LDA.W #$002F                                                         ;8BA85A;

  .loop:
    STA.L CinematicBGTilemap_EnglishTextRegion-$100,X                    ;8BA85D;
    INX                                                                  ;8BA861;
    INX                                                                  ;8BA862;
    CPX.W #$0600                                                         ;8BA863;
    BMI .loop                                                            ;8BA866;
    PLX                                                                  ;8BA868;
    RTS                                                                  ;8BA869;


;;; $A86A: Blank out Japanese text tiles ;;;
BlankOut_Subtitle_Tiles:
    PHP                                                                  ;8BA86A;
    REP #$30                                                             ;8BA86B;
    PHX                                                                  ;8BA86D;
if !PAL == 0
    PHY                                                                  ;8BA86E;
    LDX.W #$0000                                                         ;8BA86F;

  .loop:
    LDA.L IntroFont1Tiles+$290                                           ;8BA872;
    STA.L IntroBG3SubtitleTiles,X                                       ;8BA876;
    LDA.L IntroFont1Tiles+$292                                           ;8BA87A;
    STA.L IntroBG3SubtitleTiles+2,X                                     ;8BA87E;
    LDA.L IntroFont1Tiles+$294                                           ;8BA882;
    STA.L IntroBG3SubtitleTiles+4,X                                     ;8BA886;
    LDA.L IntroFont1Tiles+$296                                           ;8BA88A;
    STA.L IntroBG3SubtitleTiles+6,X                                     ;8BA88E;
    LDA.L IntroFont1Tiles+$298                                           ;8BA892;
    STA.L IntroBG3SubtitleTiles+8,X                                     ;8BA896;
    LDA.L IntroFont1Tiles+$29A                                           ;8BA89A;
    STA.L IntroBG3SubtitleTiles+$A,X                                    ;8BA89E;
    LDA.L IntroFont1Tiles+$29C                                           ;8BA8A2;
    STA.L IntroBG3SubtitleTiles+$C,X                                    ;8BA8A6;
    LDA.L IntroFont1Tiles+$29E                                           ;8BA8AA;
    STA.L IntroBG3SubtitleTiles+$E,X                                    ;8BA8AE;
    TXA                                                                  ;8BA8B2;
    CLC                                                                  ;8BA8B3;
    ADC.W #$0010                                                         ;8BA8B4;
    TAX                                                                  ;8BA8B7;
    CPX.W #$0600                                                         ;8BA8B8;
    BMI .loop                                                            ;8BA8BB;
    PLY                                                                  ;8BA8BD;
else
    LDX #CinematicBGTilemap_Subtitles_End-CinematicBGTilemap_Subtitles-2
    LDA #$3C29

-   STA CinematicBGTilemap_Subtitles,X
    DEX
    DEX
    BPL -
endif
    PLX                                                                  ;8BA8BE;
    PLP                                                                  ;8BA8BF;
    RTS                                                                  ;8BA8C0;


;;; $A8C1: Initialisation function - cinematic sprite object $CE6D (intro text caret) ;;;
InitFunction_CinematicSpriteObject_IntroTextCaret:
    LDA.W #$0008                                                         ;8BA8C1;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BA8C4;
    LDA.W #$0018                                                         ;8BA8C7;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BA8CA;
    LDA.W #$0C00                                                         ;8BA8CD;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BA8D0;
    RTS                                                                  ;8BA8D3;


;;; $A8D4: RTS. Pre-instruction - cinematic sprite object $CE6D (intro text caret) ;;;
RTS_8BA8D4:
    RTS                                                                  ;8BA8D4;


;;; $A8D5: Initialisation function - cinematic sprite object $CE5B (metroid egg) ;;;
InitFunction_CinematicSpriteObject_MetroidEgg:
    LDA.W #$0070                                                         ;8BA8D5;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BA8D8;
    LDA.W #$009B                                                         ;8BA8DB;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BA8DE;
    LDA.W #$0E00                                                         ;8BA8E1;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BA8E4;
    RTS                                                                  ;8BA8E7;


;;; $A8E8: Pre-instruction - cinematic sprite object $CE5B (metroid egg) ;;;
PreInstruction_CinematicSpriteObject_MetroidEgg:
    LDA.W SamusXPosition                                                 ;8BA8E8;
    CMP.W #$00A9                                                         ;8BA8EB;
    BPL .return                                                          ;8BA8EE;
    LDA.W #$0001                                                         ;8BA8F0;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BA8F3;
    LDA.W #InstList_MetroidEggHatching_0                                 ;8BA8F6;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BA8F9;
    LDA.W #RTS_8B93D9                                                    ;8BA8FC;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BA8FF;

  .return:
    RTS                                                                  ;8BA902;


;;; $A903: Pre-instruction - metroid egg - delete after cross-fade ;;;
PreInstruction_MetroidEgg_DeleteAfterCrossFade:
; Used by cinematic sprite object $CE5B (metroid egg)
    LDA.W IntroCrossFadeTimer                                            ;8BA903;
    BNE .return                                                          ;8BA906;
    LDA.W #$0001                                                         ;8BA908;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BA90B;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BA90E;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BA911;
    STZ.W IntroSamusDisplayFlag                                          ;8BA914;

  .return:
    RTS                                                                  ;8BA917;


;;; $A918: Instruction - spawn metroid egg particles ;;;
Instruction_SpawnMetroidEggParticles:
    PHY                                                                  ;8BA918;
    LDA.W #$0000                                                         ;8BA919;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle1          ;8BA91C;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA91F;
    LDA.W #$0001                                                         ;8BA922;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle2          ;8BA925;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA928;
    LDA.W #$0002                                                         ;8BA92B;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle3          ;8BA92E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA931;
    LDA.W #$0003                                                         ;8BA934;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle4          ;8BA937;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA93A;
    LDA.W #$0004                                                         ;8BA93D;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle5          ;8BA940;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA943;
    LDA.W #$0005                                                         ;8BA946;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggParticle6          ;8BA949;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BA94C;
    LDA.W #$000B                                                         ;8BA94F;
    JSL.L QueueSound_Lib2_Max6                                           ;8BA952;
    PLY                                                                  ;8BA956;
    RTS                                                                  ;8BA957;


;;; $A958: Initialisation function - cinematic sprite object $CECD/$CED3/$CED9/$CEDF/$CEE5/$CEEB (metroid egg particle) ;;;
InitFunction_CinematicSpriteObject_MetroidEggParticles:
    LDA.W CinematicSpriteObject_InitParam                                ;8BA958;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BA95B;
    ASL                                                                  ;8BA95E;
    ASL                                                                  ;8BA95F;
    TAX                                                                  ;8BA960;
    LDA.W .Xposition,X                                                   ;8BA961;
    CLC                                                                  ;8BA964;
    ADC.W #$0010                                                         ;8BA965;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BA968;
    LDA.W .Yposition,X                                                   ;8BA96B;
    CLC                                                                  ;8BA96E;
    ADC.W #$003B                                                         ;8BA96F;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BA972;
    LDA.W #$0E00                                                         ;8BA975;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BA978;
    RTS                                                                  ;8BA97B;

;        _________ X position - 10h
;       |      ___ Y position - 3Bh
;       |     |
  .Xposition:
    dw $005C                                                             ;8BA97C;
  .Yposition:
    dw       $0058                                                       ;8BA97E;
    dw $0063,$0058
    dw $0059,$005D
    dw $0060,$005B
    dw $0066,$005E
    dw $0063,$0060


;;; $A994: Pre-instruction - cinematic sprite object $CECD/$CED3/$CED9/$CEDF/$CEE5/$CEEB (metroid egg particle) ;;;
PreInstruction_CinematicSpriteObject_MetroidEggParticle:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BA994;
    AND.W #$00FF                                                         ;8BA997;
    ASL                                                                  ;8BA99A;
    ASL                                                                  ;8BA99B;
    TAY                                                                  ;8BA99C;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BA99D;
    CLC                                                                  ;8BA9A0;
    ADC.W .Xvelocities+2,Y                                               ;8BA9A1;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BA9A4;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BA9A7;
    ADC.W .Xvelocities,Y                                                 ;8BA9AA;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BA9AD;
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BA9B0;
    XBA                                                                  ;8BA9B3;
    AND.W #$00FF                                                         ;8BA9B4;
    ASL                                                                  ;8BA9B7;
    ASL                                                                  ;8BA9B8;
    TAY                                                                  ;8BA9B9;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BA9BA;
    CLC                                                                  ;8BA9BD;
    ADC.W .Yvelocities+2,Y                                               ;8BA9BE;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BA9C1;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BA9C4;
    ADC.W .Yvelocities,Y                                                 ;8BA9C7;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BA9CA;
    CMP.W #$00A8                                                         ;8BA9CD;
    BMI .lessThanA8                                                      ;8BA9D0;
    LDA.W #$0001                                                         ;8BA9D2;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BA9D5;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BA9D8;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BA9DB;
    RTS                                                                  ;8BA9DE;

  .lessThanA8:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BA9DF;
    CLC                                                                  ;8BA9E2;
    ADC.W #$0100                                                         ;8BA9E3;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BA9E6;
    RTS                                                                  ;8BA9E9;


  .Xvelocities:
; Indexed by [cinematic sprite object index] * 4
    dw $FFFF,$4000, $0000,$4000, $FFFF,$8000, $FFFF,$2000                 ;8BA9EA;
    dw $0000,$8000, $0000,$2000                                           ;8BA9FA;

  .Yvelocities:
; Indexed by [cinematic sprite object index] * 4
    dw $FFFE,$0000, $FFFE,$C000, $FFFE,$A000, $FFFE,$8000                 ;8BAA02;
    dw $FFFE,$6000, $FFFE,$4000, $FFFE,$2000, $FFFF,$0000                 ;8BAA12;
    dw $FFFF,$C000, $FFFF,$A000, $FFFF,$8000, $FFFF,$6000                 ;8BAA22;
    dw $FFFF,$4000, $FFFF,$2000, $0000,$0000, $0000,$2000                 ;8BAA32;
    dw $0000,$4000, $0000,$6000, $0000,$8000, $0000,$A000                 ;8BAA42;
    dw $0000,$C000, $0000,$E000, $0001,$0000, $0001,$2000                 ;8BAA52;
    dw $0001,$4000, $0001,$6000, $0001,$8000, $0001,$A000                 ;8BAA62;
    dw $0001,$C000, $0001,$E000, $0002,$0000, $0002,$2000                 ;8BAA72;
    dw $0002,$4000, $0002,$6000, $0002,$8000, $0002,$A000                 ;8BAA82;
    dw $0002,$C000, $0002,$E000                                           ;8BAA92;


;;; $AA9A: Initialisation function - cinematic sprite object $CEF1 (metroid egg slime drops) ;;;
InitFunction_CinematicSpriteObject_MetroidEggSlimeDrops:
    LDA.W CinematicSpriteObject_InitParam                                ;8BAA9A;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BAA9D;
    LDA.W CinematicSpriteObject_XPositions+$1A                           ;8BAAA0;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BAAA3;
    LDA.W CinematicSpriteObject_YPositions+$1A                           ;8BAAA6;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BAAA9;
    LDA.W #$0E00                                                         ;8BAAAC;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BAAAF;
    RTS                                                                  ;8BAAB2;


;;; $AAB3: Pre-instruction - cinematic sprite object $CEF1 (metroid egg slime drops) ;;;
PreInstruction_CinematicSpriteObject_MetroidEggSlimeDrops:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BAAB3;
    AND.W #$00FF                                                         ;8BAAB6;
    ASL                                                                  ;8BAAB9;
    ASL                                                                  ;8BAABA;
    TAY                                                                  ;8BAABB;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BAABC;
    CLC                                                                  ;8BAABF;
    ADC.W .Xvelocities+2,Y                                               ;8BAAC0;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BAAC3;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BAAC6;
    ADC.W .Xvelocities,Y                                                 ;8BAAC9;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BAACC;
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BAACF;
    BIT.W #$0001                                                         ;8BAAD2;
    BNE .nonZero                                                         ;8BAAD5;
    XBA                                                                  ;8BAAD7;
    AND.W #$00FF                                                         ;8BAAD8;
    ASL                                                                  ;8BAADB;
    ASL                                                                  ;8BAADC;
    TAY                                                                  ;8BAADD;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BAADE;
    CLC                                                                  ;8BAAE1;
    ADC.W .YvelocitiesEven+2,Y                                           ;8BAAE2;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BAAE5;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BAAE8;
    ADC.W .YvelocitiesEven,Y                                             ;8BAAEB;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BAAEE;
    CMP.W #$00A8                                                         ;8BAAF1;
    BMI .notHitGround                                                    ;8BAAF4;
    BRA +                                                                ;8BAAF6;

  .nonZero:
    XBA                                                                  ;8BAAF8;
    AND.W #$00FF                                                         ;8BAAF9;
    ASL                                                                  ;8BAAFC;
    ASL                                                                  ;8BAAFD;
    TAY                                                                  ;8BAAFE;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BAAFF;
    CLC                                                                  ;8BAB02;
    ADC.W .YvelocitiesOdd+2,Y                                            ;8BAB03;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BAB06;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BAB09;
    ADC.W .YvelocitiesOdd,Y                                              ;8BAB0C;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BAB0F;
    CMP.W #$00A8                                                         ;8BAB12;
    BMI .notHitGround                                                    ;8BAB15;

+   LDA.W #$0001                                                         ;8BAB17;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BAB1A;
    LDA.W #InstList_MetroidEggParticle_HitGround                         ;8BAB1D;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BAB20;
    LDA.W #RTS_8B93D9                                                    ;8BAB23;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BAB26;
    RTS                                                                  ;8BAB29;

  .notHitGround:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BAB2A;
    CLC                                                                  ;8BAB2D;
    ADC.W #$0100                                                         ;8BAB2E;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BAB31;
    RTS                                                                  ;8BAB34;

  .Xvelocities:
; Indexed by [cinematic sprite object index] * 4
    dw $FFFF,$0000, $FFFF,$8000, $0001,$0000, $0000,$8000                ;8BAB35;
    dw $FFFF,$8000                                                       ;8BAB45;

  .YvelocitiesOdd:
; for odd index slime drops. Indexed by [cinematic sprite object counter] * 4
    dw $FFFE,$0000, $FFFE,$C000, $FFFE,$A000, $FFFE,$8000                ;8BAB49;
    dw $FFFE,$6000, $FFFE,$4000, $FFFE,$2000, $FFFF,$0000                ;8BAB59;
    dw $FFFF,$C000, $FFFF,$A000, $FFFF,$8000, $FFFF,$6000                ;8BAB69;
    dw $FFFF,$4000, $FFFF,$2000, $0000,$0000, $0000,$2000                ;8BAB79;
    dw $0000,$4000, $0000,$6000, $0000,$8000, $0000,$A000                ;8BAB89;
    dw $0000,$C000, $0000,$E000, $0001,$0000, $0001,$2000                ;8BAB99;
    dw $0001,$4000, $0001,$6000, $0001,$8000, $0001,$A000                ;8BABA9;
    dw $0001,$C000, $0001,$E000, $0002,$0000, $0002,$2000                ;8BABB9;
    dw $0002,$4000, $0002,$6000, $0002,$8000, $0002,$A000                ;8BABC9;
    dw $0002,$C000, $0002,$E000, $0003,$0000, $0003,$2000                ;8BABD9;
    dw $0003,$4000, $0003,$6000, $0003,$8000, $0003,$A000                ;8BABE9;
    dw $0003,$C000, $0003,$E000, $0004,$0000, $0004,$2000                ;8BABF9;
    dw $0004,$4000, $0004,$6000, $0004,$8000, $0004,$A000                ;8BAB09;
    dw $0004,$C000, $0004,$E000, $0005,$0000, $0005,$2000                ;8BAC19;
    dw $0005,$4000, $0005,$6000, $0005,$8000, $0005,$A000                ;8BAC29;
    dw $0005,$C000, $0005,$E000                                          ;8BAC39;

  .YvelocitiesEven:
;  for even index slime drops. Indexed by [cinematic sprite object counter] * 4
    dw $FFFD,$0000, $FFFD,$C000, $FFFD,$A000, $FFFD,$8000                ;8BAC41;
    dw $FFFD,$6000, $FFFD,$4000, $FFFD,$2000, $FFFE,$0000                ;8BAC51;
    dw $FFFE,$C000, $FFFE,$A000, $FFFE,$8000, $FFFE,$6000                ;8BAC61;
    dw $FFFE,$4000, $FFFE,$2000, $FFFF,$0000, $FFFF,$C000                ;8BAC71;
    dw $FFFF,$A000, $FFFF,$8000, $FFFF,$6000, $FFFF,$4000                ;8BAC81;
    dw $FFFF,$2000, $0000,$0000, $0000,$2000, $0000,$4000                ;8BAC91;
    dw $0000,$6000, $0000,$8000, $0000,$A000, $0000,$C000                ;8BACA1;
    dw $0000,$E000, $0001,$0000, $0001,$2000, $0001,$4000                ;8BACB1;
    dw $0001,$6000, $0001,$8000, $0001,$A000, $0001,$C000                ;8BACC1;
    dw $0001,$E000, $0002,$0000, $0002,$2000, $0002,$4000                ;8BACD1;
    dw $0002,$6000, $0002,$8000, $0002,$A000, $0002,$C000                ;8BACE1;
    dw $0002,$E000, $0003,$0000, $0003,$2000, $0003,$4000                ;8BACF1;
    dw $0003,$6000, $0003,$8000, $0003,$A000, $0003,$C000                ;8BAC01;
    dw $0003,$E000, $0004,$0000, $0004,$2000, $0004,$4000                ;8BAD11;
    dw $0004,$6000, $0004,$8000, $0004,$A000, $0004,$C000                ;8BAD21;
    dw $0004,$E000, $0005,$0000, $0005,$2000, $0005,$4000                ;8BAD31;
    dw $0005,$6000, $0005,$8000, $0005,$A000, $0005,$C000                ;8BAD41;
    dw $0005,$E000                                                       ;8BAD51;


;;; $AD55: Initialisation function - cinematic sprite object $CE61 (baby metroid being delivered) ;;;
InitFunction_CinematicSpriteObject_BabyMetroidBeingDelivered:
    LDA.W #$0054                                                         ;8BAD55;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BAD58;
    LDA.W #$008B                                                         ;8BAD5B;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BAD5E;
    LDA.W #$0C00                                                         ;8BAD61;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BAD64;
    RTS                                                                  ;8BAD67;


;;; $AD68: Pre-instruction - cinematic sprite object $CE61 (baby metroid being delivered) ;;;
PreInst_CinematicSpriteObject_BabyMetroidBeingDelivered:
    LDA.W IntroCrossFadeTimer                                            ;8BAD68;
    BNE .crossFading                                                     ;8BAD6B;
    LDA.W #$0001                                                         ;8BAD6D;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BAD70;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BAD73;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BAD76;
    RTS                                                                  ;8BAD79;

  .crossFading:
    LDA.W CinematicFunctionTimer                                         ;8BAD7A;
    BIT.W #$0003                                                         ;8BAD7D;
    BNE .return                                                          ;8BAD80;
    LDA.W CinematicBG1_XPosition                                         ;8BAD82;
    BEQ .return                                                          ;8BAD85;
    DEC                                                                  ;8BAD87;
    STA.W CinematicBG1_XPosition                                         ;8BAD88;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BAD8B;
    INC                                                                  ;8BAD8E;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BAD8F;

  .return:
    RTS                                                                  ;8BAD92;


;;; $AD93: Initialisation function - cinematic sprite object $CE67 (baby metroid being examined) ;;;
InitFunction_CinematicSpriteObject_BabyMetroidBeingExamined:
    LDA.W #$0070                                                         ;8BAD93;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BAD96;
    LDA.W #$006F                                                         ;8BAD99;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BAD9C;
    LDA.W #$0C00                                                         ;8BAD9F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BADA2;
    RTS                                                                  ;8BADA5;


;;; $ADA6: Pre-instruction - cinematic sprite object $CE67 (baby metroid being examined) ;;;
PreInst_CinematicSpriteObject_BabyMetroidBeingExamined:
    LDA.W IntroCrossFadeTimer                                            ;8BADA6;
    BNE .crossFading                                                     ;8BADA9;
    LDA.W #$0001                                                         ;8BADAB;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BADAE;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BADB1;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BADB4;
    RTS                                                                  ;8BADB7;

  .crossFading:
    LDA.W CinematicFunctionTimer                                         ;8BADB8;
    BIT.W #$0003                                                         ;8BADBB;
    BNE .return                                                          ;8BADBE;
    LDA.W CinematicBG1_YPosition                                         ;8BADC0;
    CMP.W #$0008                                                         ;8BADC3;
    BPL .return                                                          ;8BADC6;
    INC                                                                  ;8BADC8;
    STA.W CinematicBG1_YPosition                                         ;8BADC9;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BADCC;
    DEC                                                                  ;8BADCF;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BADD0;

  .return:
    RTS                                                                  ;8BADD3;


;;; $ADD4: Instruction - set caret to blink ;;;
Instruction_SetCaretToBlink:
    LDA.W #InstList_IntroTextCaret_Blink                                 ;8BADD4;
    STA.W CinematicSpriteObject_InstListPointers+$1E                     ;8BADD7;
    LDA.W #$0001                                                         ;8BADDA;
    STA.W CinematicSpriteObject_InstructionTimers+$1E                    ;8BADDD;
    RTS                                                                  ;8BADE0;


;;; $ADE1: Place intro text caret off-screen ;;;
PlaceIntroTextCaretOffScreen:
    LDA.W #$0008                                                         ;8BADE1;
    STA.W CinematicSpriteObject_XPositions+$1E                           ;8BADE4;
    LDA.W #$00F8                                                         ;8BADE7;
    STA.W CinematicSpriteObject_YPositions+$1E                           ;8BADEA;
    RTS                                                                  ;8BADED;


;;; $ADEE: Reset intro text caret ;;;
RestIntroTextCaret:
    LDA.W #$0008                                                         ;8BADEE;
    STA.W CinematicSpriteObject_XPositions+$1E                           ;8BADF1;
    LDA.W #$0018                                                         ;8BADF4;
    STA.W CinematicSpriteObject_YPositions+$1E                           ;8BADF7;
    LDA.W #InstList_CinematicSpriteObject_IntroTextCaret                 ;8BADFA;
    STA.W CinematicSpriteObject_InstListPointers+$1E                     ;8BADFD;
    LDA.W #$0001                                                         ;8BAE00;
    STA.W CinematicSpriteObject_InstructionTimers+$1E                    ;8BAE03;
    RTS                                                                  ;8BAE06;


;;; $AE07: Initialisation function - cinematic sprite object $CE73 (intro Japanese text next-page arrow) ;;;
InitFunc_CinematicSpriteObject_IntroSubtitleNextPageArrow:
    LDA.W #$0080                                                         ;8BAE07;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BAE0A;
    LDA.W #$00D8                                                         ;8BAE0D;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BAE10;
    LDA.W #$0C00                                                         ;8BAE13;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BAE16;
    RTS                                                                  ;8BAE19;


;;; $AE1A: Pre-instruction - cinematic sprite object $CE73 (intro Japanese text next-page arrow) ;;;
PreInst_CinematicSpriteObject_IntroSubtitleNextPageArrow:
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BAE1A;
    CMP.W #$003B                                                         ;8BAE1D;
    BNE +                                                                ;8BAE20;
    LDA.W #$0001                                                         ;8BAE22;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BAE25;
    LDA.W #InstList_IntroSubtitleNextPageArrow_Blink                     ;8BAE28;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BAE2B;

+   LDA.W IntroCrossFadeTimer                                            ;8BAE2E;
    CMP.W #$007F                                                         ;8BAE31;
    BNE .return                                                          ;8BAE34;
    LDA.W #$0001                                                         ;8BAE36;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BAE39;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BAE3C;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BAE3F;

  .return:
    RTS                                                                  ;8BAE42;


;;; $AE43: Instruction - handle creating Japanese text - page 1 ;;;
Instruction_HandleCreatingSubtitle_Page1:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BAE43;
if !PAL == 0
    LDA.W AltText                                                        ;8BAE46;
    BEQ .return                                                          ;8BAE49;
endif
    PHB                                                                  ;8BAE4B;
    PEA.W Mode7Objects_IntroSubtitle_Page1>>8&$FF00                      ;8BAE4C;
    PLB                                                                  ;8BAE4F;
    PLB                                                                  ;8BAE50;
    PHY                                                                  ;8BAE51;
    LDY.W #Mode7Objects_IntroSubtitle_Page1                              ;8BAE52;
    JSR.W Spawn_Mode7Objects                                             ;8BAE55;
    PLY                                                                  ;8BAE58;
    PLB                                                                  ;8BAE59;

  .return:
    RTS                                                                  ;8BAE5A;


;;; $AE5B: Instruction - spawn blinking markers and wait for input - page 1 ;;;
Instruction_SpawnBlinkingMarkers_WaitForInput_Page1:
    JSR.W Instruction_SetCaretToBlink                                    ;8BAE5B;
    LDA.W AltText                                                        ;8BAE5E;
    BEQ .defaultLanguage                                                 ;8BAE61;
    PHB                                                                  ;8BAE63;
    PEA.W CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow>>8&$FF00 ;8BAE64;
    PLB                                                                  ;8BAE67;
    PLB                                                                  ;8BAE68;
    PHY                                                                  ;8BAE69;
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow   ;8BAE6A;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BAE6D;
    PLY                                                                  ;8BAE70;
    PLB                                                                  ;8BAE71;

if !PAL == 0
  .defaultLanguage:
endif
    LDA.W #CinematicFunction_Intro_WaitForInput_SetupMotherBrainFight    ;8BAE72;
    STA.W CinematicFunction                                              ;8BAE75;
    RTS                                                                  ;8BAE78;

if !PAL != 0
  .defaultLanguage:
    PHB
    PEA.W CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow>>$10<<8
    PLB
    PLB
    PHY
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow
    JSR.W Spawn_CinematicSpriteObject_Y
    PLY
    PHY
    LDY.W #Mode7Objects_IntroText_Page1_Subpage2
    JSR.W Spawn_Mode7Objects
    PLY
    PLB
    RTS
endif


;;; $AE79: Instruction - handle creating Japanese text - page 2 ;;;
Instruction_HandleCreatingSubtitle_Page2:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BAE79;
if !PAL == 0
    LDA.W AltText                                                        ;8BAE7C;
    BEQ .return                                                          ;8BAE7F;
endif
    PHB                                                                  ;8BAE81;
    PEA.W Mode7Objects_IntroSubtitle_Page2_Subpage1>>8&$FF00             ;8BAE82;
    PLB                                                                  ;8BAE85;
    PLB                                                                  ;8BAE86;
    PHY                                                                  ;8BAE87;
    LDY.W #Mode7Objects_IntroSubtitle_Page2_Subpage1                     ;8BAE88;
    JSR.W Spawn_Mode7Objects                                             ;8BAE8B;
    PLY                                                                  ;8BAE8E;
    PLB                                                                  ;8BAE8F;

  .return:
    RTS                                                                  ;8BAE90;


;;; $AE91: Instruction - spawn blinking markers and wait for input - page 2 ;;;
Instruction_SpawnBlinkingMarkers_WaitForInput_Page2:
    JSR.W Instruction_SetCaretToBlink                                    ;8BAE91;
    LDA.W AltText                                                        ;8BAE94;
    BEQ .defaultLanguage                                                 ;8BAE97;
    PHB                                                                  ;8BAE99;
    PEA.W Mode7Objects_IntroSubtitle_Page2_Subpage2>>8&$FF00             ;8BAE9A;
    PLB                                                                  ;8BAE9D;
    PLB                                                                  ;8BAE9E;
    PHY                                                                  ;8BAE9F;
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow   ;8BAEA0;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BAEA3;
    PLY                                                                  ;8BAEA6;
if !PAL == 0
    PHY                                                                  ;8BAEA7;
    LDY.W #Mode7Objects_IntroSubtitle_Page2_Subpage2                     ;8BAEA8;
    JSR.W Spawn_Mode7Objects                                             ;8BAEAB;
    PLY                                                                  ;8BAEAE;
    PLB                                                                  ;8BAEAF;
    RTS                                                                  ;8BAEB0;
else
    PLB
endif

if !PAL == 0
  .defaultLanguage:
endif
    LDA.W #CinematicFunc_Intro_WaitForInput_SetupBabyMetroidDiscovery    ;8BAEB1;
    STA.W CinematicFunction                                              ;8BAEB4;
    RTS                                                                  ;8BAEB7;

if !PAL != 0
  .defaultLanguage:
    PHB
    PEA.W CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow>>$10<<8
    PLB
    PLB
    PHY
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow
    JSR.W Spawn_CinematicSpriteObject_Y
    PLY
    PHY
    LDY.W #Mode7Objects_IntroSubtitle_Page2_Subpage2
    JSR.W Spawn_Mode7Objects
    PLY
    PLB
    RTS
endif


;;; $AEB8: Cinematic function - intro - wait for input and set up old Mother Brain fight ;;;
CinematicFunction_Intro_WaitForInput_SetupMotherBrainFight:
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BAEB8;
    BEQ .timerExpired                                                    ;8BAEBB;
    DEC                                                                  ;8BAEBD;
    STA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BAEBE;
    RTS                                                                  ;8BAEC1;

  .timerExpired:
    LDA.B DP_Controller1New                                              ;8BAEC2;
    BNE .newInputs                                                       ;8BAEC4;
    RTS                                                                  ;8BAEC6;

  .newInputs:
    SEP #$20                                                             ;8BAEC7;
    LDA.B #$50                                                           ;8BAEC9;
    STA.B DP_BG1TilemapAddrSize                                          ;8BAECB;
    REP #$20                                                             ;8BAECD;
    LDA.W #$0002                                                         ;8BAECF;
    STA.W Pose                                                           ;8BAED2;
    JSL.L InitializeSamusPose_1                                          ;8BAED5;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;8BAED9;
    LDA.W PreviousPose                                                   ;8BAEDD;
    STA.W LastDifferentPose                                              ;8BAEE0;
    LDA.W PreviousPoseXDirection                                         ;8BAEE3;
    STA.W LastDifferentPoseXDirection                                    ;8BAEE6;
    LDA.W Pose                                                           ;8BAEE9;
    STA.W PreviousPose                                                   ;8BAEEC;
    LDA.W PoseXDirection                                                 ;8BAEEF;
    STA.W PreviousPoseXDirection                                         ;8BAEF2;
    LDA.W #$009B                                                         ;8BAEF5;
    STA.W SamusXPosition                                                 ;8BAEF8;
    STA.W SamusPreviousXPosition                                         ;8BAEFB;
    LDA.W #$0073                                                         ;8BAEFE;
    STA.W SamusYPosition                                                 ;8BAF01;
    STA.W SamusPreviousYPosition                                         ;8BAF04;
    STZ.W CinematicBG1_XPosition                                         ;8BAF07;
    LDA.W #$007F                                                         ;8BAF0A;
    STA.W IntroCrossFadeTimer                                            ;8BAF0D;
    LDY.W #CinematicSpriteObjectDefinitions_IntroMotherBrain             ;8BAF10;
    STZ.B DP_Temp12                                                      ;8BAF13;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BAF15;
    LDY.W #CinematicSpriteObjectDefinitions_RinkaSpawner                 ;8BAF18;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BAF1B;
    LDX.W #$0000                                                         ;8BAF1E;

  .loopLevelData:
    LDA.L LevelData_OldMotherBrainRoomFromCutscene,X                     ;8BAF21;
    STA.L LevelData,X                                                    ;8BAF25;
    INX                                                                  ;8BAF29;
    INX                                                                  ;8BAF2A;
    CPX.W #$01C0                                                         ;8BAF2B;
    BMI .loopLevelData                                                   ;8BAF2E;
    LDX.W #$0000                                                         ;8BAF30;
    LDA.W #$0000                                                         ;8BAF33;

  .loopBTS:
    STA.L BTS,X                                                          ;8BAF36;
    INX                                                                  ;8BAF3A;
    INX                                                                  ;8BAF3B;
    CPX.W #$0200                                                         ;8BAF3C;
    BMI .loopBTS                                                         ;8BAF3F;
    LDA.W #$0001                                                         ;8BAF41;
    STA.W SelectedHUDItem                                                ;8BAF44;
    LDA.W #SamusCurrentStateHandler_Demo                                 ;8BAF47;
    STA.W CurrentStateHandler                                            ;8BAF4A;
    LDA.W #SamusNewStateHandler_IntroDemo                                ;8BAF4D;
    STA.W NewStateHandler                                                ;8BAF50;
    JSL.L Clear_DemoInput_RAM                                            ;8BAF53;
    JSL.L Enable_DemoInput                                               ;8BAF57;
    LDY.W #DemoInputObjects_Intro_OldMotherBrainFight                    ;8BAF5B;
    JSL.L Load_DemoInputObject                                           ;8BAF5E;
    LDA.W #$FFFF                                                         ;8BAF62;
    STA.W IntroSamusDisplayFlag                                          ;8BAF65;
    JMP.W Setup_Intro_CrossFade_Into_SamusGameplay                       ;8BAF68;

    RTS                                                                  ;8BAF6B;


;;; $AF6C: Cinematic function - intro - wait for input and set up baby metroid discovery ;;;
CinematicFunc_Intro_WaitForInput_SetupBabyMetroidDiscovery:
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BAF6C;
    BEQ .timerExpired                                                    ;8BAF6F;
    DEC                                                                  ;8BAF71;
    STA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BAF72;
    RTS                                                                  ;8BAF75;

  .timerExpired:
    LDA.B DP_Controller1New                                              ;8BAF76;
    BNE .newInputs                                                       ;8BAF78;
    RTS                                                                  ;8BAF7A;

  .newInputs:
    SEP #$20                                                             ;8BAF7B;
    LDA.B #$54                                                           ;8BAF7D;
    STA.B DP_BG1TilemapAddrSize                                          ;8BAF7F;
    REP #$20                                                             ;8BAF81;
    LDA.W #$0020                                                         ;8BAF83;
    STA.W RoomWidthBlocks                                                ;8BAF86;
    LDA.W #$0010                                                         ;8BAF89;
    STA.W RoomHeightBlocks                                               ;8BAF8C;
    LDA.W #$0002                                                         ;8BAF8F;
    STA.W Pose                                                           ;8BAF92;
    JSL.L InitializeSamusPose_1                                          ;8BAF95;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;8BAF99;
    LDA.W PreviousPose                                                   ;8BAF9D;
    STA.W LastDifferentPose                                              ;8BAFA0;
    LDA.W PreviousPoseXDirection                                         ;8BAFA3;
    STA.W LastDifferentPoseXDirection                                    ;8BAFA6;
    LDA.W Pose                                                           ;8BAFA9;
    STA.W PreviousPose                                                   ;8BAFAC;
    LDA.W PoseXDirection                                                 ;8BAFAF;
    STA.W PreviousPoseXDirection                                         ;8BAFB2;
    LDA.W #$0178                                                         ;8BAFB5;
    STA.W SamusXPosition                                                 ;8BAFB8;
    STA.W SamusPreviousXPosition                                         ;8BAFBB;
    LDA.W #$0093                                                         ;8BAFBE;
    STA.W SamusYPosition                                                 ;8BAFC1;
    STA.W SamusPreviousYPosition                                         ;8BAFC4;
    STZ.W CinematicBG1_XPosition                                         ;8BAFC7;
    LDA.W #$007F                                                         ;8BAFCA;
    STA.W IntroCrossFadeTimer                                            ;8BAFCD;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEgg                   ;8BAFD0;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BAFD3;
    LDY.W #CinematicSpriteObjectDefinitions_ConfusedBabyMetroid          ;8BAFD6;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BAFD9;
    STZ.W CinematicSpriteObject_FrameCounter                             ;8BAFDC;
    LDX.W #$0000                                                         ;8BAFDF;

  .loopLevelData:
    LDA.L LevelData_RoomWithBabyMetroidHatchingFromCutscene,X            ;8BAFE2;
    STA.L LevelData,X                                                    ;8BAFE6;
    INX                                                                  ;8BAFEA;
    INX                                                                  ;8BAFEB;
    CPX.W #$0300                                                         ;8BAFEC;
    BMI .loopLevelData                                                   ;8BAFEF;
    STZ.W SelectedHUDItem                                                ;8BAFF1;
    LDA.W #SamusCurrentStateHandler_Demo                                 ;8BAFF4;
    STA.W CurrentStateHandler                                            ;8BAFF7;
    LDA.W #SamusNewStateHandler_IntroDemo                                ;8BAFFA;
    STA.W NewStateHandler                                                ;8BAFFD;
    JSL.L Clear_DemoInput_RAM                                            ;8BB000;
    JSL.L Enable_DemoInput                                               ;8BB004;
    LDY.W #DemoInputObjects_Intro_BabyMetroidDiscovery                   ;8BB008;
    JSL.L Load_DemoInputObject                                           ;8BB00B;
    LDA.W #$0001                                                         ;8BB00F;
    STA.W IntroSamusDisplayFlag                                          ;8BB012;
    BRA Setup_Intro_CrossFade_Into_SamusGameplay                         ;8BB015;

    RTS                                                                  ;8BB017;


;;; $B018: Set up intro cross-fade into Samus gameplay ;;;
Setup_Intro_CrossFade_Into_SamusGameplay:
    SEP #$20                                                             ;8BB018;
    LDA.B #$06                                                           ;8BB01A;
    STA.B DP_MainScreenLayers                                            ;8BB01C;
    LDA.B #$11                                                           ;8BB01E;
    STA.B DP_SubScreenLayers                                             ;8BB020;
    LDA.B #$02                                                           ;8BB022;
    STA.B DP_ColorMathA                                                  ;8BB024;
    STZ.B DP_ColorMathB                                                  ;8BB026;
    JSL.L SpawnIntroCutsceneCrossFade_HDMAObject                         ;8BB028;
    REP #$20                                                             ;8BB02C;
    JSR.W PlaceIntroTextCaretOffScreen                                   ;8BB02E;
    LDA.W #CinematicFunction_Intro_CrossFadeToSamusGameplay              ;8BB031;
    STA.W CinematicFunction                                              ;8BB034;
    LDX.W #$0000                                                         ;8BB037;

  .loopPalettes:
    LDA.L Palettes_Intro,X                                               ;8BB03A;
    STA.L FadingPalettes_Initial,X                                       ;8BB03E;
    INX                                                                  ;8BB042;
    INX                                                                  ;8BB043;
    CPX.W #$0200                                                         ;8BB044;
    BMI .loopPalettes                                                    ;8BB047;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BB049;
    LDX.W #$0028                                                         ;8BB04C;
    LDY.W #$0003                                                         ;8BB04F;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB052;
    LDX.W #$00E0                                                         ;8BB055;
    LDY.W #$0010                                                         ;8BB058;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB05B;
    LDX.W #$0180                                                         ;8BB05E;
    LDY.W #$0020                                                         ;8BB061;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB064;
    LDX.W #$01E0                                                         ;8BB067;
    LDY.W #$0010                                                         ;8BB06A;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB06D;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB070;
    RTS                                                                  ;8BB073;


;;; $B074: Instruction - handle creating Japanese text - page 3 ;;;
Instruction_HandleCreatingSubtitle_Page3:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BB074;
if !PAL == 0
    LDA.W AltText                                                        ;8BB077;
    BEQ .return                                                          ;8BB07A;
endif
    PHB                                                                  ;8BB07C;
    PEA.W Mode7Objects_IntroSubtitle_Page3_Subpage1>>8&$FF00             ;8BB07D;
    PLB                                                                  ;8BB080;
    PLB                                                                  ;8BB081;
    PHY                                                                  ;8BB082;
    LDY.W #Mode7Objects_IntroSubtitle_Page3_Subpage1                     ;8BB083;
    JSR.W Spawn_Mode7Objects                                             ;8BB086;
    PLY                                                                  ;8BB089;
    PLB                                                                  ;8BB08A;

  .return:
    RTS                                                                  ;8BB08B;


;;; $B08C: Instruction - spawn blinking markers and wait for input - page 3 ;;;
Instruction_SpawnBlinkingMarkers_WaitForInput_Page3:
    JSR.W Instruction_SetCaretToBlink                                    ;8BB08C;
    LDA.W AltText                                                        ;8BB08F;
    BEQ .defaultLanguage                                                 ;8BB092;
    PHB                                                                  ;8BB094;
    PEA.W Mode7Objects_IntroSubtitle_Page3_Subpage2>>8&$FF00             ;8BB095;
    PLB                                                                  ;8BB098;
    PLB                                                                  ;8BB099;
    PHY                                                                  ;8BB09A;
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow   ;8BB09B;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB09E;
    PLY                                                                  ;8BB0A1;
if !PAL == 0
    PHY                                                                  ;8BB0A2;
    LDY.W #Mode7Objects_IntroSubtitle_Page3_Subpage2                     ;8BB0A3;
    JSR.W Spawn_Mode7Objects                                             ;8BB0A6;
    PLY                                                                  ;8BB0A9;
    PLB                                                                  ;8BB0AA;
    RTS                                                                  ;8BB0AB;
  
  .defaultLanguage:
else
    PLB
endif

    LDA.W #CinematicFunc_Intro_WaitForInput_SetupBabyMetroidDelivery     ;8BB0AC;
    STA.W CinematicFunction                                              ;8BB0AF;
    RTS                                                                  ;8BB0B2;

if !PAL != 0
  .defaultLanguage:
    PHB
    PEA.W CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow>>$10<<8
    PLB
    PLB
    PHY
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow
    JSR.W Spawn_CinematicSpriteObject_Y
    PLY
    PHY
    LDY.W #Mode7Objects_IntroSubtitle_Page3_Subpage2
    JSR.W Spawn_Mode7Objects
    PLY
    PLB
    RTS
endif


;;; $B0B3: Instruction - handle creating Japanese text - page 4 ;;;
Instruction_HandleCreatingSubtitle_Page4:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BB0B3;
if !PAL == 0
    LDA.W AltText                                                        ;8BB0B6;
    BEQ .return                                                          ;8BB0B9;
endif
    PHB                                                                  ;8BB0BB;
    PEA.W Mode7Objects_IntroSubtitle_Page4_Subpage1>>8&$FF00             ;8BB0BC;
    PLB                                                                  ;8BB0BF;
    PLB                                                                  ;8BB0C0;
    PHY                                                                  ;8BB0C1;
    LDY.W #Mode7Objects_IntroSubtitle_Page4_Subpage1                     ;8BB0C2;
    JSR.W Spawn_Mode7Objects                                             ;8BB0C5;
    PLY                                                                  ;8BB0C8;
    PLB                                                                  ;8BB0C9;

  .return:
    RTS                                                                  ;8BB0CA;


;;; $B0CB: Instruction - spawn blinking markers and wait for input - page 4 ;;;
Instruction_SpawnBlinkingMarkers_WaitForInput_Page4:
    JSR.W Instruction_SetCaretToBlink                                    ;8BB0CB;
if !PAL == 0
    LDA.W AltText                                                        ;8BB0CE;
    BEQ .waitForInput                                                    ;8BB0D1;
endif
    PHB                                                                  ;8BB0D3;
    PEA.W Mode7Objects_IntroSubtitle_Page4_Subpage2>>8&$FF00             ;8BB0D4;
    PLB                                                                  ;8BB0D7;
    PLB                                                                  ;8BB0D8;
    PHY                                                                  ;8BB0D9;
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow   ;8BB0DA;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB0DD;
    PLY                                                                  ;8BB0E0;
    PHY                                                                  ;8BB0E1;
    LDY.W #Mode7Objects_IntroSubtitle_Page4_Subpage2                     ;8BB0E2;
    JSR.W Spawn_Mode7Objects                                             ;8BB0E5;
    PLY                                                                  ;8BB0E8;
    PLB                                                                  ;8BB0E9;
    RTS                                                                  ;8BB0EA;

if !PAL == 0
  .waitForInput:
    LDA.W #CinematicFunc_Intro_WaitForInput_SetupBabyMetroidExamined     ;8BB0EB;
    STA.W CinematicFunction                                              ;8BB0EE;
    RTS                                                                  ;8BB0F1;
endif


;;; $B0F2: Cinematic function - intro - wait for input and set up baby metroid being delivered ;;;
CinematicFunc_Intro_WaitForInput_SetupBabyMetroidDelivery:
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB0F2;
    BEQ .timerExpired                                                    ;8BB0F5;
    DEC                                                                  ;8BB0F7;
    STA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB0F8;
    RTS                                                                  ;8BB0FB;

  .timerExpired:
    LDA.B DP_Controller1New                                              ;8BB0FC;
    BEQ .return                                                          ;8BB0FE;
    SEP #$20                                                             ;8BB100;
    LDA.B #$58                                                           ;8BB102;
    STA.B DP_BG1TilemapAddrSize                                          ;8BB104;
    REP #$20                                                             ;8BB106;
    LDA.W #$0020                                                         ;8BB108;
    STA.W CinematicBG1_XPosition                                         ;8BB10B;
    LDA.W #$0008                                                         ;8BB10E;
    STA.W CinematicBG1_YPosition                                         ;8BB111;
    LDA.W #$007F                                                         ;8BB114;
    STA.W IntroCrossFadeTimer                                            ;8BB117;
    LDY.W #CinematicSpriteObjectDefinitions_BabyMetroidBeingDelivered    ;8BB11A;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB11D;
    BRA SetupIntroCrossFadeIntoScientistCutscene                         ;8BB120;

  .return:
    RTS                                                                  ;8BB122;


;;; $B123: Cinematic function - intro - wait for input and set up baby metroid being examined ;;;
CinematicFunc_Intro_WaitForInput_SetupBabyMetroidExamined:
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB123;
    BEQ .timerExpired                                                    ;8BB126;
    DEC                                                                  ;8BB128;
    STA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB129;
    RTS                                                                  ;8BB12C;

  .timerExpired:
    LDA.B DP_Controller1New                                              ;8BB12D;
    BEQ .return                                                          ;8BB12F;
    SEP #$20                                                             ;8BB131;
    LDA.B #$5C                                                           ;8BB133;
    STA.B DP_BG1TilemapAddrSize                                          ;8BB135;
    REP #$20                                                             ;8BB137;
    STZ.W CinematicBG1_XPosition                                         ;8BB139;
    LDA.W #$FFE8                                                         ;8BB13C;
    STA.W CinematicBG1_YPosition                                         ;8BB13F;
    LDA.W #$007F                                                         ;8BB142;
    STA.W IntroCrossFadeTimer                                            ;8BB145;
    LDY.W #CinematicSpriteObjectDefinitions_BabyMetroidBeingExamined     ;8BB148;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB14B;
    BRA SetupIntroCrossFadeIntoScientistCutscene                         ;8BB14E;

  .return:
    RTS                                                                  ;8BB150;


;;; $B151: Set up intro cross-fade into scientist cutscene ;;;
SetupIntroCrossFadeIntoScientistCutscene:
    SEP #$20                                                             ;8BB151;
    LDA.B #$06                                                           ;8BB153;
    STA.B DP_MainScreenLayers                                            ;8BB155;
    LDA.B #$11                                                           ;8BB157;
    STA.B DP_SubScreenLayers                                             ;8BB159;
    LDA.B #$02                                                           ;8BB15B;
    STA.B DP_ColorMathA                                                  ;8BB15D;
    STZ.B DP_ColorMathB                                                  ;8BB15F;
    JSL.L SpawnIntroCutsceneCrossFade_HDMAObject                         ;8BB161;
    REP #$20                                                             ;8BB165;
    JSR.W PlaceIntroTextCaretOffScreen                                   ;8BB167;
    LDA.W #CinematicFunction_Intro_CrossFadeToScientistCutscene          ;8BB16A;
    STA.W CinematicFunction                                              ;8BB16D;
    LDX.W #$0000                                                         ;8BB170;

  .loop:
    LDA.L Palettes_Intro,X                                               ;8BB173;
    STA.L FadingPalettes_Initial,X                                       ;8BB177;
    INX                                                                  ;8BB17B;
    INX                                                                  ;8BB17C;
    CPX.W #$0200                                                         ;8BB17D;
    BMI .loop                                                            ;8BB180;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BB182;
    LDX.W #$0040                                                         ;8BB185;
    LDY.W #$0010                                                         ;8BB188;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB18B;
    LDX.W #$01C0                                                         ;8BB18E;
    LDY.W #$0009                                                         ;8BB191;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB194;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB197;
    RTS                                                                  ;8BB19A;


;;; $B19B: Instruction - handle creating Japanese text - page 5 ;;;
Instruction_HandleCreatingSubtitle_Page5:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BB19B;
if !PAL == 0
    LDA.W AltText                                                        ;8BB19E;
    BEQ .return                                                          ;8BB1A1;
endif
    PHB                                                                  ;8BB1A3;
    PEA.W Mode7Objects_IntroJaanText_Page5_Subpage1>>8&$FF00             ;8BB1A4;
    PLB                                                                  ;8BB1A7;
    PLB                                                                  ;8BB1A8;
    PHY                                                                  ;8BB1A9;
    LDY.W #Mode7Objects_IntroJaanText_Page5_Subpage1                     ;8BB1AA;
    JSR.W Spawn_Mode7Objects                                             ;8BB1AD;
    PLY                                                                  ;8BB1B0;
    PLB                                                                  ;8BB1B1;

  .return:
    RTS                                                                  ;8BB1B2;


;;; $B1B3: Instruction - spawn blinking markers and wait for input - page 5 ;;;
Instruction_SpawnBlinkingMarkers_WaitForInput_Page5:
    JSR.W Instruction_SetCaretToBlink                                    ;8BB1B3;
    LDA.W AltText                                                        ;8BB1B6;
    BEQ .defaultLanguage                                                 ;8BB1B9;
    PHB                                                                  ;8BB1BB;
    PEA.W Mode7Objects_IntroSubtitle_Page5_Subpage2>>8&$FF00             ;8BB1BC;
    PLB                                                                  ;8BB1BF;
    PLB                                                                  ;8BB1C0;
    PHY                                                                  ;8BB1C1;
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow   ;8BB1C2;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB1C5;
    PLY                                                                  ;8BB1C8;
if !PAL == 0
    PHY                                                                  ;8BB1C9;
    LDY.W #Mode7Objects_IntroSubtitle_Page5_Subpage2                     ;8BB1CA;
    JSR.W Spawn_Mode7Objects                                             ;8BB1CD;
    PLY                                                                  ;8BB1D0;
    PLB                                                                  ;8BB1D1;
    RTS                                                                  ;8BB1D2;
    
  .defaultLanguage:
else
    PLB
endif

    LDA.W #CinematicFunction_Intro_WaitForInput_ClearText                ;8BB1D3;
    STA.W CinematicFunction                                              ;8BB1D6;
    RTS                                                                  ;8BB1D9;

if !PAL != 0
  .defaultLanguage:
    PHB
    PEA.W CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow>>$10<<8
    PLB
    PLB
    PHY
    LDY.W #CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow
    JSR.W Spawn_CinematicSpriteObject_Y
    PLY
    PHY
    LDY.W #Mode7Objects_IntroSubtitle_Page5_Subpage2
    JSR.W Spawn_Mode7Objects
    PLY
    PLB
    RTS
endif


;;; $B1DA: Cinematic function - intro - wait for input and clear text ;;;
CinematicFunction_Intro_WaitForInput_ClearText:
    JSR.W RTS_BackgroundFLickeringEffect                                 ;8BB1DA;
    LDA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB1DD;
    BEQ .timerExpired                                                    ;8BB1E0;
    DEC                                                                  ;8BB1E2;
    STA.W CinematicSpriteObject_IntroSubtitleTimer                       ;8BB1E3;
    RTS                                                                  ;8BB1E6;

  .timerExpired:
    LDA.B DP_Controller1New                                              ;8BB1E7;
    BEQ .return                                                          ;8BB1E9;
    LDA.W #$007F                                                         ;8BB1EB;
    STA.W IntroCrossFadeTimer                                            ;8BB1EE;
    LDA.W AltText                                                        ;8BB1F1;
    BEQ CinematicFunction_Intro_Page6                                    ;8BB1F4;
    LDA.W #CinematicFunction_Intro_Page6                                 ;8BB1F6;
    STA.W CinematicFunction                                              ;8BB1F9;
    JSL.L Disable_CinematicBGTilemap_Updates                             ;8BB1FC;
    JSR.W BlankOut_Subtitle_Tiles                                        ;8BB200;
if !PAL == 0
    JSR.W TransferSubtitleTilesToVRAM                                    ;8BB203;
else
    JSR.W TransferIntroSubtitleTilemapToVRAM
endif

  .return:
    RTS                                                                  ;8BB206;


;;; $B207: Cinematic function - intro - page 6 ;;;
CinematicFunction_Intro_Page6:
    JSL.L Enable_CinematicBGTilemap_Updates                              ;8BB207;
    JSR.W Clear_EnglishText_Tilemap                                      ;8BB20B;
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage6               ;8BB20E;
    LDA.W #$4C00                                                         ;8BB211;
    JSR.W Spawn_CinematicBGObject                                        ;8BB214;
    LDA.W #RTS_8BA390                                                    ;8BB217;
    STA.W CinematicFunction                                              ;8BB21A;
    JSR.W RestIntroTextCaret                                             ;8BB21D;
    LDA.W #$0000                                                         ;8BB220;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BB223;
    RTS                                                                  ;8BB227;


;;; $B228: Instruction - handle creating Japanese text - page 6 ;;;
Instruction_HandleCreatingSubtitle_Page6:
    STZ.W CinematicSpriteObject_IntroTextClickFlag                       ;8BB228;
if !PAL == 0
    LDA.W AltText                                                        ;8BB22B;
    BEQ .return                                                          ;8BB22E;
endif
    PHB                                                                  ;8BB230;
    PEA.W Mode7Objects_IntroSubtitle_Page6>>8&$FF00                      ;8BB231;
    PLB                                                                  ;8BB234;
    PLB                                                                  ;8BB235;
    PHY                                                                  ;8BB236;
    LDY.W #Mode7Objects_IntroSubtitle_Page6                              ;8BB237;
    JSR.W Spawn_Mode7Objects                                             ;8BB23A;
    PLY                                                                  ;8BB23D;
    PLB                                                                  ;8BB23E;

  .return:
    RTS                                                                  ;8BB23F;


;;; $B240: Instruction - finish intro ;;;
Instruction_FinishIntro:
    LDA.W #CinematicFunction_Intro_Finish                                ;8BB240;
    STA.W CinematicFunction                                              ;8BB243;
    LDA.W #$0001                                                         ;8BB246;
    STA.W ScreenFadeDelay                                                ;8BB249;
    STA.W ScreenFadeCounter                                              ;8BB24C;
    RTS                                                                  ;8BB24F;


;;; $B250: Cinematic function - intro - cross-fade to Samus gameplay ;;;
CinematicFunction_Intro_CrossFadeToSamusGameplay:
; Cinematic function timer for this routine is set all the way up at $A6F0
    LDA.W CinematicFunctionTimer                                         ;8BB250;
    BIT.W #$0003                                                         ;8BB253;
    BNE .decTimer                                                        ;8BB256;
    LDX.W #$0000                                                         ;8BB258;
    LDY.W #$0014                                                         ;8BB25B;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB25E;
    LDX.W #$0060                                                         ;8BB261;
    LDY.W #$0010                                                         ;8BB264;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB267;
    LDX.W #$01D2                                                         ;8BB26A;
    LDY.W #$0006                                                         ;8BB26D;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB270;
    LDX.W #$0028                                                         ;8BB273;
    LDY.W #$0003                                                         ;8BB276;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB279;
    LDX.W #$00E0                                                         ;8BB27C;
    LDY.W #$0010                                                         ;8BB27F;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB282;
    LDX.W #$0180                                                         ;8BB285;
    LDY.W #$0020                                                         ;8BB288;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB28B;
    LDX.W #$01E0                                                         ;8BB28E;
    LDY.W #$0010                                                         ;8BB291;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB294;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB297;

  .decTimer:
    DEC.W CinematicFunctionTimer                                         ;8BB29A;
    BPL .return                                                          ;8BB29D;
    SEP #$20                                                             ;8BB29F;
    LDA.B #$15                                                           ;8BB2A1;
    STA.B DP_MainScreenLayers                                            ;8BB2A3;
    STZ.B DP_SubScreenLayers                                             ;8BB2A5;
    STZ.B DP_ColorMathA                                                  ;8BB2A7;
    REP #$20                                                             ;8BB2A9;
    LDX.W #CinematicBGTilemap_EnglishTextRegion-CinematicBGTilemap       ;8BB2AB;
    LDA.W #$002F                                                         ;8BB2AE;

  .loop:
    STA.L CinematicBGTilemap,X                                           ;8BB2B1;
    INX                                                                  ;8BB2B5;
    INX                                                                  ;8BB2B6;
    CPX.W #CinematicBGTilemap_Subtitles-CinematicBGTilemap               ;8BB2B7;
    BMI .loop                                                            ;8BB2BA;
    JSR.W BlankOut_Subtitle_Tiles                                        ;8BB2BC;
    LDA.W #CinematicFunction_Nothing                                     ;8BB2BF;
    STA.W CinematicFunction                                              ;8BB2C2;
    LDA.W IntroSamusDisplayFlag                                          ;8BB2C5;
    BPL .return                                                          ;8BB2C8;
    LDY.W #PaletteFXObjects_OldMotherBrainFightBackgroundLights          ;8BB2CA;
    JSL.L Spawn_PaletteFXObject                                          ;8BB2CD;

  .return:
    RTS                                                                  ;8BB2D1;


;;; $B2D2: Cinematic function - intro - cross-fade to scientist cutscene ;;;
CinematicFunction_Intro_CrossFadeToScientistCutscene:
    LDA.W CinematicFunctionTimer                                         ;8BB2D2;
    BIT.W #$0003                                                         ;8BB2D5;
    BNE .decTimer                                                        ;8BB2D8;
    LDX.W #$0000                                                         ;8BB2DA;
    LDY.W #$0014                                                         ;8BB2DD;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB2E0;
    LDX.W #$0060                                                         ;8BB2E3;
    LDY.W #$0010                                                         ;8BB2E6;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB2E9;
    LDX.W #$01D2                                                         ;8BB2EC;
    LDY.W #$0006                                                         ;8BB2EF;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB2F2;
    LDX.W #$0040                                                         ;8BB2F5;
    LDY.W #$0010                                                         ;8BB2F8;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB2FB;
    LDX.W #$01C0                                                         ;8BB2FE;
    LDY.W #$0009                                                         ;8BB301;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB304;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB307;

  .decTimer:
    DEC.W CinematicFunctionTimer                                         ;8BB30A;
    BPL .return                                                          ;8BB30D;
    SEP #$20                                                             ;8BB30F;
    LDA.B #$15                                                           ;8BB311;
    STA.B DP_MainScreenLayers                                            ;8BB313;
    STZ.B DP_SubScreenLayers                                             ;8BB315;
    STZ.B DP_ColorMathA                                                  ;8BB317;
    REP #$20                                                             ;8BB319;
    LDX.W #CinematicBGTilemap_EnglishTextRegion-CinematicBGTilemap       ;8BB31B;
    LDA.W #$002F                                                         ;8BB31E;

  .loopEnglishText:
    STA.L CinematicBGTilemap,X                                           ;8BB321;
    INX                                                                  ;8BB325;
    INX                                                                  ;8BB326;
    CPX.W #CinematicBGTilemap_Subtitles-CinematicBGTilemap               ;8BB327;
    BMI .loopEnglishText                                                 ;8BB32A;
    JSR.W BlankOut_Subtitle_Tiles                                        ;8BB32C;
    LDA.W #CinematicFunction_Nothing                                     ;8BB32F;
    STA.W CinematicFunction                                              ;8BB332;

  .return:
    RTS                                                                  ;8BB335;


;;; $B336: Instruction - start intro page 2 ;;;
Instruction_StartIntroPage2:
    LDA.W #CinematicFunction_Intro_Page2                                 ;8BB336;
    STA.W CinematicFunction                                              ;8BB339;
    BRA ClearSubtitleTiles_DisableCinematicBGTilemapUpdates              ;8BB33C;


;;; $B33E: Instruction - start intro page 3 ;;;
Instruction_StartIntroPage3:
    LDA.W #CinematicFunction_Intro_Page3                                 ;8BB33E;
    STA.W CinematicFunction                                              ;8BB341;
    BRA ClearSubtitleTiles_DisableCinematicBGTilemapUpdates              ;8BB344;


;;; $B346: Instruction - start intro page 4 ;;;
Instruction_StartIntroPage4:
    LDA.W #CinematicFunction_Intro_Page4                                 ;8BB346;
    STA.W CinematicFunction                                              ;8BB349;
    BRA ClearSubtitleTiles_DisableCinematicBGTilemapUpdates              ;8BB34C;


;;; $B34E: Instruction - start intro page 5 ;;;
Instruction_StartIntroPage5:
    LDA.W #CinematicFunction_Intro_Page5                                 ;8BB34E;
    STA.W CinematicFunction                                              ;8BB351; fallthrough to ClearSubtitleTiles_DisableCinematicBGTilemapUpdates


;;; $B354: Clear Japanese text tiles and disable cinematic BG tilemap updates ;;;
ClearSubtitleTiles_DisableCinematicBGTilemapUpdates:
    JSL.L Disable_CinematicBGTilemap_Updates                             ;8BB354;
    JSR.W BlankOut_Subtitle_Tiles                                        ;8BB358;
if !PAL == 0
    JSR.W TransferSubtitleTilesToVRAM                                    ;8BB35B;
else
    JSR.W TransferIntroSubtitleTilemapToVRAM
endif
    RTS                                                                  ;8BB35E;


;;; $B35F: Cinematic function - intro - page 2 ;;;
CinematicFunction_Intro_Page2:
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage2               ;8BB35F;
    LDA.W #$4C00                                                         ;8BB362;
    JSR.W Spawn_CinematicBGObject                                        ;8BB365;
    LDA.W #CinematicFunction_Intro_CrossFadeFromSamusGameplay            ;8BB368;
    STA.W CinematicFunction                                              ;8BB36B;
    BRA Setup_Intro_CrossFade_Into_Text                                  ;8BB36E;


;;; $B370: Cinematic function - intro - page 3 ;;;
CinematicFunction_Intro_Page3:
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage3               ;8BB370;
    LDA.W #$4C00                                                         ;8BB373;
    JSR.W Spawn_CinematicBGObject                                        ;8BB376;
    LDA.W #CinematicFunction_Intro_CrossFadeFromSamusGameplay            ;8BB379;
    STA.W CinematicFunction                                              ;8BB37C;
    BRA Setup_Intro_CrossFade_Into_Text                                  ;8BB37F;


;;; $B381: Cinematic function - intro - page 4 ;;;
CinematicFunction_Intro_Page4:
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage4               ;8BB381;
    LDA.W #$4C00                                                         ;8BB384;
    JSR.W Spawn_CinematicBGObject                                        ;8BB387;
    LDA.W #CinematicFunction_Intro_CrossFadeFromScientistCutscene        ;8BB38A;
    STA.W CinematicFunction                                              ;8BB38D;
    BRA Setup_Intro_CrossFade_Into_Text                                  ;8BB390;


;;; $B392: Cinematic function - intro - page 5 ;;;
CinematicFunction_Intro_Page5:
    LDY.W #CinematicSpriteObjectDefinitions_IntroTextPage5               ;8BB392;
    LDA.W #$4C00                                                         ;8BB395;
    JSR.W Spawn_CinematicBGObject                                        ;8BB398;
    LDA.W #CinematicFunction_Intro_CrossFadeFromScientistCutscene        ;8BB39B;
    STA.W CinematicFunction                                              ;8BB39E; fallthrough to Setup_Intro_CrossFade_Into_Text


;;; $B3A1: Set up intro cross-fade into text ;;;
Setup_Intro_CrossFade_Into_Text:
    SEP #$20                                                             ;8BB3A1;
    LDA.B #$06                                                           ;8BB3A3;
    STA.B DP_MainScreenLayers                                            ;8BB3A5;
    LDA.B #$11                                                           ;8BB3A7;
    STA.B DP_SubScreenLayers                                             ;8BB3A9;
    LDA.B #$02                                                           ;8BB3AB;
    STA.B DP_ColorMathA                                                  ;8BB3AD;
    STZ.B DP_ColorMathB                                                  ;8BB3AF;
    REP #$20                                                             ;8BB3B1;
    LDX.W #$0000                                                         ;8BB3B3;

  .loopPalettes:
    LDA.L Palettes_Intro,X                                               ;8BB3B6;
    STA.L FadingPalettes_Initial,X                                       ;8BB3BA;
    INX                                                                  ;8BB3BE;
    INX                                                                  ;8BB3BF;
    CPX.W #$0200                                                         ;8BB3C0;
    BMI .loopPalettes                                                    ;8BB3C3;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BB3C5;
    LDX.W #$0000                                                         ;8BB3C8;
    LDY.W #$0010                                                         ;8BB3CB;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB3CE;
    LDX.W #$0060                                                         ;8BB3D1;
    LDY.W #$0010                                                         ;8BB3D4;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB3D7;
    LDX.W #$01D2                                                         ;8BB3DA;
    LDY.W #$0006                                                         ;8BB3DD;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BB3E0;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB3E3;
    LDA.W #$007F                                                         ;8BB3E6;
    STA.W CinematicFunctionTimer                                         ;8BB3E9;
    JSL.L Enable_CinematicBGTilemap_Updates                              ;8BB3EC;
    JSR.W RestIntroTextCaret                                             ;8BB3F0;
    RTS                                                                  ;8BB3F3;


;;; $B3F4: Cinematic function - intro - cross-fade from Samus gameplay ;;;
CinematicFunction_Intro_CrossFadeFromSamusGameplay:
    LDA.W IntroCrossFadeTimer                                            ;8BB3F4;
    BIT.W #$0003                                                         ;8BB3F7;
    BNE .decTimer                                                        ;8BB3FA;
    LDX.W #$0000                                                         ;8BB3FC;
    LDY.W #$0010                                                         ;8BB3FF;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB402;
    LDX.W #$0060                                                         ;8BB405;
    LDY.W #$0010                                                         ;8BB408;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB40B;
    LDX.W #$01D2                                                         ;8BB40E;
    LDY.W #$0006                                                         ;8BB411;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB414;
    LDX.W #$0028                                                         ;8BB417;
    LDY.W #$0003                                                         ;8BB41A;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB41D;
    LDX.W #$00E0                                                         ;8BB420;
    LDY.W #$0010                                                         ;8BB423;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB426;
    LDX.W #$0180                                                         ;8BB429;
    LDY.W #$0020                                                         ;8BB42C;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB42F;
    LDX.W #$01E0                                                         ;8BB432;
    LDY.W #$0010                                                         ;8BB435;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB438;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB43B;

  .decTimer:
    DEC.W IntroCrossFadeTimer                                            ;8BB43E;
    BPL .return                                                          ;8BB441;
    SEP #$20                                                             ;8BB443;
    LDA.B #$16                                                           ;8BB445;
    STA.B DP_MainScreenLayers                                            ;8BB447;
    STZ.B DP_SubScreenLayers                                             ;8BB449;
    STZ.B DP_ColorMathA                                                  ;8BB44B;
    STZ.B DP_ColorMathB                                                  ;8BB44D;
    REP #$20                                                             ;8BB44F;
    LDA.W #CinematicFunction_Nothing                                     ;8BB451;
    STA.W CinematicFunction                                              ;8BB454;

  .return:
    RTS                                                                  ;8BB457;


;;; $B458: Cinematic function - intro - cross-fade from scientist cutscene ;;;
CinematicFunction_Intro_CrossFadeFromScientistCutscene:
    LDA.W IntroCrossFadeTimer                                            ;8BB458;
    BIT.W #$0003                                                         ;8BB45B;
    BNE .decTimer                                                        ;8BB45E;
    LDX.W #$0000                                                         ;8BB460;
    LDY.W #$0010                                                         ;8BB463;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB466;
    LDX.W #$0060                                                         ;8BB469;
    LDY.W #$0010                                                         ;8BB46C;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB46F;
    LDX.W #$01D2                                                         ;8BB472;
    LDY.W #$0006                                                         ;8BB475;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BB478;
    LDX.W #$0040                                                         ;8BB47B;
    LDY.W #$0010                                                         ;8BB47E;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB481;
    LDX.W #$01C0                                                         ;8BB484;
    LDY.W #$0009                                                         ;8BB487;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BB48A;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BB48D;

  .decTimer:
    DEC.W IntroCrossFadeTimer                                            ;8BB490;
    BPL .return                                                          ;8BB493;
    SEP #$20                                                             ;8BB495;
    LDA.B #$16                                                           ;8BB497;
    STA.B DP_MainScreenLayers                                            ;8BB499;
    STZ.B DP_SubScreenLayers                                             ;8BB49B;
    STZ.B DP_ColorMathA                                                  ;8BB49D;
    STZ.B DP_ColorMathB                                                  ;8BB49F;
    REP #$20                                                             ;8BB4A1;
    LDX.W #$0000                                                         ;8BB4A3;

  .loopPalettes:
    LDA.L Palettes_Intro_CrossFade,X                                     ;8BB4A6;
    STA.L Palettes_SpriteP6,X                                            ;8BB4AA;
    INX                                                                  ;8BB4AE;
    INX                                                                  ;8BB4AF;
    CPX.W #$000E                                                         ;8BB4B0;
    BMI .loopPalettes                                                    ;8BB4B3;
    LDA.W #CinematicFunction_Nothing                                     ;8BB4B5;
    STA.W CinematicFunction                                              ;8BB4B8;

  .return:
    RTS                                                                  ;8BB4BB;


;;; $B4BC: Pre-instruction - cinematic BG object $CF63 (Samus blinking) ;;;
PreInstruction_CinematicBGObject_SamusBlinking:
; Switches Samus blinking pattern on page 6 to deadpan stare
    LDA.W CinematicFunction                                              ;8BB4BC;
    CMP.W #CinematicFunction_Intro_Page6                                 ;8BB4BF;
    BEQ .notPage6                                                        ;8BB4C2;
    CMP.W #RTS_8BA390                                                    ;8BB4C4;
    BNE .return                                                          ;8BB4C7;

  .notPage6:
    LDA.W #CinematicBGObjectInstLists_SamusBlinkingPage6                 ;8BB4C9;
    STA.W CinematicBGObject_InstListPointers,X                           ;8BB4CC;
    LDA.W #$0001                                                         ;8BB4CF;
    STA.W CinematicBGObject_InstructionTimers,X                          ;8BB4D2;
    LDA.W #RTS_8B93D9                                                    ;8BB4D5;
    STA.W CinematicBGObject_PreInstructions,X                            ;8BB4D8;

  .return:
    RTS                                                                  ;8BB4DB;


if !FEATURE_KEEP_UNREFERENCED
;;; $B4DC: Unused ;;;
UNUSED_CinematicBGObject_8BB4DC:
;; Parameters:
;;     X: Cinematic BG object index
    LDA.W CinematicSpriteObject_InstListPointers+$1E                     ;8BB4DC;
    CMP.W #InstList_IntroTextCaret_Blink                                 ;8BB4DF;
    BMI .return                                                          ;8BB4E2;
    LDA.W #$0001                                                         ;8BB4E4;
    STA.W CinematicBGObject_InstructionTimers,X                          ;8BB4E7;

  .return:
    RTS                                                                  ;8BB4EA;
endif


if !PAL == 0 ; moved to later
incsrc "bank_8B_a.asm"
endif


;;; $B710: RTS. Unused background flickering effect ;;;
RTS_BackgroundFLickeringEffect:
    RTS                                                                  ;8BB710;

    LDA.W NMI_FrameCounter                                               ;8BB711;
    BIT.W #$0001                                                         ;8BB714;
    BEQ .enableBG2                                                       ;8BB717;
    SEP #$20                                                             ;8BB719;
    LDA.B DP_MainScreenLayers                                            ;8BB71B;
    AND.B #$FD                                                           ;8BB71D;
    STA.B DP_MainScreenLayers                                            ;8BB71F;
    REP #$20                                                             ;8BB721;
    RTS                                                                  ;8BB723;

  .enableBG2:
    SEP #$20                                                             ;8BB724;
    LDA.B DP_MainScreenLayers                                            ;8BB726;
    ORA.B #$02                                                           ;8BB728;
    STA.B DP_MainScreenLayers                                            ;8BB72A;
    REP #$20                                                             ;8BB72C;
    RTS                                                                  ;8BB72E;


;;; $B72F: Cinematic function - intro - finish ;;;
CinematicFunction_Intro_Finish:
    JSL.L HandleFadingOut                                                ;8BB72F;
    SEP #$20                                                             ;8BB733;
    LDA.B DP_Brightness                                                  ;8BB735;
    CMP.B #$80                                                           ;8BB737;
    BNE .return                                                          ;8BB739;
    JSL.L EnableNMI                                                      ;8BB73B;
    REP #$20                                                             ;8BB73F;
    STZ.W ScreenFadeDelay                                                ;8BB741;
    STZ.W ScreenFadeCounter                                              ;8BB744;
    STZ.B DP_BG2XScroll                                                  ;8BB747;
    STZ.B DP_BG3XScroll                                                  ;8BB749;
    STZ.B DP_BG2YScroll                                                  ;8BB74B;
    STZ.B DP_BG3YScroll                                                  ;8BB74D;
    STZ.W Mode7TransformationAngle                                       ;8BB74F;
    LDA.W #MessageBoxIndex                                               ;8BB752;
    DEC                                                                  ;8BB755;
    DEC                                                                  ;8BB756;
    SEC                                                                  ;8BB757;
    SBC.W #Mode7TransformationAngle                                      ;8BB758;
    TAX                                                                  ;8BB75B;

  .loop:
    STZ.W Mode7TransformationAngle,X                                     ;8BB75C;
    DEX                                                                  ;8BB75F;
    DEX                                                                  ;8BB760;
    BPL .loop                                                            ;8BB761;
    LDA.W #CinematicFunction_FlyToCeres_Initial                          ;8BB763;
    STA.W CinematicFunction                                              ;8BB766;
    JSR.W Recover_Previous_Button_Assignments                            ;8BB769;
    STZ.W MaxMissiles                                                    ;8BB76C;
    STZ.W Missiles                                                       ;8BB76F;

  .return:
    RTS                                                                  ;8BB772;


;;; $B773: Initialisation function - cinematic sprite object $CE55 (intro Mother Brain) ;;;
InitFunction_CinematicSpriteObject_IntroMotherBrain:
    LDA.W #$0038                                                         ;8BB773;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BB776;
    LDA.W #$006F                                                         ;8BB779;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BB77C;
    LDA.W #$0E00                                                         ;8BB77F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BB782;
    RTS                                                                  ;8BB785;


;;; $B786: Pre-instruction - cinematic sprite object $CE55 (intro Mother Brain) ;;;
PreInstruction_CinematicSpriteObject_IntroMotherBrain:
    JSR.W IntroMotherBrain_HurtFlashHandling                             ;8BB786;
    LDY.W #$0008                                                         ;8BB789;

  .loop:
    LDA.W SamusProjectile_Types,Y                                        ;8BB78C;
    AND.W #$0FFF                                                         ;8BB78F;
    CMP.W #$0100                                                         ;8BB792;
    BEQ .missile                                                         ;8BB795;
    DEY                                                                  ;8BB797;
    DEY                                                                  ;8BB798;
    BPL .loop                                                            ;8BB799;
    RTS                                                                  ;8BB79B;

  .missile:
    LDA.W SamusProjectile_XPositions,Y                                   ;8BB79C;
    CMP.W #$0054                                                         ;8BB79F;
    BPL .return                                                          ;8BB7A2;
    PHX                                                                  ;8BB7A4;
    TYX                                                                  ;8BB7A5;
    JSL.L Kill_Projectile                                                ;8BB7A6;
    PLX                                                                  ;8BB7AA;
    LDA.W #$0008                                                         ;8BB7AB;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BB7AE;
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BB7B1;
    INC                                                                  ;8BB7B4;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BB7B5;
    CMP.W #$0004                                                         ;8BB7B8;
    BNE .return                                                          ;8BB7BB;
    STZ.W CinematicSpriteObject_Timers,X                                 ;8BB7BD;
    LDA.W #PreInstruction_IntroMotherBrain_Exploding                     ;8BB7C0;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BB7C3;
    LDA.W #$0000                                                         ;8BB7C6;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Small     ;8BB7C9;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7CC;
    LDA.W #$0001                                                         ;8BB7CF;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Small     ;8BB7D2;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7D5;
    LDA.W #$0002                                                         ;8BB7D8;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Small     ;8BB7DB;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7DE;
    LDA.W #$0000                                                         ;8BB7E1;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big       ;8BB7E4;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7E7;
    LDA.W #$0001                                                         ;8BB7EA;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big       ;8BB7ED;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7F0;
    LDA.W #$0002                                                         ;8BB7F3;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big       ;8BB7F6;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB7F9;
    LDA.W #$0003                                                         ;8BB7FC;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big       ;8BB7FF;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB802;
    LDA.W #$0004                                                         ;8BB805;
    LDY.W #CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big       ;8BB808;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BB80B;

  .return:
    RTS                                                                  ;8BB80E;


;;; $B80F: Pre-instruction - intro Mother Brain - exploding ;;;
PreInstruction_IntroMotherBrain_Exploding:
    JSR.W IntroMotherBrain_HurtFlashHandling                             ;8BB80F;
    JSR.W IntroMotherBrain_ScreenShaking                                 ;8BB812;
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BB815;
    INC                                                                  ;8BB818;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BB819;
    CMP.W #$0080                                                         ;8BB81C;
    BMI .return                                                          ;8BB81F;
    LDA.W #$0001                                                         ;8BB821;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BB824;
    LDA.W #InstList_IntroMotherBrain_StartPage2_0                        ;8BB827;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BB82A;

  .return:
    RTS                                                                  ;8BB82D;


;;; $B82E: Pre-instruction - intro Mother Brain - cross-fading ;;;
PreInstruction_IntroMotherBrain_CrossFading:
    JSR.W IntroMotherBrain_ScreenShaking                                 ;8BB82E;
    LDA.W IntroCrossFadeTimer                                            ;8BB831;
    BNE .return                                                          ;8BB834;
    LDA.W #$0001                                                         ;8BB836;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BB839;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BB83C;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BB83F;
    STZ.W IntroSamusDisplayFlag                                          ;8BB842;

  .return:
    RTS                                                                  ;8BB845;


;;; $B846: Intro Mother Brain hurt flash handling ;;;
IntroMotherBrain_HurtFlashHandling:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BB846;
    BEQ .return                                                          ;8BB849;
    BIT.W #$0001                                                         ;8BB84B;
    BNE +                                                                ;8BB84E;
    PHX                                                                  ;8BB850;
    LDX.W #$001E                                                         ;8BB851;
    LDA.W #$7FFF                                                         ;8BB854;

  .loopWhitePalette:
    STA.L Palettes_SpriteP7,X                                            ;8BB857;
    DEX                                                                  ;8BB85B;
    DEX                                                                  ;8BB85C;
    BPL .loopWhitePalette                                                ;8BB85D;
    PLX                                                                  ;8BB85F;
    BRA .decFlashTimer                                                   ;8BB860;

+   PHX                                                                  ;8BB862;
    LDX.W #$001E                                                         ;8BB863;

  .loopPalette:
    LDA.L Palettes_Intro_MotherBrain,X                                   ;8BB866;
    STA.L Palettes_SpriteP7,X                                            ;8BB86A;
    DEX                                                                  ;8BB86E;
    DEX                                                                  ;8BB86F;
    BPL .loopPalette                                                     ;8BB870;
    PLX                                                                  ;8BB872;

  .decFlashTimer:
    DEC.W CinematicSpriteObject_XSubPosition,X                           ;8BB873;

  .return:
    RTS                                                                  ;8BB876;


;;; $B877: Intro Mother Brain screen shaking ;;;
IntroMotherBrain_ScreenShaking:
    LDA.W CinematicFrameCounter                                          ;8BB877;
    BIT.W #$0001                                                         ;8BB87A;
    BNE .subtract4                                                       ;8BB87D;
    LDA.W CinematicBG1_YPosition                                         ;8BB87F;
    CLC                                                                  ;8BB882;
    ADC.W #$0004                                                         ;8BB883;
    STA.W CinematicBG1_YPosition                                         ;8BB886;
    BRA .return                                                          ;8BB889;

  .subtract4:
    LDA.W CinematicBG1_YPosition                                         ;8BB88B;
    SEC                                                                  ;8BB88E;
    SBC.W #$0004                                                         ;8BB88F;
    STA.W CinematicBG1_YPosition                                         ;8BB892;

  .return:
    RTS                                                                  ;8BB895;


;;; $B896: Initialisation function - cinematic sprite object $CF21 (intro rinka) ;;;
InitFunction_CinematicSpriteObject_IntroRinka:
    LDA.W CinematicSpriteObject_InitParam                                ;8BB896;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BB899;
    ASL                                                                  ;8BB89C;
    TAX                                                                  ;8BB89D;
    LDA.W .Xposition,X                                                   ;8BB89E;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BB8A1;
    LDA.W .Yposition,X                                                   ;8BB8A4;
    SEC                                                                  ;8BB8A7;
    SBC.W #$0008                                                         ;8BB8A8;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BB8AB;
    LDA.W #$0E00                                                         ;8BB8AE;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BB8B1;
    RTS                                                                  ;8BB8B4;

  .Xposition:
    dw $0070,$00C0,$0080,$00E8                                           ;8BB8B5;

  .Yposition:
    dw $0050,$0040,$0038,$0058                                           ;8BB8BD;


;;; $B8C5: Instruction - start moving (intro rinka) ;;;
Instruction_StartMoving_IntroRinka:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BB8C5;
    BNE .missesSamus                                                     ;8BB8C8;
    LDA.W #PreInstruction_IntroRinka_Moving_HitsSamus                    ;8BB8CA;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BB8CD;
    RTS                                                                  ;8BB8D0;

  .missesSamus:
    LDA.W #PreInstruction_IntroRinka_Moving_MissesSamus                  ;8BB8D1;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BB8D4;
    RTS                                                                  ;8BB8D7;


;;; $B8D8: Pre-instruction - intro rinka - moving - hits Samus ;;;
PreInstruction_IntroRinka_Moving_HitsSamus:
; Cinematic sprite object 0 here is intro Mother Brain
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BB8D8;
    CLC                                                                  ;8BB8DB;
    ADC.W #$8000                                                         ;8BB8DC;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BB8DF;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BB8E2;
    ADC.W #$0000                                                         ;8BB8E5;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BB8E8;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BB8EB;
    CLC                                                                  ;8BB8EE;
    ADC.W #$8000                                                         ;8BB8EF;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BB8F2;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BB8F5;
    ADC.W #$0000                                                         ;8BB8F8;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BB8FB;
    LDA.W SamusXPosition                                                 ;8BB8FE;
    SEC                                                                  ;8BB901;
    SBC.W #$0005                                                         ;8BB902;
    STA.B DP_Temp12                                                      ;8BB905;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BB907;
    CLC                                                                  ;8BB90A;
    ADC.W #$0008                                                         ;8BB90B;
    CMP.B DP_Temp12                                                      ;8BB90E;
    BMI .exploding                                                       ;8BB910;
    LDA.W #$000B                                                         ;8BB912;
    STA.W SamusInvincibilityTimer                                        ;8BB915;
    LDA.W #$000B                                                         ;8BB918;
    STA.W SamusKnockbackTimer                                            ;8BB91B;
    LDA.W #$0001                                                         ;8BB91E;
    STA.W KnockbackXDirection                                            ;8BB921;
    BRA .delete                                                          ;8BB924;

  .exploding:
    LDA.W CinematicSpriteObject_PreInstructions                          ;8BB926;
    CMP.W #PreInstruction_IntroMotherBrain_Exploding                     ;8BB929;
    BNE .return                                                          ;8BB92C;

  .delete:
    LDA.W #$0001                                                         ;8BB92E;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BB931;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BB934;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BB937;

  .return:
    RTS                                                                  ;8BB93A;


;;; $B93B: Pre-instruction - intro rinka - moving - misses Samus ;;;
PreInstruction_IntroRinka_Moving_MissesSamus:
; Cinematic sprite object 0 here is intro Mother Brain
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BB93B;
    ASL                                                                  ;8BB93E;
    TAY                                                                  ;8BB93F;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BB940;
    CLC                                                                  ;8BB943;
    ADC.W #$8000                                                         ;8BB944;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BB947;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BB94A;
    ADC.W .Xvelocities,Y                                                 ;8BB94D;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BB950;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BB953;
    CLC                                                                  ;8BB956;
    ADC.W #$8000                                                         ;8BB957;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BB95A;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BB95D;
    ADC.W #$0000                                                         ;8BB960;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BB963;
    CMP.W #$0010                                                         ;8BB966;
    BMI .delete                                                          ;8BB969;
    CMP.W #$00D0                                                         ;8BB96B;
    BPL .delete                                                          ;8BB96E;
    LDA.W CinematicSpriteObject_PreInstructions                          ;8BB970;
    CMP.W #PreInstruction_IntroMotherBrain_Exploding                     ;8BB973;
    BNE .return                                                          ;8BB976;

  .delete:
    LDA.W #$0001                                                         ;8BB978;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BB97B;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BB97E;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BB981;

  .return:
    RTS                                                                  ;8BB984;

  .Xvelocities:
; X velocities - 0.8000h
    dw $0000,$FFFF,$0000,$FFFF                                           ;8BB985;


;;; $B98D: Initialisation function - cinematic sprite object $CF15 (intro Mother Brain explosion - big) ;;;
InitFunc_CinematicSpriteObject_IntroMotherBrainExplosion_Big:
    LDA.W CinematicSpriteObject_InitParam                                ;8BB98D;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BB990;
    ASL                                                                  ;8BB993;
    TAX                                                                  ;8BB994;
    LDA.W #$0038                                                         ;8BB995;
    CLC                                                                  ;8BB998;
    ADC.W .Xposition,X                                                   ;8BB999;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BB99C;
    LDA.W #$006F                                                         ;8BB99F;
    CLC                                                                  ;8BB9A2;
    ADC.W .Yposition,X                                                   ;8BB9A3;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BB9A6;
    LDA.W .instructionTimer,X                                            ;8BB9A9;
    STA.W CinematicSpriteObject_InstructionTimers,Y                      ;8BB9AC;
    LDA.W #$0A00                                                         ;8BB9AF;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BB9B2;
    RTS                                                                  ;8BB9B5;

  .Xposition:
    dw $0000,$0010,$FFF0,$FFF8,$0008                                     ;8BB9B6;

  .Yposition:
    dw $0000,$FFF0,$0008,$FFF0,$0008                                     ;8BB9C0;

  .instructionTimer:
    dw $0001,$0010,$0020,$0030,$0040                                     ;8BB9CA;


;;; $B9D4: Initialisation function - cinematic sprite object $CF1B (intro Mother Brain explosion - small) ;;;
InitFunc_CineSpriteObject_IntroMotherBrainExplosion_Small:
    LDA.W CinematicSpriteObject_InitParam                                ;8BB9D4;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BB9D7;
    ASL                                                                  ;8BB9DA;
    TAX                                                                  ;8BB9DB;
    LDA.W #$0038                                                         ;8BB9DC;
    CLC                                                                  ;8BB9DF;
    ADC.W .Xposition,X                                                   ;8BB9E0;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BB9E3;
    LDA.W #$006F                                                         ;8BB9E6;
    CLC                                                                  ;8BB9E9;
    ADC.W .Yposition,X                                                   ;8BB9EA;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BB9ED;
    LDA.W .instructionTimer,X                                            ;8BB9F0;
    STA.W CinematicSpriteObject_InstructionTimers,Y                      ;8BB9F3;
    LDA.W #$0A00                                                         ;8BB9F6;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BB9F9;
    RTS                                                                  ;8BB9FC;

  .Xposition:
    dw $0010,$FFF0,$FFF0                                                 ;8BB9FD;

  .Yposition:
    dw $0000,$0004,$FFF8                                                 ;8BBA03;

  .instructionTimer:
    dw $0001,$0008,$0010                                                 ;8BBA09;


;;; $BA0F: Pre-instruction - cinematic sprite object $CF15/$CF1B (intro Mother Brain explosion) ;;;
PreInst_CinematicSpriteObject_IntroMotherBrainExplosion:
    LDA.W IntroCrossFadeTimer                                            ;8BBA0F;
    BNE .return                                                          ;8BBA12;
    LDA.W #$0001                                                         ;8BBA14;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BBA17;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BBA1A;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BBA1D;

  .return:
    RTS                                                                  ;8BBA20;


;;; $BA21: Instruction - spawn intro rinkas 0/1 ;;;
Instruction_Spawn_IntroRinkas_0_1:
    PHY                                                                  ;8BBA21;
    LDA.W #$0000                                                         ;8BBA22;
    LDY.W #CinematicSpriteObjectDefinitions_IntroRinka                   ;8BBA25;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA28;
    LDA.W #$0001                                                         ;8BBA2B;
    LDY.W #CinematicSpriteObjectDefinitions_IntroRinka                   ;8BBA2E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA31;
    PLY                                                                  ;8BBA34;
    RTS                                                                  ;8BBA35;


;;; $BA36: Instruction - spawn intro rinkas 2/3 ;;;
Instruction_Spawn_IntroRinkas_2_3:
    PHY                                                                  ;8BBA36;
    LDA.W #$0002                                                         ;8BBA37;
    LDY.W #CinematicSpriteObjectDefinitions_IntroRinka                   ;8BBA3A;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA3D;
    LDA.W #$0003                                                         ;8BBA40;
    LDY.W #CinematicSpriteObjectDefinitions_IntroRinka                   ;8BBA43;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA46;
    PLY                                                                  ;8BBA49;
    RTS                                                                  ;8BBA4A;


;;; $BA4B: Initialisation function - cinematic sprite object $CE79 (confused baby metroid) ;;;
InitFunction_CinematicSpriteObject_ConfusedBabyMetroid:
    LDA.W #$0070                                                         ;8BBA4B;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBA4E;
    LDA.W #$009B                                                         ;8BBA51;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBA54;
    LDA.W #$0E00                                                         ;8BBA57;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBA5A;
    RTS                                                                  ;8BBA5D;


;;; $BA5E: Pre-instruction - cinematic sprite object $CE79 (confused baby metroid) ;;;
PreInstruction_CinematicSpriteObject_ConfusedBabyMetroid:
; Cinematic sprite object ([X] + 1) here is metroid egg
    LDA.W CinematicSpriteObject_InstListPointers+2,X                     ;8BBA5E;
    CMP.W #InstList_MetroidEggHatching_2                                 ;8BBA61;
    BMI .return                                                          ;8BBA64;
    LDA.W #PreInstruction_ConfusedBabyMetroid_Hatched                    ;8BBA66;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BBA69;
    STZ.W neverRead1A4D                                                  ;8BBA6C;
    STZ.W IntroBabyMetroidYVelocity                                      ;8BBA6F;

  .return:
    RTS                                                                  ;8BBA72;


;;; $BA73: Pre-instruction - confused baby metroid - hatched ;;;
PreInstruction_ConfusedBabyMetroid_Hatched:
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BBA73;
    CMP.W #$0091                                                         ;8BBA76;
    BNE +                                                                ;8BBA79;
    LDA.W #$0000                                                         ;8BBA7B;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggSlimeDrops         ;8BBA7E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA81;
    LDA.W #$0001                                                         ;8BBA84;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggSlimeDrops         ;8BBA87;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA8A;
    LDA.W #$0002                                                         ;8BBA8D;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggSlimeDrops         ;8BBA90;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA93;
    LDA.W #$0003                                                         ;8BBA96;
    LDY.W #CinematicSpriteObjectDefinitions_MetroidEggSlimeDrops         ;8BBA99;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBA9C;
    LDA.W #$0023                                                         ;8BBA9F;
    JSL.L QueueSound_Lib3_Max6                                           ;8BBAA2;

+   LDA.W SamusYPosition                                                 ;8BBAA6;
    SEC                                                                  ;8BBAA9;
    SBC.W #$0020                                                         ;8BBAAA;
    CMP.W CinematicSpriteObject_YPositions,X                             ;8BBAAD;
    BMI +                                                                ;8BBAB0;
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBAB2;
    CMP.W #$0220                                                         ;8BBAB5;
    BPL .setYVelocity                                                    ;8BBAB8;
    CLC                                                                  ;8BBABA;
    ADC.W #$0020                                                         ;8BBABB;
    STA.W IntroBabyMetroidYVelocity                                      ;8BBABE;
    BRA .setYVelocity                                                    ;8BBAC1;

+   LDA.W IntroBabyMetroidYVelocity                                      ;8BBAC3;
    CMP.W #$FDE1                                                         ;8BBAC6;
    BMI .setYVelocity                                                    ;8BBAC9;
    SEC                                                                  ;8BBACB;
    SBC.W #$0020                                                         ;8BBACC;
    STA.W IntroBabyMetroidYVelocity                                      ;8BBACF;

  .setYVelocity:
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBAD2;
    XBA                                                                  ;8BBAD5;
    PHA                                                                  ;8BBAD6;
    AND.W #$FF00                                                         ;8BBAD7;
    STA.B DP_Temp14                                                      ;8BBADA;
    PLA                                                                  ;8BBADC;
    AND.W #$00FF                                                         ;8BBADD;
    BIT.W #$0080                                                         ;8BBAE0;
    BEQ +                                                                ;8BBAE3;
    ORA.W #$FF00                                                         ;8BBAE5;

+   STA.B DP_Temp12                                                      ;8BBAE8;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BBAEA;
    CLC                                                                  ;8BBAED;
    ADC.B DP_Temp14                                                      ;8BBAEE;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BBAF0;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BBAF3;
    ADC.B DP_Temp12                                                      ;8BBAF6;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BBAF8;
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBAFB;
    BMI .return                                                          ;8BBAFE;
    LDA.W #$0080                                                         ;8BBB00;
    STA.W IntroBabyMetroidIdleTimer                                      ;8BBB03;
    LDA.W #PreInstruction_ConfusedBabyMetroid_Idling                     ;8BBB06;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BBB09;

  .return:
    RTS                                                                  ;8BBB0C;


;;; $BB0D: Pre-instruction - confused baby metroid - idling ;;;
PreInstruction_ConfusedBabyMetroid_Idling:
    DEC.W IntroBabyMetroidIdleTimer                                      ;8BBB0D;
    BEQ .timerExpired                                                    ;8BBB10;
    BPL .return                                                          ;8BBB12;

  .timerExpired:
    LDA.W #PreInstruction_ConfusedBabyMetroid_Dancing                    ;8BBB14;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BBB17;
    STZ.W IntroBabyMetroidIdleTimer                                      ;8BBB1A;
    STZ.W IntroBabyMetroidYVelocity                                      ;8BBB1D;
    STZ.W CinematicSpriteObject_Timers,X                                 ;8BBB20;

  .return:
    RTS                                                                  ;8BBB23;


;;; $BB24: Pre-instruction - confused baby metroid - dancing ;;;
PreInstruction_ConfusedBabyMetroid_Dancing:
    LDA.W IntroCrossFadeTimer                                            ;8BBB24;
    BNE .timerExpired                                                    ;8BBB27;
    LDA.W #$0001                                                         ;8BBB29;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BBB2C;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BBB2F;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BBB32;
    STZ.W IntroSamusDisplayFlag                                          ;8BBB35;
    RTS                                                                  ;8BBB38;

  .timerExpired:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BBB39;
    CMP.W #$0080                                                         ;8BBB3C;
    BPL +                                                                ;8BBB3F;
    INC                                                                  ;8BBB41;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BBB42;
    BIT.W #$003F                                                         ;8BBB45;
    BNE +                                                                ;8BBB48;
    LDA.W #$0023                                                         ;8BBB4A;
    JSL.L QueueSound_Lib3_Max6                                           ;8BBB4D;

+   LDA.W SamusXPosition                                                 ;8BBB51;
    CMP.W CinematicSpriteObject_XPositions,X                             ;8BBB54;
    BMI .checkXposition                                                  ;8BBB57;
    LDA.W IntroBabyMetroidXVelocity                                      ;8BBB59;
    CMP.W #$0280                                                         ;8BBB5C;
    BPL +                                                                ;8BBB5F;
    CLC                                                                  ;8BBB61;
    ADC.W #$0020                                                         ;8BBB62;
    STA.W IntroBabyMetroidXVelocity                                      ;8BBB65;
    BRA +                                                                ;8BBB68;

  .checkXposition:
    LDA.W IntroBabyMetroidXVelocity                                      ;8BBB6A;
    CMP.W #$FD81                                                         ;8BBB6D;
    BMI +                                                                ;8BBB70;
    SEC                                                                  ;8BBB72;
    SBC.W #$0020                                                         ;8BBB73;
    STA.W IntroBabyMetroidXVelocity                                      ;8BBB76;

+   LDA.W IntroBabyMetroidXVelocity                                      ;8BBB79;
    XBA                                                                  ;8BBB7C;
    PHA                                                                  ;8BBB7D;
    AND.W #$FF00                                                         ;8BBB7E;
    STA.B DP_Temp14                                                      ;8BBB81;
    PLA                                                                  ;8BBB83;
    AND.W #$00FF                                                         ;8BBB84;
    BIT.W #$0080                                                         ;8BBB87;
    BEQ +                                                                ;8BBB8A;
    ORA.W #$FF00                                                         ;8BBB8C;

+   STA.B DP_Temp12                                                      ;8BBB8F;
    BPL .positive                                                        ;8BBB91;
    LDA.W #$0001                                                         ;8BBB93;
    STA.W IntroSamusDisplayFlag                                          ;8BBB96;
    BRA .setXposition                                                    ;8BBB99;

  .positive:
    LDA.W #$FFFF                                                         ;8BBB9B;
    STA.W IntroSamusDisplayFlag                                          ;8BBB9E;

  .setXposition:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBBA1;
    CLC                                                                  ;8BBBA4;
    ADC.B DP_Temp14                                                      ;8BBBA5;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBBA7;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBBAA;
    ADC.B DP_Temp12                                                      ;8BBBAD;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBBAF;
    LDA.W SamusYPosition                                                 ;8BBBB2;
    SEC                                                                  ;8BBBB5;
    SBC.W #$0008                                                         ;8BBBB6;
    CMP.W CinematicSpriteObject_YPositions,X                             ;8BBBB9;
    BMI .checkY                                                          ;8BBBBC;
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBBBE;
    CMP.W #$0220                                                         ;8BBBC1;
    BPL .setYvelocity                                                    ;8BBBC4;
    CLC                                                                  ;8BBBC6;
    ADC.W #$0020                                                         ;8BBBC7;
    STA.W IntroBabyMetroidYVelocity                                      ;8BBBCA;
    BRA .setYvelocity                                                    ;8BBBCD;

  .checkY:
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBBCF;
    CMP.W #$FDE1                                                         ;8BBBD2;
    BMI .setYvelocity                                                    ;8BBBD5;
    SEC                                                                  ;8BBBD7;
    SBC.W #$0020                                                         ;8BBBD8;
    STA.W IntroBabyMetroidYVelocity                                      ;8BBBDB;

  .setYvelocity:
    LDA.W IntroBabyMetroidYVelocity                                      ;8BBBDE;
    XBA                                                                  ;8BBBE1;
    PHA                                                                  ;8BBBE2;
    AND.W #$FF00                                                         ;8BBBE3;
    STA.B DP_Temp14                                                      ;8BBBE6;
    PLA                                                                  ;8BBBE8;
    AND.W #$00FF                                                         ;8BBBE9;
    BIT.W #$0080                                                         ;8BBBEC;
    BEQ .setYposition                                                    ;8BBBEF;
    ORA.W #$FF00                                                         ;8BBBF1;

  .setYposition:
    STA.B DP_Temp12                                                      ;8BBBF4;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BBBF6;
    CLC                                                                  ;8BBBF9;
    ADC.B DP_Temp14                                                      ;8BBBFA;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BBBFC;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BBBFF;
    ADC.B DP_Temp12                                                      ;8BBC02;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BBC04;
    RTS                                                                  ;8BBC07;


;;; $BC08: Reset button assignments to default ;;;
Reset_Button_Assignments_to_Default:
    LDA.W #$0800                                                         ;8BBC08;
    STA.W UpBinding                                                      ;8BBC0B;
    LDA.W #$0400                                                         ;8BBC0E;
    STA.W DownBinding                                                    ;8BBC11;
    LDA.W #$0200                                                         ;8BBC14;
    STA.W LeftBinding                                                    ;8BBC17;
    LDA.W #$0100                                                         ;8BBC1A;
    STA.W RightBinding                                                   ;8BBC1D;
    LDA.W ShotBinding                                                    ;8BBC20;
    STA.W BackupControllerBindingsDemo                                   ;8BBC23;
    LDA.W JumpBinding                                                    ;8BBC26;
    STA.W BackupControllerBindingsDemo+2                                 ;8BBC29;
    LDA.W DashBinding                                                    ;8BBC2C;
    STA.W BackupControllerBindingsDemo+4                                 ;8BBC2F;
    LDA.W ItemCancelBinding                                              ;8BBC32;
    STA.W BackupControllerBindingsDemo+6                                 ;8BBC35;
    LDA.W ItemSelectBinding                                              ;8BBC38;
    STA.W BackupControllerBindingsDemo+8                                 ;8BBC3B;
    LDA.W AimDownBinding                                                 ;8BBC3E;
    STA.W BackupControllerBindingsDemo+$A                                ;8BBC41;
    LDA.W AimUpBinding                                                   ;8BBC44;
    STA.W BackupControllerBindingsDemo+$C                                ;8BBC47;
    LDA.W #$0040                                                         ;8BBC4A;
    STA.W ShotBinding                                                    ;8BBC4D;
    LDA.W #$0080                                                         ;8BBC50;
    STA.W JumpBinding                                                    ;8BBC53;
    LDA.W #$8000                                                         ;8BBC56;
    STA.W DashBinding                                                    ;8BBC59;
    LDA.W #$4000                                                         ;8BBC5C;
    STA.W ItemCancelBinding                                              ;8BBC5F;
    LDA.W #$2000                                                         ;8BBC62;
    STA.W ItemSelectBinding                                              ;8BBC65;
    LDA.W #$0020                                                         ;8BBC68;
    STA.W AimDownBinding                                                 ;8BBC6B;
    LDA.W #$0010                                                         ;8BBC6E;
    STA.W AimUpBinding                                                   ;8BBC71;
    RTS                                                                  ;8BBC74;


;;; $BC75: Recover previous button assignments ;;;
Recover_Previous_Button_Assignments:
    LDA.W BackupControllerBindingsDemo                                   ;8BBC75;
    STA.W ShotBinding                                                    ;8BBC78;
    LDA.W BackupControllerBindingsDemo+2                                 ;8BBC7B;
    STA.W JumpBinding                                                    ;8BBC7E;
    LDA.W BackupControllerBindingsDemo+4                                 ;8BBC81;
    STA.W DashBinding                                                    ;8BBC84;
    LDA.W BackupControllerBindingsDemo+6                                 ;8BBC87;
    STA.W ItemCancelBinding                                              ;8BBC8A;
    LDA.W BackupControllerBindingsDemo+8                                 ;8BBC8D;
    STA.W ItemSelectBinding                                              ;8BBC90;
    LDA.W BackupControllerBindingsDemo+$A                                ;8BBC93;
    STA.W AimDownBinding                                                 ;8BBC96;
    LDA.W BackupControllerBindingsDemo+$C                                ;8BBC99;
    STA.W AimUpBinding                                                   ;8BBC9C;
    RTS                                                                  ;8BBC9F;


if !PAL != 0 ; moved from earlier
incsrc "bank_8B_a.asm"
endif


;;; $BCA0: Cinematic function - fly to Ceres - initial ;;;
CinematicFunction_FlyToCeres_Initial:
    JSR.W Setup_PPU_CeresCutscene                                        ;8BBCA0;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BBCA3;
    STZ.B DP_IRQCmd                                                      ;8BBCA6;
    STZ.B DP_NextIRQCmd                                                  ;8BBCA8;
    LDX.W #$0000                                                         ;8BBCAA;

  .loopPalettes:
    LDA.L Palettes_SpaceGunshipCeres,X                                   ;8BBCAD;
    STA.L Palettes,X                                                     ;8BBCB1;
    INX                                                                  ;8BBCB5;
    INX                                                                  ;8BBCB6;
    CPX.W #$0200                                                         ;8BBCB7;
    BMI .loopPalettes                                                    ;8BBCBA;
    LDA.W #Tiles_Gunship_Ceres_Mode7>>8&$FF00                            ;8BBCBC;
    STA.B DP_DecompSrc+1                                                 ;8BBCBF;
    LDA.W #Tiles_Gunship_Ceres_Mode7                                     ;8BBCC1;
    STA.B DP_DecompSrc                                                   ;8BBCC4;
    JSL.L Decompression_HardcodedDestination                             ;8BBCC6;
    dl CeresGunshipMode7Tiles                                            ;8BBCCA;
    LDA.W #Gunship_Ceres_Tilemap>>8&$FF00                                ;8BBCCD;
    STA.B DP_DecompSrc+1                                                 ;8BBCD0;
    LDA.W #Gunship_Ceres_Tilemap                                         ;8BBCD2;
    STA.B DP_DecompSrc                                                   ;8BBCD5;
    JSL.L Decompression_HardcodedDestination                             ;8BBCD7;
    dl CeresCutsceneTilemap_ShipFront                                    ;8BBCDB;
    LDA.W #Tiles_Space_Ceres>>8&$FF00                                    ;8BBCDE;
    STA.B DP_DecompSrc+1                                                 ;8BBCE1;
    LDA.W #Tiles_Space_Ceres                                             ;8BBCE3;
    STA.B DP_DecompSrc                                                   ;8BBCE6;
    JSL.L Decompression_HardcodedDestination                             ;8BBCE8;
    dl SpaceCeresTiles                                                   ;8BBCEC;
    SEP #$30                                                             ;8BBCEF;
    LDA.B #$00                                                           ;8BBCF1;
    STA.W $2116                                                          ;8BBCF3;
    LDA.B #$00                                                           ;8BBCF6;
    STA.W $2117                                                          ;8BBCF8;
    LDA.B #$80                                                           ;8BBCFB;
    STA.W $2115                                                          ;8BBCFD;
    JSL.L SetupHDMATransfer                                              ;8BBD00;
    db $01,$00,$19                                                       ;8BBD04;
    dl CeresGunshipMode7Tiles                                            ;8BBD07;
    dw $4000                                                             ;8BBD0A;
    LDA.B #$02                                                           ;8BBD0C;
    STA.W $420B                                                          ;8BBD0E;
    REP #$10                                                             ;8BBD11;
    STZ.W $2115                                                          ;8BBD13;
    STZ.W $2116                                                          ;8BBD16;
    STZ.W $2117                                                          ;8BBD19;
    LDX.W #$4000                                                         ;8BBD1C;
    LDA.B #$8C                                                           ;8BBD1F;

  .loop:
    STA.W $2118                                                          ;8BBD21;
    DEX                                                                  ;8BBD24;
    BNE .loop                                                            ;8BBD25;
    SEP #$10                                                             ;8BBD27;
    LDA.B #$00                                                           ;8BBD29;
    STA.W $2116                                                          ;8BBD2B;
    LDA.B #$00                                                           ;8BBD2E;
    STA.W $2117                                                          ;8BBD30;
    LDA.B #$00                                                           ;8BBD33;
    STA.W $2115                                                          ;8BBD35;
    JSL.L SetupHDMATransfer                                              ;8BBD38;
    db $01,$00,$18                                                       ;8BBD3C;
    dl CeresCutsceneTilemap_ShipFront                                    ;8BBD3F;
    dw $0300                                                             ;8BBD42;
    LDA.B #$02                                                           ;8BBD44;
    STA.W $420B                                                          ;8BBD46;
    LDA.B #$00                                                           ;8BBD49;
    STA.W $2116                                                          ;8BBD4B;
    LDA.B #$60                                                           ;8BBD4E;
    STA.W $2117                                                          ;8BBD50;
    LDA.B #$80                                                           ;8BBD53;
    STA.W $2115                                                          ;8BBD55;
    JSL.L SetupHDMATransfer                                              ;8BBD58;
    db $01,$01,$18                                                       ;8BBD5C;
    dl SpaceCeresTiles                                                   ;8BBD5F;
    dw $4000                                                             ;8BBD62;
    LDA.B #$02                                                           ;8BBD64;
    STA.W $420B                                                          ;8BBD66;
    REP #$30                                                             ;8BBD69;
    LDA.W #$0100                                                         ;8BBD6B;
    STA.W $211B                                                          ;8BBD6E;
    STA.B DP_Mode7TransMatrixA                                           ;8BBD71;
    STZ.W $211C                                                          ;8BBD73;
    STZ.B DP_Mode7TransMatrixB                                           ;8BBD76;
    STZ.W $211D                                                          ;8BBD78;
    STZ.B DP_Mode7TransMatrixC                                           ;8BBD7B;
    STA.W $211E                                                          ;8BBD7D;
    STA.B DP_Mode7TransMatrixD                                           ;8BBD80;
    LDA.W #$0038                                                         ;8BBD82;
    STA.W $211F                                                          ;8BBD85;
    STA.B DP_Mode7TransOriginX                                           ;8BBD88;
    LDA.W #$0018                                                         ;8BBD8A;
    STA.W $2120                                                          ;8BBD8D;
    STA.B DP_Mode7TransOriginY                                           ;8BBD90;
    LDA.W #$FFB8                                                         ;8BBD92;
    STA.W CinematicBG1_XPosition                                         ;8BBD95;
    LDA.W #$FF98                                                         ;8BBD98;
    STA.W CinematicBG1_YPosition                                         ;8BBD9B;
    LDA.W #$00E0                                                         ;8BBD9E;
    STA.W Mode7TransformationAngle                                       ;8BBDA1;
    LDA.W #$0200                                                         ;8BBDA4;
    STA.W Mode7TransformationZoomLevel                                   ;8BBDA7;
    JSL.L Clear_PaletteFXObjects                                         ;8BBDAA;
    JSL.L Enable_PaletteFXObjects                                        ;8BBDAE;
    LDA.W #$0000                                                         ;8BBDB2;
    JSL.L Clear_CinematicBGObjects_CinematicBGTilemap                    ;8BBDB5;
    LDA.W #$5C00                                                         ;8BBDB9;
    STA.W CinematicBGObject_VRAMAddr                                     ;8BBDBC;
    JSL.L EnableNMI                                                      ;8BBDBF;
    LDY.W #CinematicSpriteObjectDefinitions_CeresStars                   ;8BBDC3;
    LDA.W #$0000                                                         ;8BBDC6;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBDC9;
    LDA.W #CinematicFunction_FlyToCeres_WaitForMusicQueue_EnableDisplay  ;8BBDCC;
    STA.W CinematicFunction                                              ;8BBDCF;
    LDA.W #$FF2D                                                         ;8BBDD2;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BBDD5;
    LDA.W #$0005                                                         ;8BBDD9;
    LDY.W #$000E                                                         ;8BBDDC;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BBDDF;
    RTS                                                                  ;8BBDE3;


;;; $BDE4: Cinematic function - fly to Ceres - wait for music queue and enable display ;;;
CinematicFunction_FlyToCeres_WaitForMusicQueue_EnableDisplay:
    JSL.L CheckIfMusicIsQueued                                           ;8BBDE4;
    BCS .return                                                          ;8BBDE8;
    SEP #$20                                                             ;8BBDEA;
    LDA.B #$0F                                                           ;8BBDEC;
    STA.B DP_Brightness                                                  ;8BBDEE;
    REP #$20                                                             ;8BBDF0;
    LDA.W #CinematicFunction_FlyToCeres_FlyingIntoCamera                 ;8BBDF2;
    STA.W CinematicFunction                                              ;8BBDF5;

  .return:
    RTS                                                                  ;8BBDF8;


;;; $BDF9: Cinematic function - fly to Ceres - flying into camera ;;;
CinematicFunction_FlyToCeres_FlyingIntoCamera:
    LDA.W Mode7TransformationZoomLevel                                   ;8BBDF9;
    CMP.W #$0020                                                         ;8BBDFC;
    BMI .zoomLessThan20                                                  ;8BBDFF;
    SEC                                                                  ;8BBE01;
    SBC.W #$0010*!SPF                                                    ;8BBE02;
    STA.W Mode7TransformationZoomLevel                                   ;8BBE05;
    RTS                                                                  ;8BBE08;

  .zoomLessThan20:
    SEP #$20                                                             ;8BBE09;
    STZ.B DP_ColorMathA                                                  ;8BBE0B;
    LDA.B #$31                                                           ;8BBE0D;
    STA.B DP_ColorMathB                                                  ;8BBE0F;
    LDA.B #$3F                                                           ;8BBE11;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BBE13;
    LDA.B #$5F                                                           ;8BBE15;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BBE17;
    LDA.B #$9F                                                           ;8BBE19;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BBE1B;
    REP #$20                                                             ;8BBE1D;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BBE1F;
    LDX.W #.transferData                                                 ;8BBE22;
    JSL.L QueueMode7Transfers                                            ;8BBE25;
    LDA.W #$FFE0                                                         ;8BBE29;
    STA.W CinematicBG1_XPosition                                         ;8BBE2C;
    LDA.W #$FF80                                                         ;8BBE2F;
    STA.W CinematicBG1_YPosition                                         ;8BBE32;
    LDA.W #$0020                                                         ;8BBE35;
    STA.W Mode7TransformationAngle                                       ;8BBE38;
    LDY.W #CinematicSpriteObjectDefs_CeresExplosionLargeAsteroids        ;8BBE3B;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBE3E;
    LDY.W #CinematicSpriteObjectDefinitions_CeresUnderAttack             ;8BBE41;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBE44;
    LDY.W #CinematicSpriteObjectDefinitions_CeresSmallAsteroids          ;8BBE47;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBE4A;
    LDY.W #CinematicSpriteObjectDefinitions_CeresPurpleSpaceVortex       ;8BBE4D;
    LDA.W #$0001                                                         ;8BBE50;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBE53;
    LDY.W #CinematicSpriteObjectDefinitions_CeresStars                   ;8BBE56;
    LDA.W #$0001                                                         ;8BBE59;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BBE5C;
    LDA.W #CinematicFunction_FlyToCeres_FlyingIntoCeres                  ;8BBE5F;
    STA.W CinematicFunction                                              ;8BBE62;
    LDY.W #PaletteFXObjects_CutsceneGunshipEngineFlicker                 ;8BBE65;
    JSL.L Spawn_PaletteFXObject                                          ;8BBE68;
    LDY.W #PaletteFXObjects_CutsceneCeresNavigationLights_SpriteCeres    ;8BBE6C;
    JSL.L Spawn_PaletteFXObject                                          ;8BBE6F;
    RTS                                                                  ;8BBE73;

  .transferData:
; Mode 7 transfers data - back of gunship
    db $80                                                               ;8BBE74; Control. 80h = write to VRAM tilemap
    dl CeresCutsceneTilemap_ShipBack                                     ;8BBE75; Source address
    dw $0300,$0000                                                       ;8BBE78; Size, Destination address (VRAM)
    db $00, $00                                                          ;8BBE7C; VRAM address increment mode


;;; $BE7E: Initialisation function - cinematic sprite object $CF0F (Ceres stars) ;;;
InitFunction_CinematicSpriteObject_CeresStars:
    LDA.W CinematicSpriteObject_InitParam                                ;8BBE7E;
    BNE .nonZero                                                         ;8BBE81;
    LDA.W #regional($FC00, $FB80)                                        ;8BBE83;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BBE86;
    LDA.W #$0070                                                         ;8BBE89;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBE8C;
    LDA.W #$0057                                                         ;8BBE8F;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBE92;
    LDA.W #$0800                                                         ;8BBE95;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBE98;
    RTS                                                                  ;8BBE9B;

  .nonZero:
    LDA.W #PreInstruction_CinematicSpriteObject_CeresPurpleSpaceVortex   ;8BBE9C;
    STA.W CinematicSpriteObject_PreInstructions,Y                        ;8BBE9F;
    LDA.W #$FFE0                                                         ;8BBEA2;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBEA5;
    LDA.W #$0057                                                         ;8BBEA8;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBEAB;
    LDA.W #$0800                                                         ;8BBEAE;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBEB1;
    RTS                                                                  ;8BBEB4;


;;; $BEB5: Pre-instruction - cinematic sprite object $CF0F (Ceres stars) ;;;
PreInstruction_CinematicSpriteObject_CeresStars:
    LDA.W CinematicFunction                                              ;8BBEB5;
    CMP.W #CinematicFunction_FlyToCeres_FlyingIntoCamera                 ;8BBEB8;
    BEQ .flyingIntoCamera                                                ;8BBEBB;
    RTS                                                                  ;8BBEBD;

  .flyingIntoCamera:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BBEBE;
    CLC                                                                  ;8BBEC1;
    ADC.W #$0080*!SPF                                                    ;8BBEC2;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BBEC5;
    XBA                                                                  ;8BBEC8;
    PHA                                                                  ;8BBEC9;
    AND.W #$FF00                                                         ;8BBECA;
    STA.B DP_Temp14                                                      ;8BBECD;
    PLA                                                                  ;8BBECF;
    AND.W #$00FF                                                         ;8BBED0;
    BIT.W #$0080                                                         ;8BBED3;
    BEQ +                                                                ;8BBED6;
    ORA.W #$FF00                                                         ;8BBED8;

+   STA.B DP_Temp12                                                      ;8BBEDB;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BBEDD;
    CLC                                                                  ;8BBEE0;
    ADC.B DP_Temp14                                                      ;8BBEE1;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BBEE3;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BBEE6;
    ADC.B DP_Temp12                                                      ;8BBEE9;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BBEEB;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBEEE;
    CLC                                                                  ;8BBEF1;
    ADC.B DP_Temp14                                                      ;8BBEF2;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBEF4;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBEF7;
    ADC.B DP_Temp12                                                      ;8BBEFA;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBEFC;
    LDA.W CinematicBG1_XSubPosition                                      ;8BBEFF;
    CLC                                                                  ;8BBF02;
    ADC.B DP_Temp14                                                      ;8BBF03;
    STA.W CinematicBG1_XSubPosition                                      ;8BBF05;
    LDA.W CinematicBG1_XPosition                                         ;8BBF08;
    ADC.B DP_Temp12                                                      ;8BBF0B;
    STA.W CinematicBG1_XPosition                                         ;8BBF0D;
    LDA.W CinematicBG1_YSubPosition                                      ;8BBF10;
    CLC                                                                  ;8BBF13;
    ADC.B DP_Temp14                                                      ;8BBF14;
    STA.W CinematicBG1_YSubPosition                                      ;8BBF16;
    LDA.W CinematicBG1_YPosition                                         ;8BBF19;
    ADC.B DP_Temp12                                                      ;8BBF1C;
    STA.W CinematicBG1_YPosition                                         ;8BBF1E;
    RTS                                                                  ;8BBF21;


;;; $BF22: Initialisation function - cinematic sprite object $CF39 (Ceres explosion large asteroids) ;;;
InitFunc_CinematicSpriteObject_CeresExplosionLargeAsteroids:
    LDA.W #$0050                                                         ;8BBF22;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBF25;
    LDA.W #$009F                                                         ;8BBF28;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBF2B;
    LDA.W #$0800                                                         ;8BBF2E;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBF31;
    RTS                                                                  ;8BBF34;


;;; $BF35: Pre-instruction - cinematic sprite object $CF39 (Ceres explosion large asteroids) ;;;
PreInst_CinematicSpriteObject_CeresExplosionLargeAsteroids:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF35;
    CLC                                                                  ;8BBF38;
    ADC.W #$400*!SPF*$10                                                 ;8BBF39;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF3C;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBF3F;
    ADC.W #$0000                                                         ;8BBF42;
    AND.W #$01FF                                                         ;8BBF45;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBF48;
    RTS                                                                  ;8BBF4B;


;;; $BF4C: Initialisation function - cinematic sprite object $CE85 (Ceres under attack) ;;;
InitFunction_CinematicSpriteObject_CeresUnderAttack:
    LDA.W #$0074                                                         ;8BBF4C;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBF4F;
    LDA.W #$00A0                                                         ;8BBF52;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBF55;
    LDA.W #$0C00                                                         ;8BBF58;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBF5B;
    RTS                                                                  ;8BBF5E;


;;; $BF5F: Pre-instruction - cinematic sprite object $CE85 (Ceres under attack) ;;;
PreInstruction_CinematicSpriteObject_CeresUnderAttack:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF5F;
    CLC                                                                  ;8BBF62;
    ADC.W #$100*!SPF*$10                                                 ;8BBF63;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF66;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBF69;
    ADC.W #$0000                                                         ;8BBF6C;
    AND.W #$01FF                                                         ;8BBF6F;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBF72;
    RTS                                                                  ;8BBF75;


;;; $BF76: Initialisation function - cinematic sprite object $CE8B (Ceres small asteroids) ;;;
InitFunction_CinematicSpriteObject_CeresSmallAsteroid:
    LDA.W #$0080                                                         ;8BBF76;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBF79;
    LDA.W #$0060                                                         ;8BBF7C;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBF7F;
    LDA.W #$0800                                                         ;8BBF82;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBF85;
    RTS                                                                  ;8BBF88;


;;; $BF89: Pre-instruction - cinematic sprite object $CE8B (Ceres small asteroids) ;;;
PreInstruction_CinematicSpriteObject_CeresSmallAsteroid:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF89;
    CLC                                                                  ;8BBF8C;
    ADC.W #$80*!SPF*$10                                                  ;8BBF8D;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBF90;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBF93;
    ADC.W #$0000                                                         ;8BBF96;
    AND.W #$01FF                                                         ;8BBF99;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBF9C;
    RTS                                                                  ;8BBF9F;


;;; $BFA0: Initialisation function - cinematic sprite object $CE91 (Ceres purple space vortex) ;;;
InitFunction_CinematicSpriteObject_CeresPurpleSpaceVortex:
    LDA.W CinematicSpriteObject_InitParam                                ;8BBFA0;
    BNE .nonZero                                                         ;8BBFA3;
    LDA.W #$0070                                                         ;8BBFA5;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBFA8;
    LDA.W #RTS_8BBFD9                                                    ;8BBFAB;
    STA.W CinematicSpriteObject_PreInstructions,Y                        ;8BBFAE;
    BRA +                                                                ;8BBFB1;

  .nonZero:
    LDA.W #$00E0                                                         ;8BBFB3;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BBFB6;

+   LDA.W #$0057                                                         ;8BBFB9;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BBFBC;
    LDA.W #$0800                                                         ;8BBFBF;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BBFC2;
    RTS                                                                  ;8BBFC5;


;;; $BFC6: Pre-instruction - cinematic sprite object $CE91 (Ceres purple space vortex) ;;;
PreInstruction_CinematicSpriteObject_CeresPurpleSpaceVortex:
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BBFC6;
    SEC                                                                  ;8BBFC9;
    SBC.W #$2000                                                         ;8BBFCA;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BBFCD;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BBFD0;
    SBC.W #$0000                                                         ;8BBFD3;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BBFD6; fallthrough to RTS_8BBFD9


RTS_8BBFD9:
    RTS                                                                  ;8BBFD9;


;;; $BFDA: Cinematic function - fly to Ceres - flying into Ceres ;;;
CinematicFunction_FlyToCeres_FlyingIntoCeres:
    SEP #$20                                                             ;8BBFDA;
    LDA.B DP_ColorMathSubScreenBackdropColor0                            ;8BBFDC;
    SEC                                                                  ;8BBFDE;
    SBC.B #$01                                                           ;8BBFDF;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BBFE1;
    CMP.B #$20                                                           ;8BBFE3;
    BPL .color1                                                          ;8BBFE5;
    LDA.B #$20                                                           ;8BBFE7;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BBFE9;

  .color1:
    LDA.B DP_ColorMathSubScreenBackdropColor1                            ;8BBFEB;
    SEC                                                                  ;8BBFED;
    SBC.B #$01                                                           ;8BBFEE;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BBFF0;
    CMP.B #$40                                                           ;8BBFF2;
    BPL .color2                                                          ;8BBFF4;
    LDA.B #$40                                                           ;8BBFF6;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BBFF8;

  .color2:
    LDA.B DP_ColorMathSubScreenBackdropColor2                            ;8BBFFA;
    SEC                                                                  ;8BBFFC;
    SBC.B #$01                                                           ;8BBFFD;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BBFFF;
    CMP.B #$80                                                           ;8BC001;
    BPL .zoomLessThanC00                                                 ;8BC003;
    LDA.B #$80                                                           ;8BC005;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BC007;

  .zoomLessThanC00:
    REP #$20                                                             ;8BC009;
    LDA.W CinematicBG1_XSubPosition                                      ;8BC00B;
    SEC                                                                  ;8BC00E;
    SBC.W #$200*!SPF*$10                                                 ;8BC00F;
    STA.W CinematicBG1_XSubPosition                                      ;8BC012;
    LDA.W CinematicBG1_XPosition                                         ;8BC015;
    SBC.W #$0000                                                         ;8BC018;
    STA.W CinematicBG1_XPosition                                         ;8BC01B;
    LDA.W Mode7TransformationZoomLevel                                   ;8BC01E;
    CMP.W #$0C00                                                         ;8BC021;
    BPL .zoomLessThan2000                                                ;8BC024;
    CLC                                                                  ;8BC026;
    ADC.W #$0010*!SPF                                                    ;8BC027;
    STA.W Mode7TransformationZoomLevel                                   ;8BC02A;
    RTS                                                                  ;8BC02D;

  .zoomLessThan2000:
    LDA.W Mode7TransformationZoomLevel                                   ;8BC02E;
    CMP.W #$2000                                                         ;8BC031;
    BPL +                                                                ;8BC034;
    CLC                                                                  ;8BC036;
    ADC.W #$0020*!SPF                                                    ;8BC037;
    STA.W Mode7TransformationZoomLevel                                   ;8BC03A;
    RTS                                                                  ;8BC03D;

+   SEP #$20                                                             ;8BC03E;
    LDA.B #$11                                                           ;8BC040;
    STA.B DP_MainScreenLayers                                            ;8BC042;
    LDA.B #$01                                                           ;8BC044;
    STA.B DP_BGModeSize                                                  ;8BC046;
    LDA.B #$00                                                           ;8BC048;
    STA.B DP_Mode7Settings                                               ;8BC04A;
    LDA.B #$5C                                                           ;8BC04C;
    STA.B DP_BG1TilemapAddrSize                                          ;8BC04E;
    LDA.B #$06                                                           ;8BC050;
    STA.B DP_BGTilesAddr                                                 ;8BC052;
    REP #$20                                                             ;8BC054;
    LDA.W #$0100                                                         ;8BC056;
    STA.W Mode7TransformationZoomLevel                                   ;8BC059;
    STZ.W Mode7TransformationAngle                                       ;8BC05C;
    STZ.W CinematicBG1_XSubPosition                                      ;8BC05F;
    STZ.W CinematicBG1_XPosition                                         ;8BC062;
    STZ.W CinematicBG1_YSubPosition                                      ;8BC065;
    STZ.W CinematicBG1_YPosition                                         ;8BC068;
    JSL.L Enable_CinematicBGObjects                                      ;8BC06B;
    JSL.L Enable_CinematicBGTilemap_Updates                              ;8BC06F;
    LDY.W #CinematicSpriteObjectDefinitions_SpaceColony                  ;8BC073;
    LDA.W #$5C00                                                         ;8BC076;
    JSR.W Spawn_CinematicBGObject                                        ;8BC079;
    LDA.W #RTS_8BA38F                                                    ;8BC07C;
    STA.W CinematicFunction                                              ;8BC07F;
    RTS                                                                  ;8BC082;


if !FEATURE_KEEP_UNREFERENCED
;;; $C083: Initialisation function - cinematic sprite object $CE97 (unused. Space colony text) ;;;
UNUSED_InitFunc_CinematicSpriteObject_SpaceColonyText_8BC083:
    LDA.W #$007C                                                         ;8BC083;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC086;
    LDA.W #$00BA                                                         ;8BC089;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC08C;
    LDA.W #$0000                                                         ;8BC08F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC092;
    RTS                                                                  ;8BC095;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $C096: Instruction - skip next instruction if English text ;;;
Instruction_SkipNextInstructionIfDefaultLanguage:
    LDA.W AltText                                                        ;8BC096;
    BNE .return                                                          ;8BC099;
    TYA                                                                  ;8BC09B;
    CLC                                                                  ;8BC09C;
    ADC.W #CinematicBGObjectInstLists_SpaceColony_defaultLanguage-CinematicBGObjectInstLists_SpaceColony_altLanguage ;8BC09D;
    TAY                                                                  ;8BC0A0;

  .return:
    RTS                                                                  ;8BC0A1;


;;; $C0A2: Instruction - finish fly to Ceres ;;;
Instruction_FinishFlyToCeres:
    LDA.W #CinematicFunction_FlyToCeres_Finish                           ;8BC0A2;
    STA.W CinematicFunction                                              ;8BC0A5;
    LDA.W #$0001                                                         ;8BC0A8;
    STA.W ScreenFadeDelay                                                ;8BC0AB;
    STA.W ScreenFadeCounter                                              ;8BC0AE;
    RTS                                                                  ;8BC0B1;


if !FEATURE_KEEP_UNREFERENCED
;;; $C0B2: Initialisation function - cinematic sprite object $CE9D (unused. Space colony Japanese text) ;;;
UNUSED_InitFunc_CineSpriteObject_SpaceColonySubtitle_8BC0B2:
    LDA.W #$007C                                                         ;8BC0B2;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC0B5;
    LDA.W #$00CC                                                         ;8BC0B8;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC0BB;
    LDA.W #$0000                                                         ;8BC0BE;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC0C1;
    RTS                                                                  ;8BC0C4;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $C0C5: Cinematic function - fly to Ceres - finish ;;;
CinematicFunction_FlyToCeres_Finish:
    JSL.L HandleFadingOut                                                ;8BC0C5;
    SEP #$20                                                             ;8BC0C9;
    LDA.B DP_Brightness                                                  ;8BC0CB;
    CMP.B #$80                                                           ;8BC0CD;
    BNE .return                                                          ;8BC0CF;
    JSL.L EnableNMI                                                      ;8BC0D1;
    REP #$20                                                             ;8BC0D5;
    STZ.W ScreenFadeDelay                                                ;8BC0D7;
    STZ.W ScreenFadeCounter                                              ;8BC0DA;
    STZ.B DP_BG2XScroll                                                  ;8BC0DD;
    STZ.B DP_BG3XScroll                                                  ;8BC0DF;
    STZ.B DP_BG2YScroll                                                  ;8BC0E1;
    STZ.B DP_BG3YScroll                                                  ;8BC0E3;
    STZ.W Mode7TransformationAngle                                       ;8BC0E5;
    LDA.W #MessageBoxIndex                                               ;8BC0E8;
    DEC                                                                  ;8BC0EB;
    DEC                                                                  ;8BC0EC;
    SEC                                                                  ;8BC0ED;
    SBC.W #Mode7TransformationAngle                                      ;8BC0EE;
    TAX                                                                  ;8BC0F1;

  .loop:
    STZ.W Mode7TransformationAngle,X                                     ;8BC0F2;
    DEX                                                                  ;8BC0F5;
    DEX                                                                  ;8BC0F6;
    BPL .loop                                                            ;8BC0F7;
    LDA.W #CinematicFunction_FlyToCeres_StartGameAtCeres                 ;8BC0F9;
    STA.W CinematicFunction                                              ;8BC0FC;

  .return:
    RTS                                                                  ;8BC0FF;


;;; $C100: Cinematic function - fly to Ceres - start game at Ceres ;;;
CinematicFunction_FlyToCeres_StartGameAtCeres:
    LDA.W #$001F                                                         ;8BC100;
    STA.L SRAMMirror_LoadingGameState                                    ;8BC103;
    STA.W GameState                                                      ;8BC107;
    LDA.W #$0006                                                         ;8BC10A;
    STA.W AreaIndex                                                      ;8BC10D;
    STZ.W LoadStationIndex                                               ;8BC110;
    LDA.W SaveSlotSelected                                               ;8BC113;
    JSL.L SaveToSRAM                                                     ;8BC116;
    RTS                                                                  ;8BC11A;


;;; $C11B: Cinematic function - Ceres goes boom - initial ;;;
CinematicFunction_CeresGoesBoom_Initial:
    LDX.W #$0008                                                         ;8BC11B;

  .wait:
    JSL.L WaitForNMI                                                     ;8BC11E;
    DEX                                                                  ;8BC122;
    BPL .wait                                                            ;8BC123;
    JSR.W Setup_PPU_CeresCutscene                                        ;8BC125;
    LDA.W #MessageBoxIndex                                               ;8BC128;
    DEC                                                                  ;8BC12B;
    DEC                                                                  ;8BC12C;
    SEC                                                                  ;8BC12D;
    SBC.W #Mode7TransformationAngle                                      ;8BC12E;
    TAX                                                                  ;8BC131;

  .loop:
    STZ.W Mode7TransformationAngle,X                                     ;8BC132;
    DEX                                                                  ;8BC135;
    DEX                                                                  ;8BC136;
    BPL .loop                                                            ;8BC137;
    STZ.W DoorPointer                                                    ;8BC139;
    STZ.W Layer1XPosition                                                ;8BC13C;
    STZ.W Layer1YPosition                                                ;8BC13F;
    LDX.W #$0000                                                         ;8BC142;

  .loopPalettes:
    LDA.L Palettes_SpaceGunshipCeres,X                                   ;8BC145;
    STA.L Palettes,X                                                     ;8BC149;
    INX                                                                  ;8BC14D;
    INX                                                                  ;8BC14E;
    CPX.W #$0200                                                         ;8BC14F;
    BMI .loopPalettes                                                    ;8BC152;
    LDA.W #Tiles_Gunship_Ceres_Mode7>>8&$FF00                            ;8BC154;
    STA.B DP_DecompSrc+1                                                 ;8BC157;
    LDA.W #Tiles_Gunship_Ceres_Mode7                                     ;8BC159;
    STA.B DP_DecompSrc                                                   ;8BC15C;
    JSL.L Decompression_HardcodedDestination                             ;8BC15E;
    dl CeresGunshipMode7Tiles                                            ;8BC162;
    LDA.W #Gunship_Ceres_Tilemap>>8&$FF00                                ;8BC165;
    STA.B DP_DecompSrc+1                                                 ;8BC168;
    LDA.W #Gunship_Ceres_Tilemap                                         ;8BC16A;
    STA.B DP_DecompSrc                                                   ;8BC16D;
    JSL.L Decompression_HardcodedDestination                             ;8BC16F;
    dl $7F4000                                                           ;8BC173;
    LDA.W #Tiles_Space_Ceres>>8&$FF00                                    ;8BC176;
    STA.B DP_DecompSrc+1                                                 ;8BC179;
    LDA.W #Tiles_Space_Ceres                                             ;8BC17B;
    STA.B DP_DecompSrc                                                   ;8BC17E;
    JSL.L Decompression_HardcodedDestination                             ;8BC180;
    dl SpaceCeresTiles                                                   ;8BC184;
    SEP #$30                                                             ;8BC187;
    LDA.B #$00                                                           ;8BC189;
    STA.W $2116                                                          ;8BC18B;
    LDA.B #$00                                                           ;8BC18E;
    STA.W $2117                                                          ;8BC190;
    LDA.B #$80                                                           ;8BC193;
    STA.W $2115                                                          ;8BC195;
    JSL.L SetupHDMATransfer                                              ;8BC198;
    db $01,$00,$19                                                       ;8BC19C;
    dl CeresGunshipMode7Tiles                                            ;8BC19F;
    dw $4000                                                             ;8BC1A2;
    LDA.B #$02                                                           ;8BC1A4;
    STA.W $420B                                                          ;8BC1A6;
    REP #$10                                                             ;8BC1A9;
    STZ.W $2115                                                          ;8BC1AB;
    STZ.W $2116                                                          ;8BC1AE;
    STZ.W $2117                                                          ;8BC1B1;
    LDX.W #$4000                                                         ;8BC1B4;
    LDA.B #$8C                                                           ;8BC1B7;

  .loopVRAM:
    STA.W $2118                                                          ;8BC1B9;
    DEX                                                                  ;8BC1BC;
    BNE .loopVRAM                                                        ;8BC1BD;
    SEP #$10                                                             ;8BC1BF;
    LDA.B #$00                                                           ;8BC1C1;
    STA.W $2116                                                          ;8BC1C3;
    LDA.B #$00                                                           ;8BC1C6;
    STA.W $2117                                                          ;8BC1C8;
    LDA.B #$00                                                           ;8BC1CB;
    STA.W $2115                                                          ;8BC1CD;
    JSL.L SetupHDMATransfer                                              ;8BC1D0;
    db $01,$00,$18                                                       ;8BC1D4;
    dl CeresCutsceneTilemap_Ceres                                        ;8BC1D7;
    dw $0600                                                             ;8BC1DA;
    LDA.B #$02                                                           ;8BC1DC;
    STA.W $420B                                                          ;8BC1DE;
    LDA.B #$00                                                           ;8BC1E1;
    STA.W $2116                                                          ;8BC1E3;
    LDA.B #$60                                                           ;8BC1E6;
    STA.W $2117                                                          ;8BC1E8;
    LDA.B #$80                                                           ;8BC1EB;
    STA.W $2115                                                          ;8BC1ED;
    JSL.L SetupHDMATransfer                                              ;8BC1F0;
    db $01,$01,$18                                                       ;8BC1F4;
    dl SpaceCeresTiles                                                   ;8BC1F7;
    dw $4000                                                             ;8BC1FA;
    LDA.B #$02                                                           ;8BC1FC;
    STA.W $420B                                                          ;8BC1FE;
    LDA.B #$00                                                           ;8BC201;
    STA.W $2116                                                          ;8BC203;
    LDA.B #$60                                                           ;8BC206;
    STA.W $2117                                                          ;8BC208;
    LDA.B #$80                                                           ;8BC20B;
    STA.W $2115                                                          ;8BC20D;
    JSL.L SetupHDMATransfer                                              ;8BC210;
    db $01,$01,$18                                                       ;8BC214;
    dl Tiles_Standard_Sprite_0                                           ;8BC217;
    dw $1A00                                                             ;8BC21A;
    LDA.B #$02                                                           ;8BC21C;
    STA.W $420B                                                          ;8BC21E;
    REP #$30                                                             ;8BC221;
    LDA.W #$0100                                                         ;8BC223;
    STA.W $211B                                                          ;8BC226;
    STA.B DP_Mode7TransMatrixA                                           ;8BC229;
    STZ.W $211C                                                          ;8BC22B;
    STZ.B DP_Mode7TransMatrixB                                           ;8BC22E;
    STZ.W $211D                                                          ;8BC230;
    STZ.B DP_Mode7TransMatrixC                                           ;8BC233;
    STA.W $211E                                                          ;8BC235;
    STA.B DP_Mode7TransMatrixD                                           ;8BC238;
    LDA.W #$0034                                                         ;8BC23A;
    STA.W $211F                                                          ;8BC23D;
    STA.B DP_Mode7TransOriginX                                           ;8BC240;
    LDA.W #$0030                                                         ;8BC242;
    STA.W $2120                                                          ;8BC245;
    STA.B DP_Mode7TransOriginY                                           ;8BC248;
    LDA.W #$FFD4                                                         ;8BC24A;
    STA.W CinematicBG1_XPosition                                         ;8BC24D;
    LDA.W #$FF90                                                         ;8BC250;
    STA.W CinematicBG1_YPosition                                         ;8BC253;
    STZ.W Mode7TransformationAngle                                       ;8BC256;
    LDA.W #$0100                                                         ;8BC259;
    STA.W Mode7TransformationZoomLevel                                   ;8BC25C;
    JSL.L Disable_HDMAObjects                                            ;8BC25F;
    JSL.L Wait_End_VBlank_Clear_HDMA                                     ;8BC263;
    JSL.L Clear_PaletteFXObjects                                         ;8BC267;
    JSL.L Enable_PaletteFXObjects                                        ;8BC26B;
    LDA.W #$002F                                                         ;8BC26F;
    JSL.L Clear_CinematicBGObjects_CinematicBGTilemap                    ;8BC272;
    LDA.W #$0000                                                         ;8BC276;
    STA.W CinematicBGObject_VRAMAddr                                     ;8BC279;
    LDY.W #CinematicSpriteObjectDefs_CeresUnderAttackLargeAsteroids      ;8BC27C;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC27F;
    LDY.W #CinematicSpriteObjectDefinitions_CeresSmallAsteroids          ;8BC282;
    LDA.W #$0002                                                         ;8BC285;
    STA.B DP_Temp12                                                      ;8BC288;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BC28A;
    LDY.W #CinematicSpriteObjectDefinitions_CeresPurpleSpaceVortex       ;8BC28D;
    STZ.B DP_Temp12                                                      ;8BC290;
    LDA.W #$0000                                                         ;8BC292;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BC295;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosionSpawner        ;8BC298;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC29B;
    LDY.W #PaletteFXObjects_CutsceneCeresNavigationLights_BGCeres        ;8BC29E;
    JSL.L Spawn_PaletteFXObject                                          ;8BC2A1;
    JSL.L EnableNMI                                                      ;8BC2A5;
    LDA.W #$0001                                                         ;8BC2A9;
    STA.W ScreenFadeDelay                                                ;8BC2AC;
    STA.W ScreenFadeCounter                                              ;8BC2AF;
    LDA.W #CinematicFunction_CeresGoesBoom_WaitForMusicQueue             ;8BC2B2;
    STA.W CinematicFunction                                              ;8BC2B5;
    LDA.W #$0000                                                         ;8BC2B8;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BC2BB;
    LDA.W #$FF2D                                                         ;8BC2BF;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BC2C2;
    LDA.W GameState                                                      ;8BC2C6;
    CMP.W #$0025                                                         ;8BC2C9;
    BNE .notState25                                                      ;8BC2CC;
    LDA.W #$0008                                                         ;8BC2CE;
    LDY.W #$000E                                                         ;8BC2D1;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BC2D4;
    RTS                                                                  ;8BC2D8;

  .notState25:
    LDA.W #$0007                                                         ;8BC2D9;
    LDY.W #$000E                                                         ;8BC2DC;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BC2DF;
    RTS                                                                  ;8BC2E3;


;;; $C2E4: Cinematic function - Ceres goes boom - wait for music queue ;;;
CinematicFunction_CeresGoesBoom_WaitForMusicQueue:
    JSL.L CheckIfMusicIsQueued                                           ;8BC2E4;
    BCS .return                                                          ;8BC2E8;
    LDA.W #CinematicFunction_CeresGoesBoom_SmallCeresExplosion_FadingIn  ;8BC2EA;
    STA.W CinematicFunction                                              ;8BC2ED;

  .return:
    RTS                                                                  ;8BC2F0;


;;; $C2F1: Cinematic function - Ceres goes boom - small Ceres explosions - fading in ;;;
CinematicFunction_CeresGoesBoom_SmallCeresExplosion_FadingIn:
    LDA.W CinematicBG1_YSubPosition                                      ;8BC2F1;
    CLC                                                                  ;8BC2F4;
    ADC.W #$100*!SPF*$10                                                 ;8BC2F5;
    STA.W CinematicBG1_YSubPosition                                      ;8BC2F8;
    LDA.W CinematicBG1_YPosition                                         ;8BC2FB;
    ADC.W #$0000                                                         ;8BC2FE;
    STA.W CinematicBG1_YPosition                                         ;8BC301;
    LDA.W CinematicBG1_XSubPosition                                      ;8BC304;
    SEC                                                                  ;8BC307;
    SBC.W #$400*!SPF*$10                                                 ;8BC308;
    STA.W CinematicBG1_XSubPosition                                      ;8BC30B;
    LDA.W CinematicBG1_XPosition                                         ;8BC30E;
    SBC.W #$0000                                                         ;8BC311;
    STA.W CinematicBG1_XPosition                                         ;8BC314;
    LDA.W Mode7TransformationZoomLevel                                   ;8BC317;
    CLC                                                                  ;8BC31A;
    ADC.W #$0001                                                         ;8BC31B;
    STA.W Mode7TransformationZoomLevel                                   ;8BC31E;
    JSL.L HandleFadingIn                                                 ;8BC321;
    SEP #$20                                                             ;8BC325;
    LDA.B DP_Brightness                                                  ;8BC327;
    CMP.B #$0F                                                           ;8BC329;
    BNE .return                                                          ;8BC32B;
    REP #$20                                                             ;8BC32D;
    STZ.W ScreenFadeDelay                                                ;8BC32F;
    STZ.W ScreenFadeCounter                                              ;8BC332;
    LDA.W #CinematicFunction_CeresGoesBoom_CeresExplosions               ;8BC335;
    STA.W CinematicFunction                                              ;8BC338;
    LDA.W #$0001                                                         ;8BC33B;
    STA.W CinematicFunctionTimer                                         ;8BC33E;
    STZ.W IntroCrossFadeTimer                                            ;8BC341;

  .return:
    RTS                                                                  ;8BC344;


;;; $C345: Cinematic function - Ceres goes boom - Ceres explosions ;;;
CinematicFunction_CeresGoesBoom_CeresExplosions:
    LDA.W CinematicBG1_YSubPosition                                      ;8BC345;
    CLC                                                                  ;8BC348;
    ADC.W #$100*!SPF*$10                                                 ;8BC349;
    STA.W CinematicBG1_YSubPosition                                      ;8BC34C;
    LDA.W CinematicBG1_YPosition                                         ;8BC34F;
    ADC.W #$0000                                                         ;8BC352;
    STA.W CinematicBG1_YPosition                                         ;8BC355;
    LDA.W CinematicBG1_XSubPosition                                      ;8BC358;
    SEC                                                                  ;8BC35B;
    SBC.W #$400*!SPF*$10                                                 ;8BC35C;
    STA.W CinematicBG1_XSubPosition                                      ;8BC35F;
    LDA.W CinematicBG1_XPosition                                         ;8BC362;
    SBC.W #$0000                                                         ;8BC365;
    STA.W CinematicBG1_XPosition                                         ;8BC368;
    LDA.W Mode7TransformationZoomLevel                                   ;8BC36B;
    CMP.W #regional($0280, $0240)                                        ;8BC36E;
    BPL +                                                                ;8BC371;
    CLC                                                                  ;8BC373;
    ADC.W #$0001                                                         ;8BC374;
    STA.W Mode7TransformationZoomLevel                                   ;8BC377;
    RTS                                                                  ;8BC37A;

+   LDA.W CinematicBG1_XPosition                                         ;8BC37B;
    EOR.W #$FFFF                                                         ;8BC37E;
    INC                                                                  ;8BC381;
    CLC                                                                  ;8BC382;
    ADC.B DP_Mode7TransOriginX                                           ;8BC383;
    STA.W SamusProjectile_PowerBombExplosionXPosition                    ;8BC385;
    LDA.W CinematicBG1_YPosition                                         ;8BC388;
    EOR.W #$FFFF                                                         ;8BC38B;
    INC                                                                  ;8BC38E;
    CLC                                                                  ;8BC38F;
    ADC.B DP_Mode7TransOriginY                                           ;8BC390;
    STA.W SamusProjectile_PowerBombExplosionYPosition                    ;8BC392;
    PHX                                                                  ;8BC395;
    PHY                                                                  ;8BC396;
    PHP                                                                  ;8BC397;
    PHB                                                                  ;8BC398;
    JSL.L Enable_HDMAObjects                                             ;8BC399;
    JSL.L Spawn_PowerBombExplosion                                       ;8BC39D;
    PLB                                                                  ;8BC3A1;
    PLP                                                                  ;8BC3A2;
    PLY                                                                  ;8BC3A3;
    PLX                                                                  ;8BC3A4;
    SEP #$20                                                             ;8BC3A5;
    LDA.B #$10                                                           ;8BC3A7;
    STA.B DP_ColorMathA                                                  ;8BC3A9;
    LDA.B #$37                                                           ;8BC3AB;
    STA.B DP_ColorMathB                                                  ;8BC3AD;
    REP #$20                                                             ;8BC3AF;
    LDA.W #$0300                                                         ;8BC3B1;
    STA.W Mode7TransformationZoomLevel                                   ;8BC3B4;
    LDA.W #$0000                                                         ;8BC3B7;
    LDY.W #CinematicSpriteObjectDefinitions_CeresFinalExplosion          ;8BC3BA;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC3BD;
    LDA.W GameState                                                      ;8BC3C0;
    CMP.W #$0025                                                         ;8BC3C3;
    BNE .notState25                                                      ;8BC3C6;
    LDX.W #.mode7TransferData_clearCeresUpperHalf                        ;8BC3C8;
    JSL.L QueueMode7Transfers                                            ;8BC3CB;
    BRA .clearCeresLowerHalf                                             ;8BC3CF;

  .notState25:
    LDX.W #.mode7TransferData_frontOfGunship                             ;8BC3D1;
    JSL.L QueueMode7Transfers                                            ;8BC3D4;

  .clearCeresLowerHalf:
    LDX.W #.mode7TransferData_clearCeresLowerHalf                        ;8BC3D8;
    JSL.L QueueMode7Transfers                                            ;8BC3DB;
    LDA.W #CinematicFunction_CeresGoesBoom_GunshipFlyingAway             ;8BC3DF;
    STA.W CinematicFunction                                              ;8BC3E2;
    RTS                                                                  ;8BC3E5;

; Mode 7 transfers data
  .mode7TransferData_frontOfGunship:
    db $80                                                               ;8BC3E6; Control. 80h = write to VRAM tilemap
    dl CeresCutsceneTilemap_ShipFront                                    ;8BC3E7; Source address
    dw $0300,$0000                                                       ;8BC3EA; Size, Destination address (VRAM)
    db $00, $00                                                          ;8BC3EE; VRAM address increment mode

  .mode7TransferData_clearCeresLowerHalf:
    db $80                                                               ;8BC3F0; Control. 80h = write to VRAM tilemap
    dl CeresCutsceneTilemap_ClearTilemap                                 ;8BC3F1; Source address
    dw $0300,$0300                                                       ;8BC3F4; Size, Destination address (VRAM)
    db $00, $00                                                          ;8BC3F8; VRAM address increment mode

  .mode7TransferData_clearCeresUpperHalf:
    db $80                                                               ;8BC3FA; Control. 80h = write to VRAM tilemap
    dl CeresCutsceneTilemap_ClearTilemap                                 ;8BC3FB; Source address
    dw $0300,$0000                                                       ;8BC3FE; Size, Destination address (VRAM)
    db $00, $00                                                          ;8BC402; VRAM address increment mode


;;; $C404: Instruction - spawn Ceres explosions 1 ;;;
Instruction_SpawnCeresExplosions1:
    PHY                                                                  ;8BC404;
    LDA.W #$0000                                                         ;8BC405;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion1              ;8BC408;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC40B;
    LDA.W #$0001                                                         ;8BC40E;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion1              ;8BC411;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC414;
    LDA.W #$0002                                                         ;8BC417;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion1              ;8BC41A;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC41D;
    LDA.W #$0003                                                         ;8BC420;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion1              ;8BC423;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC426;
    LDA.W #$0004                                                         ;8BC429;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion1              ;8BC42C;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC42F;
    PLY                                                                  ;8BC432;
    RTS                                                                  ;8BC433;


;;; $C434: Initialisation function - cinematic sprite object $CEBB (Ceres explosion 1) ;;;
InitFunction_CinematicSpriteObject_CeresExplosion1:
    LDA.W CinematicSpriteObject_InitParam                                ;8BC434;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BC437;
    ASL                                                                  ;8BC43A;
    TAX                                                                  ;8BC43B;
    LDA.W .timer,X                                                       ;8BC43C;
    STA.W CinematicSpriteObject_InstructionTimers,Y                      ;8BC43F;
    LDA.W CinematicBG1_XPosition                                         ;8BC442;
    EOR.W #$FFFF                                                         ;8BC445;
    INC                                                                  ;8BC448;
    CLC                                                                  ;8BC449;
    ADC.B DP_Mode7TransOriginX                                           ;8BC44A;
    CLC                                                                  ;8BC44C;
    ADC.W .Xoffset,X                                                     ;8BC44D;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC450;
    LDA.W CinematicBG1_YPosition                                         ;8BC453;
    EOR.W #$FFFF                                                         ;8BC456;
    INC                                                                  ;8BC459;
    CLC                                                                  ;8BC45A;
    ADC.B DP_Mode7TransOriginY                                           ;8BC45B;
    CLC                                                                  ;8BC45D;
    ADC.W .Yoffset,X                                                     ;8BC45E;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC461;
    LDA.W #$0A00                                                         ;8BC464;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC467;
    RTS                                                                  ;8BC46A;

  .timer:
    dw $0001,$0010,$0020,$0030,$0040                                     ;8BC46B;
  .Xoffset:
    dw $0010,$FFF0,$0010,$FFF0,$0000                                     ;8BC475;
  .Yoffset:
    dw $FFF0,$0010,$0010,$FFF0,$0000                                     ;8BC47F;


;;; $C489: Pre-instruction - Ceres explosion spawner - spawn Ceres explosion 2 every Ch frames ;;;
PreInst_CeresExplosionSpawner_SpawnExplosion2EveryCFrames:
    LDA.W CinematicFunction                                              ;8BC489;
    CMP.W #CinematicFunction_CeresGoesBoom_GunshipFlyingAway             ;8BC48C;
    BNE .notGunshipFlyingAway                                            ;8BC48F;
    LDA.W #RTS_8B93D9                                                    ;8BC491;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BC494;
    RTS                                                                  ;8BC497;

  .notGunshipFlyingAway:
    DEC.W CinematicFunctionTimer                                         ;8BC498;
    BEQ .spawn                                                           ;8BC49B;
    BPL .return                                                          ;8BC49D;

  .spawn:
    LDA.W CeresExplosion2OffsetIndex                                     ;8BC49F;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion2              ;8BC4A2;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC4A5;
    LDA.W #$000C                                                         ;8BC4A8;
    STA.W CinematicFunctionTimer                                         ;8BC4AB;
    LDA.W CeresExplosion2OffsetIndex                                     ;8BC4AE;
    INC                                                                  ;8BC4B1;
    AND.W #$0007                                                         ;8BC4B2;
    STA.W CeresExplosion2OffsetIndex                                     ;8BC4B5;

  .return:
    RTS                                                                  ;8BC4B8;


;;; $C4B9: Initialisation function - cinematic sprite object $CEC1 (Ceres explosion 2) ;;;
InitFunction_CinematicSpriteObject_CeresExplosion2:
    LDA.W CinematicSpriteObject_InitParam                                ;8BC4B9;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BC4BC;
    ASL                                                                  ;8BC4BF;
    ASL                                                                  ;8BC4C0;
    TAX                                                                  ;8BC4C1;
    LDA.W CinematicBG1_XPosition                                         ;8BC4C2;
    EOR.W #$FFFF                                                         ;8BC4C5;
    INC                                                                  ;8BC4C8;
    CLC                                                                  ;8BC4C9;
    ADC.B DP_Mode7TransOriginX                                           ;8BC4CA;
    CLC                                                                  ;8BC4CC;
    ADC.W .Xoffset,X                                                     ;8BC4CD;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC4D0;
    LDA.W CinematicBG1_YPosition                                         ;8BC4D3;
    EOR.W #$FFFF                                                         ;8BC4D6;
    INC                                                                  ;8BC4D9;
    CLC                                                                  ;8BC4DA;
    ADC.B DP_Mode7TransOriginY                                           ;8BC4DB;
    CLC                                                                  ;8BC4DD;
    ADC.W .Yoffset,X                                                     ;8BC4DE;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC4E1;
    LDA.W #$0A00                                                         ;8BC4E4;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC4E7;
    RTS                                                                  ;8BC4EA;

  .Xoffset:
    dw $000E                                                             ;8BC4EB;
  .Yoffset:
    dw       $FFF8                                                       ;8BC4ED;
    dw $0008,$000C
    dw $FFF0,$000C
    dw $FFF8,$FFF2
    dw $0000,$0000
    dw $0010,$000E
    dw $FFF4,$0004
    dw $FFF8,$FFF0


;;; $C50B: RTS ;;;
RTS_8BC50B:
    RTS                                                                  ;8BC50B;


;;; $C50C: Instruction - spawn Ceres explosions 3 ;;;
Instruction_SpawnCeresExplosions3:
    PHY                                                                  ;8BC50C;
    LDA.W #$0000                                                         ;8BC50D;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion3              ;8BC510;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC513;
    LDA.W #$0001                                                         ;8BC516;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion3              ;8BC519;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC51C;
    LDA.W #$0002                                                         ;8BC51F;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion3              ;8BC522;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC525;
    LDA.W #$0003                                                         ;8BC528;
    LDY.W #CinematicSpriteObjectDefinitions_CeresExplosion3              ;8BC52B;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC52E;
    PLY                                                                  ;8BC531;
    RTS                                                                  ;8BC532;


;;; $C533: Initialisation function - cinematic sprite object $CEC7 (Ceres explosion 3) ;;;
InitFunction_CinematicSpriteObject_CeresExplosion3:
    LDA.W CinematicSpriteObject_InitParam                                ;8BC533;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BC536;
    ASL                                                                  ;8BC539;
    TAX                                                                  ;8BC53A;
    LDA.W .timer,X                                                       ;8BC53B;
    STA.W CinematicSpriteObject_InstructionTimers,Y                      ;8BC53E;
    LDA.W CinematicBG1_XPosition                                         ;8BC541;
    EOR.W #$FFFF                                                         ;8BC544;
    INC                                                                  ;8BC547;
    CLC                                                                  ;8BC548;
    ADC.B DP_Mode7TransOriginX                                           ;8BC549;
    CLC                                                                  ;8BC54B;
    ADC.W .Xoffset,X                                                     ;8BC54C;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC54F;
    LDA.W CinematicBG1_YPosition                                         ;8BC552;
    EOR.W #$FFFF                                                         ;8BC555;
    INC                                                                  ;8BC558;
    CLC                                                                  ;8BC559;
    ADC.B DP_Mode7TransOriginY                                           ;8BC55A;
    CLC                                                                  ;8BC55C;
    ADC.W .Yoffset,X                                                     ;8BC55D;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC560;
    LDA.W #$0A00                                                         ;8BC563;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC566;
    RTS                                                                  ;8BC569;

  .timer:
    dw $0001,$0004,$0008,$0010                                           ;8BC56A;
  .Xoffset:
    dw $0008,$000C,$FFF8,$FFF4                                           ;8BC572;
  .Yoffset:
    dw $FFFC,$0008,$FFF6,$000C                                           ;8BC57A;


;;; $C582: Pre-instruction - cinematic sprite object $CEBB/$CEC1/$CEC7/$CF2D (Ceres explosion) ;;;
PreInstruction_CinematicSpriteObject_CeresExplosion:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BC582;
    SEC                                                                  ;8BC585;
    SBC.W #$100*!SPF*$10                                                 ;8BC586;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BC589;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BC58C;
    SBC.W #$0000                                                         ;8BC58F;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BC592;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BC595;
    CLC                                                                  ;8BC598;
    ADC.W #$400*!SPF*$10                                                 ;8BC599;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BC59C;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BC59F;
    ADC.W #$0000                                                         ;8BC5A2;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BC5A5;
    RTS                                                                  ;8BC5A8;


;;; $C5A9: Initialisation function - cinematic sprite object $CF2D (Ceres final explosion) ;;;
InitFunction_CinematicSpriteObject_CeresFinalExplosion:
    LDA.W CinematicBG1_XPosition                                         ;8BC5A9;
    EOR.W #$FFFF                                                         ;8BC5AC;
    INC                                                                  ;8BC5AF;
    CLC                                                                  ;8BC5B0;
    ADC.B DP_Mode7TransOriginX                                           ;8BC5B1;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC5B3;
    LDA.W CinematicBG1_YPosition                                         ;8BC5B6;
    EOR.W #$FFFF                                                         ;8BC5B9;
    INC                                                                  ;8BC5BC;
    CLC                                                                  ;8BC5BD;
    ADC.B DP_Mode7TransOriginY                                           ;8BC5BE;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC5C0;
    LDA.W #$0A00                                                         ;8BC5C3;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC5C6;
    RTS                                                                  ;8BC5C9;


;;; $C5CA: Cinematic function - Ceres goes boom - gunship flying away ;;;
CinematicFunction_CeresGoesBoom_GunshipFlyingAway:
; This cinematic function is used even if Samus doesn't get away, just with the gunship tilemap unloaded ^_^;
    SEP #$20                                                             ;8BC5CA;
    LDA.B #$10                                                           ;8BC5CC;
    STA.B DP_ColorMathA                                                  ;8BC5CE;
    LDA.B #$37                                                           ;8BC5D0;
    STA.B DP_ColorMathB                                                  ;8BC5D2;
    REP #$20                                                             ;8BC5D4;
    LDA.W CinematicBG1_XSubPosition                                      ;8BC5D6;
    CLC                                                                  ;8BC5D9;
    ADC.W #regional($0000, $8000)                                        ;8BC5DA;
    STA.W CinematicBG1_XSubPosition                                      ;8BC5DD;
    LDA.W CinematicBG1_XPosition                                         ;8BC5E0;
    ADC.W #regional($0002, $0004)                                        ;8BC5E3;
    STA.W CinematicBG1_XPosition                                         ;8BC5E6;
    LDA.W Mode7TransformationAngle                                       ;8BC5E9;
    DEC                                                                  ;8BC5EC;
    AND.W #$00FF                                                         ;8BC5ED;
    STA.W Mode7TransformationAngle                                       ;8BC5F0;
    LDA.W Mode7TransformationZoomLevel                                   ;8BC5F3;
    CMP.W #$0010                                                         ;8BC5F6;
    BMI .zoomLessThan10                                                  ;8BC5F9;
    SEC                                                                  ;8BC5FB;
    SBC.W #$0010*!SPF                                                    ;8BC5FC;
    STA.W Mode7TransformationZoomLevel                                   ;8BC5FF;
    RTS                                                                  ;8BC602;

  .zoomLessThan10:
    LDA.W #CinematicFunction_CeresGoesBoom_WaitC0Frames                  ;8BC603;
    STA.W CinematicFunction                                              ;8BC606;
    LDA.W #regional($00C0, $0099)                                        ;8BC609;
    STA.W CinematicFunctionTimer                                         ;8BC60C;
    RTS                                                                  ;8BC60F;


;;; $C610: Cinematic function - Ceres goes boom - wait C0h frames ;;;
CinematicFunction_CeresGoesBoom_WaitC0Frames:
    DEC.W CinematicFunctionTimer                                         ;8BC610;
    BEQ .timerExpired                                                    ;8BC613;
    BPL .return                                                          ;8BC615;

  .timerExpired:
    LDA.W #$0001                                                         ;8BC617;
    STA.W ScreenFadeDelay                                                ;8BC61A;
    STA.W ScreenFadeCounter                                              ;8BC61D;
    LDA.W #CinematicFunction_CeresGoesBoom_FadeOut                       ;8BC620;
    STA.W CinematicFunction                                              ;8BC623;

  .return:
    RTS                                                                  ;8BC626;


;;; $C627: Cinematic function - Ceres goes boom - fade out ;;;
CinematicFunction_CeresGoesBoom_FadeOut:
; Similar to $82:8431/DCE0
    JSL.L HandleFadingOut                                                ;8BC627;
    SEP #$20                                                             ;8BC62B;
    LDA.B DP_Brightness                                                  ;8BC62D;
    CMP.B #$80                                                           ;8BC62F;
    BNE .return                                                          ;8BC631;
    JSL.L EnableNMI                                                      ;8BC633;
    REP #$20                                                             ;8BC637;
    STZ.W ScreenFadeDelay                                                ;8BC639;
    STZ.W ScreenFadeCounter                                              ;8BC63C;
    LDA.W GameState                                                      ;8BC63F;
    CMP.W #$0025                                                         ;8BC642;
    BEQ .gameState25                                                     ;8BC645;
    LDA.W #CinematicFunction_FlyToZebes_Initial                          ;8BC647;
    STA.W CinematicFunction                                              ;8BC64A;
    RTS                                                                  ;8BC64D;

  .gameState25:
    LDA.W #$0000                                                         ;8BC64E;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BC651;
    STZ.W SelectedHUDItem                                                ;8BC655;
    STZ.W AutoCancelHUDItemIndex                                         ;8BC658;
    STZ.W SamusInvincibilityTimer                                        ;8BC65B;
    STZ.W SamusKnockbackTimer                                            ;8BC65E;
    JSL.L Wait_End_VBlank_Clear_HDMA                                     ;8BC661;
    JSL.L DisableHVCounterInterrupts                                     ;8BC665;
    STZ.W LayerBlending_DefaultConfig                                    ;8BC669;
    SEP #$20                                                             ;8BC66C;
    STZ.B DP_NextGameplayColorMathA                                      ;8BC66E;
    STZ.B DP_NextGameplayColorMathB                                      ;8BC670;
    LDA.B #$10                                                           ;8BC672;
    STA.B DP_MainScreenLayers                                            ;8BC674;
    STZ.B DP_SubScreenLayers                                             ;8BC676;
    STZ.B DP_WindowAreaMainScreen                                        ;8BC678;
    STZ.B DP_WindowAreaSubScreen                                         ;8BC67A;
    LDA.B #$09                                                           ;8BC67C;
    STA.B DP_BGModeSize                                                  ;8BC67E;
    REP #$20                                                             ;8BC680;
    STZ.W GameOptionsMenuIndex                                           ;8BC682;
    STZ.W PauseMenu_MenuIndex                                            ;8BC685;
    LDX.W #$00FE                                                         ;8BC688;

  .loop:
    STZ.W CinematicSpriteObject_XPositions+$10,X                         ;8BC68B;
    DEX                                                                  ;8BC68E;
    DEX                                                                  ;8BC68F;
    BPL .loop                                                            ;8BC690;
    LDA.W #$0019                                                         ;8BC692;
    STA.W GameState                                                      ;8BC695;

  .return:
    RTS                                                                  ;8BC698;


;;; $C699: Cinematic function - fly to Zebes - initial ;;;
CinematicFunction_FlyToZebes_Initial:
    JSR.W Setup_PPU_SamusGoesToZebesCutscene                             ;8BC699;
    LDA.W #MessageBoxIndex                                               ;8BC69C;
    DEC                                                                  ;8BC69F;
    DEC                                                                  ;8BC6A0;
    SEC                                                                  ;8BC6A1;
    SBC.W #Mode7TransformationAngle                                      ;8BC6A2;
    TAX                                                                  ;8BC6A5;

  .loop:
    STZ.W Mode7TransformationAngle,X                                     ;8BC6A6;
    DEX                                                                  ;8BC6A9;
    DEX                                                                  ;8BC6AA;
    BPL .loop                                                            ;8BC6AB;
    LDA.W #Zebes_Tilemap>>8&$FF00                                        ;8BC6AD;
    STA.B DP_DecompSrc+1                                                 ;8BC6B0;
    LDA.W #Zebes_Tilemap                                                 ;8BC6B2;
    STA.B DP_DecompSrc                                                   ;8BC6B5;
    JSL.L Decompression_HardcodedDestination                             ;8BC6B7;
    dl ZebesTilemap                                                      ;8BC6BB;
    LDA.W #Tiles_Zebes>>8&$FF00                                          ;8BC6BE;
    STA.B DP_DecompSrc+1                                                 ;8BC6C1;
    LDA.W #Tiles_Zebes                                                   ;8BC6C3;
    STA.B DP_DecompSrc                                                   ;8BC6C6;
    JSL.L Decompression_HardcodedDestination                             ;8BC6C8;
    dl ZebesTiles                                                        ;8BC6CC;
    SEP #$30                                                             ;8BC6CF;
    LDA.B #$00                                                           ;8BC6D1;
    STA.W $2116                                                          ;8BC6D3;
    LDA.B #$00                                                           ;8BC6D6;
    STA.W $2117                                                          ;8BC6D8;
    LDA.B #$00                                                           ;8BC6DB;
    STA.W $2115                                                          ;8BC6DD;
    JSL.L SetupHDMATransfer                                              ;8BC6E0;
    db $01,$00,$18                                                       ;8BC6E4;
    dl CeresCutsceneTilemap_ShipBack                                     ;8BC6E7;
    dw $0300                                                             ;8BC6EA;
    LDA.B #$02                                                           ;8BC6EC;
    STA.W $420B                                                          ;8BC6EE;
    LDA.B #$00                                                           ;8BC6F1;
    STA.W $2116                                                          ;8BC6F3;
    LDA.B #$5C                                                           ;8BC6F6;
    STA.W $2117                                                          ;8BC6F8;
    LDA.B #$80                                                           ;8BC6FB;
    STA.W $2115                                                          ;8BC6FD;
    JSL.L SetupHDMATransfer                                              ;8BC700;
    db $01,$01,$18                                                       ;8BC704;
    dl ZebesTilemap                                                      ;8BC707;
    dw $0800                                                             ;8BC70A;
    LDA.B #$02                                                           ;8BC70C;
    STA.W $420B                                                          ;8BC70E;
    LDA.B #$00                                                           ;8BC711;
    STA.W $2116                                                          ;8BC713;
    LDA.B #$60                                                           ;8BC716;
    STA.W $2117                                                          ;8BC718;
    LDA.B #$80                                                           ;8BC71B;
    STA.W $2115                                                          ;8BC71D;
    JSL.L SetupHDMATransfer                                              ;8BC720;
    db $01,$01,$18                                                       ;8BC724;
    dl ZebesTiles                                                        ;8BC727;
    dw $4000                                                             ;8BC72A;
    LDA.B #$02                                                           ;8BC72C;
    STA.W $420B                                                          ;8BC72E;
    REP #$30                                                             ;8BC731;
    LDA.W #$0100                                                         ;8BC733;
    STA.W $211B                                                          ;8BC736;
    STA.B DP_Mode7TransMatrixA                                           ;8BC739;
    STZ.W $211C                                                          ;8BC73B;
    STZ.B DP_Mode7TransMatrixB                                           ;8BC73E;
    STZ.W $211D                                                          ;8BC740;
    STZ.B DP_Mode7TransMatrixC                                           ;8BC743;
    STA.W $211E                                                          ;8BC745;
    STA.B DP_Mode7TransMatrixD                                           ;8BC748;
    LDA.W #$0038                                                         ;8BC74A;
    STA.W $211F                                                          ;8BC74D;
    STA.B DP_Mode7TransOriginX                                           ;8BC750;
    LDA.W #$0018                                                         ;8BC752;
    STA.W $2120                                                          ;8BC755;
    STA.B DP_Mode7TransOriginY                                           ;8BC758;
    STZ.W CinematicBG1_XPosition                                         ;8BC75A;
    STZ.W CinematicBG1_YPosition                                         ;8BC75D;
    STZ.W Mode7TransformationAngle                                       ;8BC760;
    LDA.W #$0100                                                         ;8BC763;
    STA.W Mode7TransformationZoomLevel                                   ;8BC766;
    JSL.L Disable_HDMAObjects                                            ;8BC769;
    JSL.L Wait_End_VBlank_Clear_HDMA                                     ;8BC76D;
    JSL.L Clear_PaletteFXObjects                                         ;8BC771;
    JSL.L Enable_PaletteFXObjects                                        ;8BC775;
    SEP #$20                                                             ;8BC779;
    LDA.B #$81                                                           ;8BC77B;
    STA.B DP_Mosaic                                                      ;8BC77D;
    REP #$20                                                             ;8BC77F;
    LDY.W #PaletteFXObjects_CutsceneGunshipEngineFlicker                 ;8BC781;
    JSL.L Spawn_PaletteFXObject                                          ;8BC784;
    LDA.W #CinematicFunction_FlyToZebes_FadingIn                         ;8BC788;
    STA.W CinematicFunction                                              ;8BC78B;
    JSL.L EnableNMI                                                      ;8BC78E;
    LDA.W #$0001                                                         ;8BC792;
    STA.W ScreenFadeDelay                                                ;8BC795;
    STA.W ScreenFadeCounter                                              ;8BC798;
    RTS                                                                  ;8BC79B;


;;; $C79C: Cinematic function - fly to Zebes - fading in ;;;
CinematicFunction_FlyToZebes_FadingIn:
    LDA.W CinematicFrameCounter                                          ;8BC79C;
    BIT.W #$0003                                                         ;8BC79F;
    BNE .fadeIn                                                          ;8BC7A2;
    SEP #$20                                                             ;8BC7A4;
    LDA.B DP_Mosaic                                                      ;8BC7A6;
    SEC                                                                  ;8BC7A8;
    SBC.B #$10                                                           ;8BC7A9;
    STA.B DP_Mosaic                                                      ;8BC7AB;
    REP #$20                                                             ;8BC7AD;

  .fadeIn:
    JSL.L HandleFadingIn                                                 ;8BC7AF;
    SEP #$20                                                             ;8BC7B3;
    LDA.B DP_Brightness                                                  ;8BC7B5;
    CMP.B #$0F                                                           ;8BC7B7;
    BNE .return                                                          ;8BC7B9;
    REP #$20                                                             ;8BC7BB;
    STZ.W ScreenFadeDelay                                                ;8BC7BD;
    STZ.W ScreenFadeCounter                                              ;8BC7C0;
    LDA.W #CinematicFunction_FlyToZebes_MosaicTransition                 ;8BC7C3;
    STA.W CinematicFunction                                              ;8BC7C6;

  .return:
    RTS                                                                  ;8BC7C9;


;;; $C7CA: Cinematic function - fly to Zebes - mosaic transition ;;;
CinematicFunction_FlyToZebes_MosaicTransition:
    LDA.W CinematicFrameCounter                                          ;8BC7CA;
    BIT.W #$0003                                                         ;8BC7CD;
    BNE .return                                                          ;8BC7D0;
    SEP #$20                                                             ;8BC7D2;
    LDA.B DP_Mosaic                                                      ;8BC7D4;
    SEC                                                                  ;8BC7D6;
    SBC.B #$10                                                           ;8BC7D7;
    STA.B DP_Mosaic                                                      ;8BC7D9;
    BIT.B #$F0                                                           ;8BC7DB;
    BEQ .nonZeroMosaicBlockSize                                          ;8BC7DD;
    REP #$20                                                             ;8BC7DF;
    RTS                                                                  ;8BC7E1;

  .nonZeroMosaicBlockSize:
    SEP #$20                                                             ;8BC7E2;
    LDA.B #$07                                                           ;8BC7E4;
    STA.B DP_BGModeSize                                                  ;8BC7E6;
    LDA.B #$80                                                           ;8BC7E8;
    STA.B DP_Mode7Settings                                               ;8BC7EA;
    LDA.B #$00                                                           ;8BC7EC;
    STA.B DP_BG1TilemapAddrSize                                          ;8BC7EE;
    STZ.B DP_BGTilesAddr                                                 ;8BC7F0;
    LDA.B #$11                                                           ;8BC7F2;
    STA.B DP_MainScreenLayers                                            ;8BC7F4;
    REP #$20                                                             ;8BC7F6;
    LDA.W #$0080                                                         ;8BC7F8;
    STA.W CinematicBG1_XPosition                                         ;8BC7FB;
    LDA.W #$FF98                                                         ;8BC7FE;
    STA.W CinematicBG1_YPosition                                         ;8BC801;
    LDA.W #$0020                                                         ;8BC804;
    STA.W Mode7TransformationAngle                                       ;8BC807;
    LDA.W #$0100                                                         ;8BC80A;
    STA.W Mode7TransformationZoomLevel                                   ;8BC80D;
    LDY.W #CinematicSpriteObjectDefinitions_Zebes                        ;8BC810;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC813;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesStars2                  ;8BC816;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC819;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesStars3                  ;8BC81C;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC81F;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesStars4                  ;8BC822;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC825;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesStars5                  ;8BC828;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC82B;
    LDY.W #CinematicSpriteObjectDefinitions_PlanetZebesText              ;8BC82E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC831;
    LDA.W #RTS_8BA38F                                                    ;8BC834;
    STA.W CinematicFunction                                              ;8BC837;

  .return:
    RTS                                                                  ;8BC83A;


;;; $C83B: Initialisation function - cinematic sprite object $CEA3 (Zebes) ;;;
InitFunction_CinematicSpriteObject_Zebes:
    LDA.W #$0088                                                         ;8BC83B;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC83E;
    LDA.W #$006F                                                         ;8BC841;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC844;
    LDA.W #$0E00                                                         ;8BC847;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC84A;
    RTS                                                                  ;8BC84D;


;;; $C84E: Pre-instruction - cinematic sprite object $CEA3 (Zebes) ;;;
PreInstruction_CinematicSpriteObject_Zebes:
    LDA.W CinematicFunction                                              ;8BC84E;
    CMP.W #RTS_8BCADE                                                    ;8BC851;
    BNE .return                                                          ;8BC854;
    LDA.W #PreInstruction_Zebes_SlideSceneAway                           ;8BC856;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BC859;

  .return:
    RTS                                                                  ;8BC85C;


;;; $C85D: Pre-instruction - Zebes - slide scene away ;;;
PreInstruction_Zebes_SlideSceneAway:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BC85D;
    CLC                                                                  ;8BC860;
    ADC.W #$0040                                                         ;8BC861;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BC864;
    XBA                                                                  ;8BC867;
    PHA                                                                  ;8BC868;
    AND.W #$FF00                                                         ;8BC869;
    STA.B DP_Temp14                                                      ;8BC86C;
    PLA                                                                  ;8BC86E;
    AND.W #$00FF                                                         ;8BC86F;
    STA.B DP_Temp12                                                      ;8BC872;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BC874;
    SEC                                                                  ;8BC877;
    SBC.B DP_Temp14                                                      ;8BC878;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BC87A;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BC87D;
    SBC.B DP_Temp12                                                      ;8BC880;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BC882;
    CMP.W #$FF80                                                         ;8BC885;
    BPL .return                                                          ;8BC888;
    LDA.W #$0001                                                         ;8BC88A;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BC88D;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BC890;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BC893;

  .return:
    RTS                                                                  ;8BC896;


if !FEATURE_KEEP_UNREFERENCED
;;; $C897: Initialisation function - cinematic sprite object $CEA9 (unused. Zebes stars 1) ;;;
UNUSED_InitFunction_CinematicSpriteObject_ZebesStars1_8BC897:
    LDA.W #$0080                                                         ;8BC897;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC89A;
    LDA.W #$007F                                                         ;8BC89D;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC8A0;
    LDA.W #$0800                                                         ;8BC8A3;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC8A6;
    RTS                                                                  ;8BC8A9;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $C8AA: Pre-instruction - cinematic sprite object $CEA9/$CF09 (Zebes stars 5) ;;;
PreInstruction_CinematicSpriteObject_ZebesStars5:
    LDA.W CinematicFunction                                              ;8BC8AA;
    CMP.W #RTS_8BCADE                                                    ;8BC8AD;
    BNE .return                                                          ;8BC8B0;
    LDA.W #PreInstruction_ZebesStars5_SlideSceneAway                     ;8BC8B2;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BC8B5;

  .return:
    RTS                                                                  ;8BC8B8;


;;; $C8B9: Pre-instruction - Zebes stars 5 - slide scene away ;;;
PreInstruction_ZebesStars5_SlideSceneAway:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BC8B9;
    CLC                                                                  ;8BC8BC;
    ADC.W #$0020                                                         ;8BC8BD;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BC8C0;
    XBA                                                                  ;8BC8C3;
    PHA                                                                  ;8BC8C4;
    AND.W #$FF00                                                         ;8BC8C5;
    STA.B DP_Temp14                                                      ;8BC8C8;
    PLA                                                                  ;8BC8CA;
    AND.W #$00FF                                                         ;8BC8CB;
    STA.B DP_Temp12                                                      ;8BC8CE;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BC8D0;
    SEC                                                                  ;8BC8D3;
    SBC.B DP_Temp14                                                      ;8BC8D4;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BC8D6;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BC8D9;
    SBC.B DP_Temp12                                                      ;8BC8DC;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BC8DE;
    CMP.W #$FF80                                                         ;8BC8E1;
    BPL .return                                                          ;8BC8E4;
    LDA.W #$0001                                                         ;8BC8E6;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BC8E9;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BC8EC;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BC8EF;
    LDA.W #CinematicFunction_FlyToZebes_LoadGameData                     ;8BC8F2;
    STA.W CinematicFunction                                              ;8BC8F5;

  .return:
    RTS                                                                  ;8BC8F8;


;;; $C8F9: Pre-instruction - cinematic sprite object $CEF7/$CEFD/$CF03 (Zebes stars 2/3/4) ;;;
PreInstruction_CinematicSpriteObject_ZebesStars_2_3_4:
    LDA.W CinematicFunction                                              ;8BC8F9;
    CMP.W #RTS_8BCADE                                                    ;8BC8FC;
    BNE .return                                                          ;8BC8FF;
    LDA.W #PreInstruction_ZebesStars_2_3_4_SlideSceneAway                ;8BC901;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BC904;

  .return:
    RTS                                                                  ;8BC907;


;;; $C908: Pre-instruction - Zebes stars 2/3/4 - slide scene away ;;;
PreInstruction_ZebesStars_2_3_4_SlideSceneAway:
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BC908;
    CLC                                                                  ;8BC90B;
    ADC.W #$0020                                                         ;8BC90C;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BC90F;
    XBA                                                                  ;8BC912;
    PHA                                                                  ;8BC913;
    AND.W #$FF00                                                         ;8BC914;
    STA.B DP_Temp14                                                      ;8BC917;
    PLA                                                                  ;8BC919;
    AND.W #$00FF                                                         ;8BC91A;
    STA.B DP_Temp12                                                      ;8BC91D;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BC91F;
    SEC                                                                  ;8BC922;
    SBC.B DP_Temp14                                                      ;8BC923;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BC925;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BC928;
    SBC.B DP_Temp12                                                      ;8BC92B;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BC92D;
    CMP.W #$FF80                                                         ;8BC930;
    BPL .return                                                          ;8BC933;
    LDA.W #$0001                                                         ;8BC935;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BC938;
    LDA.W #InstList_CinematicSpriteObject_Delete                         ;8BC93B;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BC93E;

  .return:
    RTS                                                                  ;8BC941;


;;; $C942: Initialisation function - cinematic sprite object $CEF7 (Zebes stars 2) ;;;
InitFunction_CinematicSpriteObject_ZebesStars2:
    NOP                                                                  ;8BC942; >_<
    LDA.W #$0030                                                         ;8BC943;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC946;
    LDA.W #$002F                                                         ;8BC949;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC94C;
    LDA.W #$0800                                                         ;8BC94F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC952;
    RTS                                                                  ;8BC955;


;;; $C956: Initialisation function - cinematic sprite object $CEFD (Zebes stars 3) ;;;
InitFunction_CinematicSpriteObject_ZebesStars3:
    NOP                                                                  ;8BC956; >_<
    LDA.W #$00D0                                                         ;8BC957;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC95A;
    LDA.W #$002F                                                         ;8BC95D;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC960;
    LDA.W #$0800                                                         ;8BC963;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC966;
    RTS                                                                  ;8BC969;


;;; $C96A: Initialisation function - cinematic sprite object $CF03 (Zebes stars 4) ;;;
InitFunction_CinematicSpriteObject_ZebesStars4:
    NOP                                                                  ;8BC96A; >_<
    LDA.W #$0030                                                         ;8BC96B;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC96E;
    LDA.W #$00CF                                                         ;8BC971;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC974;
    LDA.W #$0800                                                         ;8BC977;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC97A;
    RTS                                                                  ;8BC97D;


;;; $C97E: Initialisation function - cinematic sprite object $CF09 (Zebes stars 5) ;;;
InitFunction_CinematicSpriteObject_ZebesStars5:
    NOP                                                                  ;8BC97E; >_<
    LDA.W #$00D0                                                         ;8BC97F;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC982;
    LDA.W #$00CF                                                         ;8BC985;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC988;
    LDA.W #$0800                                                         ;8BC98B;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC98E;
    RTS                                                                  ;8BC991;


;;; $C992: Initialisation function - cinematic sprite object $CEAF (Planet Zebes text) ;;;
InitFunction_CinematicSpriteObject_PlanetZebesText:
    LDA.W #$0080                                                         ;8BC992;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC995;
    LDA.W #$00BA                                                         ;8BC998;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC99B;
    LDA.W #$0000                                                         ;8BC99E;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC9A1;
    RTS                                                                  ;8BC9A4;


;;; $C9A5: Instruction - fade in PLANET ZEBES text ;;;
Instruction_FadeInPlanetZebesText:
    PHY                                                                  ;8BC9A5;
    LDY.W #PaletteFXObjects_FadeInPlanetZebesText                        ;8BC9A6;
    JSL.L Spawn_PaletteFXObject                                          ;8BC9A9;
    PLY                                                                  ;8BC9AD;
    RTS                                                                  ;8BC9AE;


;;; $C9AF: Instruction - spawn planet Zebes Japanese text if enabled ;;;
Instruction_SpawnPlanetZebesSubtitleIfNeeded:
    LDA.W AltText                                                        ;8BC9AF;
    BEQ .return                                                          ;8BC9B2;
    PHY                                                                  ;8BC9B4;
    LDY.W #CinematicSpriteObjectDefinitions_PlanetZebesSubtitle          ;8BC9B5;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BC9B8;
    PLY                                                                  ;8BC9BB;

  .return:
    RTS                                                                  ;8BC9BC;


;;; $C9BD: Instruction - fade out PLANET ZEBES text ;;;
Instruction_FadeOutPlanetZebesText:
    PHY                                                                  ;8BC9BD;
    LDY.W #PaletteFXObjects_FadeOutPlanetZebesText                       ;8BC9BE;
    JSL.L Spawn_PaletteFXObject                                          ;8BC9C1;
    PLY                                                                  ;8BC9C5;
    RTS                                                                  ;8BC9C6;


;;; $C9C7: Instruction - start flying to Zebes ;;;
Instruction_StartFlyingToZebes:
    LDA.W #$003E                                                         ;8BC9C7;
    STA.W CinematicBG1_XPosition                                         ;8BC9CA;
    LDA.W #$FF90                                                         ;8BC9CD;
    STA.W CinematicBG1_YPosition                                         ;8BC9D0;
    LDA.W #$0020                                                         ;8BC9D3;
    STA.W Mode7TransformationAngle                                       ;8BC9D6;
    LDA.W #$0010                                                         ;8BC9D9;
    STA.W Mode7TransformationZoomLevel                                   ;8BC9DC;
    LDA.W #CinematicFunction_FlyToZebes_FlyingToZebes_DriftingRight      ;8BC9DF;
    STA.W CinematicFunction                                              ;8BC9E2;
    RTS                                                                  ;8BC9E5;


;;; $C9E6: Initialisation function - cinematic sprite object $CEB5 (planet Zebes Japanese text) ;;;
InitFunction_CinematicSpriteObject_PlanetZebesSubtitle:
    LDA.W #$0080                                                         ;8BC9E6;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BC9E9;
    LDA.W #$00CC                                                         ;8BC9EC;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BC9EF;
    LDA.W #$0000                                                         ;8BC9F2;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BC9F5;
    RTS                                                                  ;8BC9F8;


;;; $C9F9: Cinematic function - fly to Zebes - flying to Zebes - drifting right ;;;
CinematicFunction_FlyToZebes_FlyingToZebes_DriftingRight:
    LDA.W CinematicBG1_YSubPosition                                      ;8BC9F9;
    CLC                                                                  ;8BC9FC;
    ADC.W #$200*!SPF*$10                                                 ;8BC9FD;
    STA.W CinematicBG1_YSubPosition                                      ;8BCA00;
    LDA.W CinematicBG1_YPosition                                         ;8BCA03;
    ADC.W #$0000                                                         ;8BCA06;
    STA.W CinematicBG1_YPosition                                         ;8BCA09;
    LDA.W CinematicBG1_XSubPosition                                      ;8BCA0C;
    SEC                                                                  ;8BCA0F;
    SBC.W #$800*!SPF*$10                                                 ;8BCA10;
    STA.W CinematicBG1_XSubPosition                                      ;8BCA13;
    LDA.W CinematicBG1_XPosition                                         ;8BCA16;
    SBC.W #$0000                                                         ;8BCA19;
    STA.W CinematicBG1_XPosition                                         ;8BCA1C;
    LDA.W Mode7TransformationZoomLevel                                   ;8BCA1F;
    CMP.W #$0480                                                         ;8BCA22;
    BPL .zoomLessThan480                                                 ;8BCA25;
    CLC                                                                  ;8BCA27;
    ADC.W #regional($0004, $0005)                                        ;8BCA28;
    STA.W Mode7TransformationZoomLevel                                   ;8BCA2B;
    RTS                                                                  ;8BCA2E;

  .zoomLessThan480:
    LDA.W #CinematicFunction_FlyToZebes_FlyingToZebes_TurningLeft        ;8BCA2F;
    STA.W CinematicFunction                                              ;8BCA32;
    RTS                                                                  ;8BCA35;


;;; $CA36: Cinematic function - fly to Zebes - flying to Zebes - turning left ;;;
CinematicFunction_FlyToZebes_FlyingToZebes_TurningLeft:
    LDA.W CinematicBG1_YSubPosition                                      ;8BCA36;
    CLC                                                                  ;8BCA39;
    ADC.W #$200*!SPF*$10                                                 ;8BCA3A;
    STA.W CinematicBG1_YSubPosition                                      ;8BCA3D;
    LDA.W CinematicBG1_YPosition                                         ;8BCA40;
    ADC.W #$0000                                                         ;8BCA43;
    STA.W CinematicBG1_YPosition                                         ;8BCA46;
    LDA.W CinematicBG1_XSubPosition                                      ;8BCA49;
    SEC                                                                  ;8BCA4C;
    SBC.W #$800*!SPF*$10                                                 ;8BCA4D;
    STA.W CinematicBG1_XSubPosition                                      ;8BCA50;
    LDA.W CinematicBG1_XPosition                                         ;8BCA53;
    SBC.W #$0000                                                         ;8BCA56;
    STA.W CinematicBG1_XPosition                                         ;8BCA59;
    CMP.W #$FF80                                                         ;8BCA5C;
    BMI .finished                                                        ;8BCA5F;
    LDA.W Mode7TransformationZoomLevel                                   ;8BCA61;
    CLC                                                                  ;8BCA64;
    ADC.W #$0010*!SPF                                                    ;8BCA65;
    STA.W Mode7TransformationZoomLevel                                   ;8BCA68;
    LDA.W Mode7TransformationAngle                                       ;8BCA6B;
    CMP.W #$00E0                                                         ;8BCA6E;
    BEQ .return                                                          ;8BCA71;
    SEC                                                                  ;8BCA73;
    SBC.W #$0001                                                         ;8BCA74;
    AND.W #$00FF                                                         ;8BCA77;
    STA.W Mode7TransformationAngle                                       ;8BCA7A;

  .return:
    RTS                                                                  ;8BCA7D;

  .finished:
    LDA.W #CinematicFunction_FlyToZebes_FlyingToZebes_DriftingLeft       ;8BCA7E;
    STA.W CinematicFunction                                              ;8BCA81;
    RTS                                                                  ;8BCA84;


;;; $CA85: Cinematic function - fly to Zebes - flying to Zebes - drifting left ;;;
CinematicFunction_FlyToZebes_FlyingToZebes_DriftingLeft:
    LDA.W CinematicBG1_YSubPosition                                      ;8BCA85;
    CLC                                                                  ;8BCA88;
    ADC.W #$200*!SPF*$10                                                 ;8BCA89;
    STA.W CinematicBG1_YSubPosition                                      ;8BCA8C;
    LDA.W CinematicBG1_YPosition                                         ;8BCA8F;
    ADC.W #$0000                                                         ;8BCA92;
    STA.W CinematicBG1_YPosition                                         ;8BCA95;
    LDA.W CinematicBG1_XSubPosition                                      ;8BCA98;
    CLC                                                                  ;8BCA9B;
    ADC.W #$200*!SPF*$10                                                 ;8BCA9C;
    STA.W CinematicBG1_XSubPosition                                      ;8BCA9F;
    LDA.W CinematicBG1_XPosition                                         ;8BCAA2;
    ADC.W #$0000                                                         ;8BCAA5;
    STA.W CinematicBG1_XPosition                                         ;8BCAA8;
    LDA.W Mode7TransformationZoomLevel                                   ;8BCAAB;
    CMP.W #$2000                                                         ;8BCAAE;
    BPL .zoomLessThan2000                                                ;8BCAB1;
    CLC                                                                  ;8BCAB3;
    ADC.W #$0020*!SPF                                                    ;8BCAB4;
    STA.W Mode7TransformationZoomLevel                                   ;8BCAB7;
    RTS                                                                  ;8BCABA;

  .zoomLessThan2000:
    SEP #$20                                                             ;8BCABB;
    LDA.B #$10                                                           ;8BCABD;
    STA.B DP_MainScreenLayers                                            ;8BCABF;
    REP #$20                                                             ;8BCAC1;
    LDA.W #CinematicFunction_FlyToZebes_HoldOnSceneFor40Frames           ;8BCAC3;
    STA.W CinematicFunction                                              ;8BCAC6;
    LDA.W #$0040                                                         ;8BCAC9;
    STA.W CinematicFunctionTimer                                         ;8BCACC;
    RTS                                                                  ;8BCACF;


;;; $CAD0: Cinematic function - fly to Zebes - hold on scene for 40h frames ;;;
CinematicFunction_FlyToZebes_HoldOnSceneFor40Frames:
    DEC.W CinematicFunctionTimer                                         ;8BCAD0;
    BEQ .timerExpired                                                    ;8BCAD3;
    BPL .return                                                          ;8BCAD5;

  .timerExpired:
    LDA.W #RTS_8BCADE                                                    ;8BCAD7;
    STA.W CinematicFunction                                              ;8BCADA;

  .return:
    RTS                                                                  ;8BCADD;


;;; $CADE: RTS. Cinematic function - fly to Zebes - slide scene away ;;;
RTS_8BCADE:
    RTS                                                                  ;8BCADE;


;;; $CADF: Cinematic function - fly to Zebes - load game data ;;;
CinematicFunction_FlyToZebes_LoadGameData:
    SEP #$20                                                             ;8BCADF;
    LDA.B #$80                                                           ;8BCAE1;
    STA.B DP_Brightness                                                  ;8BCAE3;
    REP #$20                                                             ;8BCAE5;
    LDA.W #MessageBoxIndex                                               ;8BCAE7;
    DEC                                                                  ;8BCAEA;
    DEC                                                                  ;8BCAEB;
    SEC                                                                  ;8BCAEC;
    SBC.W #Mode7TransformationAngle                                      ;8BCAED;
    TAX                                                                  ;8BCAF0;

  .loop:
    STZ.W Mode7TransformationAngle,X                                     ;8BCAF1;
    DEX                                                                  ;8BCAF4;
    DEX                                                                  ;8BCAF5;
    BPL .loop                                                            ;8BCAF6;
    LDA.W #$0006                                                         ;8BCAF8;
    STA.W GameState                                                      ;8BCAFB;
    LDA.W MaxEnergy                                                      ;8BCAFE;
    STA.W Energy                                                         ;8BCB01;
    RTS                                                                  ;8BCB04;


;;; $CB05: Instruction list - cinematic sprite object $CE55 (intro Mother Brain) ;;;
InstList_CinematicSpriteObject_IntroMotherBrain:
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame1             ;8BCB05;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame2             ;8BCB09;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame3             ;8BCB0D;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame2             ;8BCB11;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCB15;
    dw InstList_CinematicSpriteObject_IntroMotherBrain                   ;8BCB17;


;;; $CB19: Instruction list - intro Mother Brain - start page 2 ;;;
InstList_IntroMotherBrain_StartPage2_0:
    dw Instruction_StartIntroPage2                                       ;8BCB19;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BCB1B;
    dw PreInstruction_IntroMotherBrain_CrossFading                       ;8BCB1D;

InstList_IntroMotherBrain_StartPage2_1:
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame1             ;8BCB1F;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame2             ;8BCB23;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame3             ;8BCB27;
    dw $0010,IntroCeresExplosionSpritemaps_MotherBrainFrame2             ;8BCB2B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCB2F;
    dw InstList_IntroMotherBrain_StartPage2_1                            ;8BCB31;


;;; $CB33: Instruction list - cinematic sprite object $CE5B (metroid egg) ;;;
InstList_CinematicSpriteObject_MetroidEgg:
    dw $0005,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame1      ;8BCB33;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCB37;
    dw InstList_CinematicSpriteObject_MetroidEgg                         ;8BCB39;


;;; $CB3B: Instruction list - metroid egg hatching ;;;
InstList_MetroidEggHatching_0:
    dw $0020,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame1      ;8BCB3B;
    dw CinematicSpriteObject_Instruction_TimerInY,$0004                  ;8BCB3F;

InstList_MetroidEggHatching_1:
    dw $0005,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame1      ;8BCB43;
    dw $0005,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame2      ;8BCB47;
    dw $0005,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame1      ;8BCB4B;
    dw $0005,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame3      ;8BCB4F;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BCB53;
    dw InstList_MetroidEggHatching_1                                     ;8BCB55;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame1      ;8BCB57;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame4      ;8BCB5B;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame5      ;8BCB5F;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame6      ;8BCB63;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame7      ;8BCB67;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame8      ;8BCB6B;
    dw $0050,IntroCeresExplosionSpritemaps_MetroidEggHatchingFrame9      ;8BCB6F;
    dw Instruction_SpawnMetroidEggParticles                              ;8BCB73;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame1       ;8BCB75;

InstList_MetroidEggHatching_2:
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame2       ;8BCB79;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame3       ;8BCB7D;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame4       ;8BCB81;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame5       ;8BCB85;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame6       ;8BCB89;
    dw $0140,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame7       ;8BCB8D;
    dw Instruction_StartIntroPage3                                       ;8BCB91;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BCB93;
    dw PreInstruction_MetroidEgg_DeleteAfterCrossFade                    ;8BCB95;

InstList_MetroidEggHatching_3:
    dw $0050,IntroCeresExplosionSpritemaps_MetroidEggHatchedFrame7       ;8BCB97;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCB9B;
    dw InstList_MetroidEggHatching_3                                     ;8BCB9D;


;;; $CB9F: Instruction list - cinematic sprite object $CE61 (baby metroid being delivered) ;;;
InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_0:
    dw CinematicSpriteObject_Instruction_TimerInY,$000A                  ;8BCB9F;

InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_1:
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame1 ;8BCBA3;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame2 ;8BCBA7;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame3 ;8BCBAB;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame2 ;8BCBAF;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BCBB3;
    dw InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_1        ;8BCBB5;
    dw Instruction_StartIntroPage4                                       ;8BCBB7;

InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_2:
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame1 ;8BCBB9;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame2 ;8BCBBD;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame3 ;8BCBC1;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidDeliveredFrame2 ;8BCBC5;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCBC9;
    dw InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_2        ;8BCBCB;


;;; $CBCD: Instruction list - cinematic sprite object $CE67 (baby metroid being examined) ;;;
InstList_CinematicSpriteObject_BabyMetroidBeingExamined_0:
    dw CinematicSpriteObject_Instruction_TimerInY,$000A                  ;8BCBCD;

InstList_CinematicSpriteObject_BabyMetroidBeingExamined_1:
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame1 ;8BCBD1;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame2 ;8BCBD5;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame3 ;8BCBD9;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame2 ;8BCBDD;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BCBE1;
    dw InstList_CinematicSpriteObject_BabyMetroidBeingExamined_1         ;8BCBE3;
    dw Instruction_StartIntroPage5                                       ;8BCBE5;

InstList_CinematicSpriteObject_BabyMetroidBeingExamined_2:
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame1 ;8BCBE7;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame2 ;8BCBEB;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame3 ;8BCBEF;
    dw $000A*!FPS,IntroCeresExplosionSpritemaps_BabyMetroidExaminedFrame2 ;8BCBF3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCBF7;
    dw InstList_CinematicSpriteObject_BabyMetroidBeingExamined_2         ;8BCBF9;


;;; $CBFB: Instruction list - cinematic sprite object $CE6D (intro text caret) ;;;
InstList_CinematicSpriteObject_IntroTextCaret:
    dw $0005,IntroCeresExplosionSpritemaps_BlinkingTypewriterBlock       ;8BCBFB;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCBFF;
    dw InstList_CinematicSpriteObject_IntroTextCaret                     ;8BCC01;


;;; $CC03: Instruction list - intro text caret - blink ;;;
InstList_IntroTextCaret_Blink:
    dw $0005*!FPS,IntroCeresExplosionSpritemaps_BlinkingTypewriterBlock  ;8BCC03;
    dw $0005*!FPS,$0000                                                  ;8BCC07;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC0B;
    dw InstList_IntroTextCaret_Blink                                     ;8BCC0D;


;;; $CC0F: Instruction list - cinematic sprite object $CE73 (intro Japanese text next-page arrow) ;;;
InstList_CinematicSpriteObject_IntroSubtitleNextPageArrow:
    dw $000A,IntroCeresExplosionSpritemaps_SubtitleNextPageArrowFrame1   ;8BCC0F;
    dw $000A,IntroCeresExplosionSpritemaps_SubtitleNextPageArrowFrame2   ;8BCC13;
    dw $000A,IntroCeresExplosionSpritemaps_SubtitleNextPageArrowFrame3   ;8BCC17;
    dw $000A,IntroCeresExplosionSpritemaps_SubtitleNextPageArrowFrame2   ;8BCC1B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC1F;
    dw InstList_CinematicSpriteObject_IntroSubtitleNextPageArrow         ;8BCC21;


;;; $CC23: Instruction list - intro Japanese text next-page arrow - blink ;;;
InstList_IntroSubtitleNextPageArrow_Blink:
    dw $003C,$0000                                                       ;8BCC23;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC27;
    dw InstList_CinematicSpriteObject_IntroSubtitleNextPageArrow         ;8BCC29;


;;; $CC2B: Instruction list - cinematic sprite object $CE79 (confused baby metroid) ;;;
InstList_CinematicSpriteObject_ConfusedBabyMetroid:
    dw $000A,IntroCeresExplosionSpritemaps_ConfusedBabyMetroidFrame1     ;8BCC2B;
    dw $000A,IntroCeresExplosionSpritemaps_ConfusedBabyMetroidFrame2     ;8BCC2F;
    dw $000A,IntroCeresExplosionSpritemaps_ConfusedBabyMetroidFrame3     ;8BCC33;
    dw $000A,IntroCeresExplosionSpritemaps_ConfusedBabyMetroidFrame2     ;8BCC37;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC3B;
    dw InstList_CinematicSpriteObject_ConfusedBabyMetroid                ;8BCC3D;


;;; $CC3F: Instruction list - cinematic sprite object $CE7F (Ceres under attack large asteroids) ;;;
InstList_CinematicSpriteObject_CeresUnderAttackLargeAsteroid:
    dw $000A,SpaceSpritemaps_CeresUnderAttackLargeAsteroids              ;8BCC3F;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC43;
    dw InstList_CinematicSpriteObject_CeresUnderAttackLargeAsteroid      ;8BCC45;


;;; $CC47: Instruction list - cinematic sprite object $CE85 (Ceres under attack) ;;;
InstList_CinematicSpriteObject_CeresUnderAttack:
    dw $000A,SpaceSpritemaps_CeresUnderAttack                            ;8BCC47;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC4B;
    dw InstList_CinematicSpriteObject_CeresUnderAttack                   ;8BCC4D;


;;; $CC4F: Instruction list - cinematic sprite object $CE8B (Ceres small asteroids) ;;;
InstList_CinematicSpriteObject_CeresSmallAsteroids:
    dw $000A,SpaceSpritemaps_CeresSmallAsteroids                         ;8BCC4F;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC53;
    dw InstList_CinematicSpriteObject_CeresSmallAsteroids                ;8BCC55;


;;; $CC57: Instruction list - cinematic sprite object $CE91 (Ceres purple space vortex) ;;;
InstList_CinematicSpriteObject_CeresPurpleSpaceVortext:
    dw $0001,SpaceSpritemaps_CeresPurpleVortexFrame1                     ;8BCC57;
    dw $0001,SpaceSpritemaps_CeresPurpleVortexFrame2                     ;8BCC5B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC5F;
    dw InstList_CinematicSpriteObject_CeresPurpleSpaceVortext            ;8BCC61;


if !FEATURE_KEEP_UNREFERENCED
;;; $CC63: Unused. Instruction list - cinematic sprite object $CE97 (space colony text) ;;;
UNUSED_InstList_CinematicSpriteObject_SpaceColonyText_8BCC63:
; CinematicSpriteObjectDefinitions_SpaceColony is used instead
    dw $0100,$0000                                                       ;8BCC63;
    dw $000A,UNUSED_SpaceSpritemaps_S_8C92AA                             ;8BCC67;
    dw $000A,UNUSED_SpaceSpritemaps_SP_8C92B1                            ;8BCC6B;
    dw $000A,UNUSED_SpaceSpritemaps_SPA_8C92BD                           ;8BCC6F;
    dw $000A,UNUSED_SpaceSpritemaps_SPAC_8C92CE                          ;8BCC73;
    dw $000A,UNUSED_SpaceSpritemaps_SPACE_8C92E4                         ;8BCC77;
    dw $000A,UNUSED_SpaceSpritemaps_SPACEC_8C92FF                        ;8BCC7B;
    dw $000A,UNUSED_SpaceSpritemaps_SPACECO_8C931F                       ;8BCC7F;
    dw $000A,UNUSED_SpaceSpritemaps_SPACECOL_8C9344                      ;8BCC83;
    dw $000A,UNUSED_SpaceSpritemaps_SPACECOLO_9C936E                     ;8BCC87;
    dw $000A,UNUSED_SpaceSpritemaps_SPACECOLON_8C939D                    ;8BCC8B;
    dw $000A,UNUSED_SpaceSpritemaps_SPACECOLONY_8C921F                   ;8BCC8F;
    dw Instruction_SkipNextInstructionIfDefaultLanguage                  ;8BCC93;
    dw $0080,UNUSED_SpaceSpritemaps_SPACECOLONY_8C921F                   ;8BCC95;
    dw Instruction_FinishFlyToCeres                                      ;8BCC99;

UNUSED_InstList_CinematicSpriteObject_SpaceColonyText_8BCC9B:
    dw $0001,UNUSED_SpaceSpritemaps_SPACECOLONY_8C921F                   ;8BCC9B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCC9F;
    dw UNUSED_InstList_CinematicSpriteObject_SpaceColonyText_8BCC9B      ;8BCCA1;


;;; $CCA3: Unused. Instruction list - cinematic sprite object $CE9D (space colony Japanese text) ;;;
UNUSED_InstList_CineSpriteObject_SpaceColonySubtitle_8BCCA3:
    dw $000A,UNUSED_SpaceSpritemaps_Subtitle_SPACECOLONY_8C9258          ;8BCCA3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCCA7;
    dw UNUSED_InstList_CineSpriteObject_SpaceColonySubtitle_8BCCA3       ;8BCCA9;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $CCAB: Instruction list - cinematic sprite object $CEA3 (Zebes) ;;;
InstList_CinematicSpriteObject_Zebes:
    dw $000A,SpaceSpritemaps_Zebes                                       ;8BCCAB;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCCAF;
    dw InstList_CinematicSpriteObject_Zebes                              ;8BCCB1;


if !FEATURE_KEEP_UNREFERENCED
;;; $CCB3: Instruction list - cinematic sprite object $CEA9 (Zebes stars 1) ;;;
InstList_CinematicSpriteObject_ZebesStars1:
    dw $000A,UNUSED_SpaceSpritemaps_ZebesStars1_8C96CB                   ;8BCCB3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCCB7;
    dw InstList_CinematicSpriteObject_ZebesStars1                        ;8BCCB9;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $CCBB: Instruction list - cinematic sprite object $CEAF (planet Zebes text) ;;;
InstList_CinematicSpriteObject_PlanetZebesText:
    dw regional($0040, $0033),$0000                                      ;8BCCBB;
    dw Instruction_FadeInPlanetZebesText                                 ;8BCCBF;
    dw regional($0020, $0019),SpaceSpritemaps_PlanetZebes                ;8BCCC1;
    dw Instruction_SpawnPlanetZebesSubtitleIfNeeded                      ;8BCCC5;
    dw regional($00C0, $0099),SpaceSpritemaps_PlanetZebes                ;8BCCC7;
    dw Instruction_FadeOutPlanetZebesText                                ;8BCCCB;
    dw $0060,SpaceSpritemaps_PlanetZebes                                 ;8BCCCD;
    dw Instruction_StartFlyingToZebes                                    ;8BCCD1;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCCD3;


;;; $CCD5: Instruction list - cinematic sprite object $CEB5 (planet Zebes Japanese text) ;;;
InstList_CinematicSpriteObject_PlanetZebesSubtitle:
    dw regional($00C0, $0099),SpaceSpritemaps_Subtitle_PlanetZebes       ;8BCCD5;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCCD9;


;;; $CCDB: Instruction list - cinematic sprite object $CEBB (Ceres explosion 1) ;;;
InstList_CinematicSpriteObject_CeresExplosion1:
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame1        ;8BCCDB;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame2        ;8BCCDF;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame3        ;8BCCE3;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame4        ;8BCCE7;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame5        ;8BCCEB;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame6        ;8BCCEF;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCCF3;


;;; $CCF5: Instruction list - cinematic sprite object $CEC1 (Ceres explosion 2) ;;;
InstList_CinematicSpriteObject_CeresExplosion2_0:
    dw CinematicSpriteObject_Instruction_TimerInY,$0006                  ;8BCCF5;

InstList_CinematicSpriteObject_CeresExplosion2_1:
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame1        ;8BCCF9;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame2        ;8BCCFD;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame3        ;8BCD01;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame4        ;8BCD05;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame5        ;8BCD09;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame6        ;8BCD0D;
    dw $0010,$0000                                                       ;8BCD11;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BCD15;
    dw InstList_CinematicSpriteObject_CeresExplosion2_1                  ;8BCD17;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCD19;


;;; $CD1B: Instruction list - cinematic sprite object $CEC7 (Ceres explosion 3) ;;;
InstList_CinematicSpriteObject_CeresExplosion3_0:
    dw CinematicSpriteObject_Instruction_TimerInY,$0007                  ;8BCD1B;

InstList_CinematicSpriteObject_CeresExplosion3_1:
    dw $0005,SpaceSpritemaps_CeresExplosionFrame1                        ;8BCD1F;
    dw $0005,SpaceSpritemaps_CeresExplosionFrame2                        ;8BCD23;
    dw $0005,SpaceSpritemaps_CeresExplosionFrame3                        ;8BCD27;
    dw $0005,SpaceSpritemaps_CeresExplosionFrame4                        ;8BCD2B;
    dw $0008,$0000                                                       ;8BCD2F;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BCD33;
    dw InstList_CinematicSpriteObject_CeresExplosion3_1                  ;8BCD35;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCD37;


;;; $CD39: Instruction list - cinematic sprite object $CECD (metroid egg particle 1) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle1:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle1          ;8BCD39;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD3D;
    dw InstList_CinematicSpriteObject_MetroidEggParticle1                ;8BCD3F;


;;; $CD41: Instruction list - cinematic sprite object $CED3 (metroid egg particle 2) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle2:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle2          ;8BCD41;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD45;
    dw InstList_CinematicSpriteObject_MetroidEggParticle2                ;8BCD47;


;;; $CD49: Instruction list - cinematic sprite object $CED9 (metroid egg particle 3) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle3:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle3          ;8BCD49;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD4D;
    dw InstList_CinematicSpriteObject_MetroidEggParticle3                ;8BCD4F;


;;; $CD51: Instruction list - cinematic sprite object $CEDF (metroid egg particle 4) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle4:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle4          ;8BCD51;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD55;
    dw InstList_CinematicSpriteObject_MetroidEggParticle4                ;8BCD57;


;;; $CD59: Instruction list - cinematic sprite object $CEE5 (metroid egg particle 5) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle5:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle5          ;8BCD59;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD5D;
    dw InstList_CinematicSpriteObject_MetroidEggParticle5                ;8BCD5F;


;;; $CD61: Instruction list - cinematic sprite object $CEEB (metroid egg particle 6) ;;;
InstList_CinematicSpriteObject_MetroidEggParticle6:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsParticle6          ;8BCD61;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD65;
    dw InstList_CinematicSpriteObject_MetroidEggParticle6                ;8BCD67;


;;; $CD69: Instruction list - cinematic sprite object $CEF1 (metroid egg slime drops) ;;;
InstList_CinematicSpriteObject_MetroidEggSlimeDrops:
    dw $0001,IntroCeresExplosionSpritemaps_MetroidEggsSlimeDropsFrame1   ;8BCD69;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD6D;
    dw InstList_CinematicSpriteObject_MetroidEggSlimeDrops               ;8BCD6F;


;;; $CD71: Instruction list - metroid egg slime drops - hit ground ;;;
InstList_MetroidEggParticle_HitGround:
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggsSlimeDropsFrame2   ;8BCD71;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggsSlimeDropsFrame3   ;8BCD75;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggsSlimeDropsFrame4   ;8BCD79;
    dw $000A,IntroCeresExplosionSpritemaps_MetroidEggsSlimeDropsFrame5   ;8BCD7D;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCD81;


;;; $CD83: Instruction list - cinematic sprite object $CEF7 (Zebes stars 2) ;;;
InstList_CinematicSpriteObject_ZebesStars2:
    dw $000A,SpaceSpritemaps_ZebesStars2                                 ;8BCD83;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD87;
    dw InstList_CinematicSpriteObject_ZebesStars2                        ;8BCD89;


;;; $CD8B: Instruction list - cinematic sprite object $CEFD (Zebes stars 3) ;;;
InstList_CinematicSpriteObject_ZebesStars3:
    dw $000A,SpaceSpritemaps_ZebesStars3                                 ;8BCD8B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD8F;
    dw InstList_CinematicSpriteObject_ZebesStars3                        ;8BCD91;


;;; $CD93: Instruction list - cinematic sprite object $CF03 (Zebes stars 4) ;;;
InstList_CinematicSpriteObject_ZebesStars4:
    dw $000A,SpaceSpritemaps_ZebesStars4                                 ;8BCD93;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD97;
    dw InstList_CinematicSpriteObject_ZebesStars4                        ;8BCD99;


;;; $CD9B: Instruction list - cinematic sprite object $CF09 (Zebes stars 5) ;;;
InstList_CinematicSpriteObject_ZebesStars5:
    dw $000A,SpaceSpritemaps_ZebesStars5                                 ;8BCD9B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCD9F;
    dw InstList_CinematicSpriteObject_ZebesStars5                        ;8BCDA1;


;;; $CDA3: Instruction list - cinematic sprite object $CF0F (Ceres stars) ;;;
InstList_CinematicSpriteObject_CeresStars:
    dw $000A,SpaceSpritemaps_CeresStars                                  ;8BCDA3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCDA7;
    dw InstList_CinematicSpriteObject_CeresStars                         ;8BCDA9;


;;; $CDAB: Instruction list - cinematic sprite object $CF15 (intro Mother Brain explosion - big) ;;;
InstList_CinematicSpriteObject_IntroMotherBrainExplosion_Big:
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame1          ;8BCDAB;
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame2          ;8BCDAF;
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame3          ;8BCDB3;
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame4          ;8BCDB7;
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame5          ;8BCDBB;
    dw $0006,SpaceSpritemaps_IntroMotherBrainExplosionBigFrame6          ;8BCDBF;
    dw $0010,$0000                                                       ;8BCDC3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCDC7;
    dw InstList_CinematicSpriteObject_IntroMotherBrainExplosion_Big      ;8BCDC9;


;;; $CDCB: Instruction list - cinematic sprite object $CF1B (intro Mother Brain explosion - small) ;;;
InstList_CineSpriteObject_IntroMotherBrainExplosion_Small:
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame1        ;8BCDCB;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame2        ;8BCDCF;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame3        ;8BCDD3;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame4        ;8BCDD7;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame5        ;8BCDDB;
    dw $0003,SpaceSpritemaps_IntroMotherBrainExplosionSmallFrame6        ;8BCDDF;
    dw $0010,$0000                                                       ;8BCDE3;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCDE7;
    dw InstList_CineSpriteObject_IntroMotherBrainExplosion_Small         ;8BCDE9;


;;; $CDEB: Instruction list - cinematic sprite object $CF21 (intro rinka) ;;;
InstList_CinematicSpriteObject_IntroRinka_0:
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame1                   ;8BCDEB;
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame2                   ;8BCDEF;
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame3                   ;8BCDF3;
    dw Instruction_StartMoving_IntroRinka                                ;8BCDF7;

InstList_CinematicSpriteObject_IntroRinka_1:
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame2                   ;8BCDF9;
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame1                   ;8BCDFD;
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame2                   ;8BCE01;
    dw $000A,IntroCeresExplosionSpritemaps_RinkaFrame3                   ;8BCE05;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCE09;
    dw InstList_CinematicSpriteObject_IntroRinka_1                       ;8BCE0B;


;;; $CE0D: Instruction list - cinematic sprite object $CF27 (rinka spawner) ;;;
InstList_CinematicSpriteObject_RinkaSpawner:
    dw $004A,$0000                                                       ;8BCE0D;
    dw Instruction_Spawn_IntroRinkas_0_1                                 ;8BCE11;
    dw $0080,$0000                                                       ;8BCE13;
    dw Instruction_Spawn_IntroRinkas_2_3                                 ;8BCE17;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCE19;


;;; $CE1B: Instruction list - cinematic sprite object $CF2D (Ceres final explosion) ;;;
InstList_CinematicSpriteObject_CeresFinalExplosion:
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame1                   ;8BCE1B;
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame2                   ;8BCE1F;
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame3                   ;8BCE23;
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame4                   ;8BCE27;
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame5                   ;8BCE2B;
    dw $0005,SpaceSpritemaps_CeresFinalExplosionFrame6                   ;8BCE2F;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCE33;


;;; $CE35: Instruction list - cinematic sprite object $CF33 (Ceres explosion spawner) ;;;
InstList_CinematicSpriteObject_CeresExplosionSpawner:
    dw $0080,$0000                                                       ;8BCE35;
    dw Instruction_SpawnCeresExplosions1                                 ;8BCE39;
    dw $0050,$0000                                                       ;8BCE3B;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BCE3F;
    dw PreInst_CeresExplosionSpawner_SpawnExplosion2EveryCFrames         ;8BCE41;
    dw $0040,$0000                                                       ;8BCE43;
    dw Instruction_SpawnCeresExplosions3                                 ;8BCE47;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCE49;


;;; $CE4B: Instruction list - cinematic sprite object $CF39 (Ceres explosion large asteroids) ;;;
InstList_CinematicSpriteObject_CeresExplosionLargeAsteroids:
    dw $000A,SpaceSpritemaps_CeresExplosionLargeAsteroids                ;8BCE4B;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BCE4F;
    dw InstList_CinematicSpriteObject_CeresExplosionLargeAsteroids       ;8BCE51;


;;; $CE53: Instruction list - delete ;;;
InstList_CinematicSpriteObject_Delete:
    dw CinematicSpriteObject_Instruction_Delete                          ;8BCE53;


;;; $CE55: Cinematic sprite object definitions - intro, Ceres, Zebes ;;;
CinematicSpriteObjectDefinitions_IntroMotherBrain:
    dw InitFunction_CinematicSpriteObject_IntroMotherBrain               ;8BCE55; Initialisation function
    dw PreInstruction_CinematicSpriteObject_IntroMotherBrain             ;8BCE57; Pre-instruction
    dw InstList_CinematicSpriteObject_IntroMotherBrain                   ;8BCE59; Instruction list

CinematicSpriteObjectDefinitions_MetroidEgg:
    dw InitFunction_CinematicSpriteObject_MetroidEgg                     ;8BCE5B; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEgg                   ;8BCE5D; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEgg                         ;8BCE5F; Instruction list

CinematicSpriteObjectDefinitions_BabyMetroidBeingDelivered:
    dw InitFunction_CinematicSpriteObject_BabyMetroidBeingDelivered      ;8BCE61; Initialisation function
    dw PreInst_CinematicSpriteObject_BabyMetroidBeingDelivered           ;8BCE63; Pre-instruction
    dw InstList_CinematicSpriteObject_BabyMetroidBeingDelivered_0        ;8BCE65; Instruction list

CinematicSpriteObjectDefinitions_BabyMetroidBeingExamined:
    dw InitFunction_CinematicSpriteObject_BabyMetroidBeingExamined       ;8BCE67; Initialisation function
    dw PreInst_CinematicSpriteObject_BabyMetroidBeingExamined            ;8BCE69; Pre-instruction
    dw InstList_CinematicSpriteObject_BabyMetroidBeingExamined_0         ;8BCE6B; Instruction list

CinematicSpriteObjectDefinitions_IntroTextCaret:
    dw InitFunction_CinematicSpriteObject_IntroTextCaret                 ;8BCE6D; Initialisation function
    dw RTS_8BA8D4                                                        ;8BCE6F; Pre-instruction
    dw InstList_CinematicSpriteObject_IntroTextCaret                     ;8BCE71; Instruction list

CinematicSpriteObjectDefinitions_IntroSubtitleNextPageArrow:
    dw InitFunc_CinematicSpriteObject_IntroSubtitleNextPageArrow         ;8BCE73; Initialisation function
    dw PreInst_CinematicSpriteObject_IntroSubtitleNextPageArrow          ;8BCE75; Pre-instruction
    dw InstList_CinematicSpriteObject_IntroSubtitleNextPageArrow         ;8BCE77; Instruction list

CinematicSpriteObjectDefinitions_ConfusedBabyMetroid:
    dw InitFunction_CinematicSpriteObject_ConfusedBabyMetroid            ;8BCE79; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ConfusedBabyMetroid          ;8BCE7B; Pre-instruction
    dw InstList_CinematicSpriteObject_ConfusedBabyMetroid                ;8BCE7D; Instruction list

CinematicSpriteObjectDefs_CeresUnderAttackLargeAsteroids:
    dw InitFunc_CinematicSpriteObject_CeresExplosionLargeAsteroids       ;8BCE7F; Initialisation function
    dw PreInst_CinematicSpriteObject_CeresExplosionLargeAsteroids        ;8BCE81; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresUnderAttackLargeAsteroid      ;8BCE83; Instruction list

CinematicSpriteObjectDefinitions_CeresUnderAttack:
    dw InitFunction_CinematicSpriteObject_CeresUnderAttack               ;8BCE85; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresUnderAttack             ;8BCE87; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresUnderAttack                   ;8BCE89; Instruction list

CinematicSpriteObjectDefinitions_CeresSmallAsteroids:
    dw InitFunction_CinematicSpriteObject_CeresSmallAsteroid             ;8BCE8B; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresSmallAsteroid           ;8BCE8D; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresSmallAsteroids                ;8BCE8F; Instruction list

CinematicSpriteObjectDefinitions_CeresPurpleSpaceVortex:
    dw InitFunction_CinematicSpriteObject_CeresPurpleSpaceVortex         ;8BCE91; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresPurpleSpaceVortex       ;8BCE93; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresPurpleSpaceVortext            ;8BCE95; Instruction list

if !FEATURE_KEEP_UNREFERENCED
UNUSED_CinematicSpriteObjectDefs_SpaceColonyText_8BCE97:
    dw UNUSED_InitFunc_CinematicSpriteObject_SpaceColonyText_8BC083      ;8BCE97; Initialisation function
    dw RTS_8B93D9                                                        ;8BCE99; Pre-instruction
    dw UNUSED_InstList_CinematicSpriteObject_SpaceColonyText_8BCC63      ;8BCE9B; Instruction list

UNUSED_CinematicSpriteObjectDefs_SpaceColonySubtitle_8BCE9D:
    dw UNUSED_InitFunc_CineSpriteObject_SpaceColonySubtitle_8BC0B2       ;8BCE9D; Initialisation function
    dw RTS_8B93D9                                                        ;8BCE9F; Pre-instruction
    dw UNUSED_InstList_CineSpriteObject_SpaceColonySubtitle_8BCCA3       ;8BCEA1; Instruction list
endif ; !FEATURE_KEEP_UNREFERENCED

CinematicSpriteObjectDefinitions_Zebes:
    dw InitFunction_CinematicSpriteObject_Zebes                          ;8BCEA3; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Zebes                        ;8BCEA5; Pre-instruction
    dw InstList_CinematicSpriteObject_Zebes                              ;8BCEA7; Instruction list

if !FEATURE_KEEP_UNREFERENCED
UNUSED_CinematicSpriteObjectDefinitions_ZebesStars1_8BCEA9:
    dw UNUSED_InitFunction_CinematicSpriteObject_ZebesStars1_8BC897      ;8BCEA9; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ZebesStars5                  ;8BCEAB; Pre-instruction
    dw InstList_CinematicSpriteObject_ZebesStars1                        ;8BCEAD; Instruction list
endif ; !FEATURE_KEEP_UNREFERENCED

CinematicSpriteObjectDefinitions_PlanetZebesText:
    dw InitFunction_CinematicSpriteObject_PlanetZebesText                ;8BCEAF; Initialisation function
    dw RTS_8B93D9                                                        ;8BCEB1; Pre-instruction
    dw InstList_CinematicSpriteObject_PlanetZebesText                    ;8BCEB3; Instruction list

CinematicSpriteObjectDefinitions_PlanetZebesSubtitle:
    dw InitFunction_CinematicSpriteObject_PlanetZebesSubtitle            ;8BCEB5; Initialisation function
    dw RTS_8B93D9                                                        ;8BCEB7; Pre-instruction
    dw InstList_CinematicSpriteObject_PlanetZebesSubtitle                ;8BCEB9; Instruction list

CinematicSpriteObjectDefinitions_CeresExplosion1:
    dw InitFunction_CinematicSpriteObject_CeresExplosion1                ;8BCEBB; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresExplosion               ;8BCEBD; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresExplosion1                    ;8BCEBF; Instruction list

CinematicSpriteObjectDefinitions_CeresExplosion2:
    dw InitFunction_CinematicSpriteObject_CeresExplosion2                ;8BCEC1; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresExplosion               ;8BCEC3; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresExplosion2_0                  ;8BCEC5; Instruction list

CinematicSpriteObjectDefinitions_CeresExplosion3:
    dw InitFunction_CinematicSpriteObject_CeresExplosion3                ;8BCEC7; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresExplosion               ;8BCEC9; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresExplosion3_0                  ;8BCECB; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle1:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCECD; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCECF; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle1                ;8BCED1; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle2:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCED3; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCED5; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle2                ;8BCED7; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle3:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCED9; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCEDB; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle3                ;8BCEDD; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle4:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCEDF; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCEE1; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle4                ;8BCEE3; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle5:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCEE5; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCEE7; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle5                ;8BCEE9; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggParticle6:
    dw InitFunction_CinematicSpriteObject_MetroidEggParticles            ;8BCEEB; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggParticle           ;8BCEED; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggParticle6                ;8BCEEF; Instruction list

CinematicSpriteObjectDefinitions_MetroidEggSlimeDrops:
    dw InitFunction_CinematicSpriteObject_MetroidEggSlimeDrops           ;8BCEF1; Initialisation function
    dw PreInstruction_CinematicSpriteObject_MetroidEggSlimeDrops         ;8BCEF3; Pre-instruction
    dw InstList_CinematicSpriteObject_MetroidEggSlimeDrops               ;8BCEF5; Instruction list

CinematicSpriteObjectDefinitions_ZebesStars2:
    dw InitFunction_CinematicSpriteObject_ZebesStars2                    ;8BCEF7; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ZebesStars_2_3_4             ;8BCEF9; Pre-instruction
    dw InstList_CinematicSpriteObject_ZebesStars2                        ;8BCEFB; Instruction list

CinematicSpriteObjectDefinitions_ZebesStars3:
    dw InitFunction_CinematicSpriteObject_ZebesStars3                    ;8BCEFD; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ZebesStars_2_3_4             ;8BCEFF; Pre-instruction
    dw InstList_CinematicSpriteObject_ZebesStars3                        ;8BCF01; Instruction list

CinematicSpriteObjectDefinitions_ZebesStars4:
    dw InitFunction_CinematicSpriteObject_ZebesStars4                    ;8BCF03; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ZebesStars_2_3_4             ;8BCF05; Pre-instruction
    dw InstList_CinematicSpriteObject_ZebesStars4                        ;8BCF07; Instruction list

CinematicSpriteObjectDefinitions_ZebesStars5:
    dw InitFunction_CinematicSpriteObject_ZebesStars5                    ;8BCF09; Initialisation function
    dw PreInstruction_CinematicSpriteObject_ZebesStars5                  ;8BCF0B; Pre-instruction
    dw InstList_CinematicSpriteObject_ZebesStars5                        ;8BCF0D; Instruction list

CinematicSpriteObjectDefinitions_CeresStars:
    dw InitFunction_CinematicSpriteObject_CeresStars                     ;8BCF0F; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresStars                   ;8BCF11; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresStars                         ;8BCF13; Instruction list

CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Big:
    dw InitFunc_CinematicSpriteObject_IntroMotherBrainExplosion_Big      ;8BCF15; Initialisation function
    dw PreInst_CinematicSpriteObject_IntroMotherBrainExplosion           ;8BCF17; Pre-instruction
    dw InstList_CinematicSpriteObject_IntroMotherBrainExplosion_Big      ;8BCF19; Instruction list

CinematicSpriteObjectDefs_IntroMotherBrainExplosion_Small:
    dw InitFunc_CineSpriteObject_IntroMotherBrainExplosion_Small         ;8BCF1B; Initialisation function
    dw PreInst_CinematicSpriteObject_IntroMotherBrainExplosion           ;8BCF1D; Pre-instruction
    dw InstList_CineSpriteObject_IntroMotherBrainExplosion_Small         ;8BCF1F; Instruction list

CinematicSpriteObjectDefinitions_IntroRinka:
    dw InitFunction_CinematicSpriteObject_IntroRinka                     ;8BCF21; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF23; Pre-instruction
    dw InstList_CinematicSpriteObject_IntroRinka_0                       ;8BCF25; Instruction list

CinematicSpriteObjectDefinitions_RinkaSpawner:
    dw RTS_8B93D9                                                        ;8BCF27; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF29; Pre-instruction
    dw InstList_CinematicSpriteObject_RinkaSpawner                       ;8BCF2B; Instruction list

CinematicSpriteObjectDefinitions_CeresFinalExplosion:
    dw InitFunction_CinematicSpriteObject_CeresFinalExplosion            ;8BCF2D; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CeresExplosion               ;8BCF2F; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresFinalExplosion                ;8BCF31; Instruction list

CinematicSpriteObjectDefinitions_CeresExplosionSpawner:
    dw RTS_8B93D9                                                        ;8BCF33; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF35; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresExplosionSpawner              ;8BCF37; Instruction list

CinematicSpriteObjectDefs_CeresExplosionLargeAsteroids:
    dw InitFunc_CinematicSpriteObject_CeresExplosionLargeAsteroids       ;8BCF39; Initialisation function
    dw PreInst_CinematicSpriteObject_CeresExplosionLargeAsteroids        ;8BCF3B; Pre-instruction
    dw InstList_CinematicSpriteObject_CeresExplosionLargeAsteroids       ;8BCF3D; Instruction list


;;; $CF3F: Cinematic BG object definitions - intro, Ceres ;;;
CinematicSpriteObjectDefinitions_IntroTextPage1:
    dw RTS_8B93D9                                                        ;8BCF3F; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF41; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage1                         ;8BCF43; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_IntroTextPage2:
    dw RTS_8B93D9                                                        ;8BCF45; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF47; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage2                         ;8BCF49; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_IntroTextPage3:
    dw RTS_8B93D9                                                        ;8BCF4B; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF4D; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage3                         ;8BCF4F; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_IntroTextPage4:
    dw RTS_8B93D9                                                        ;8BCF51; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF53; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage4                         ;8BCF55; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_IntroTextPage5:
    dw RTS_8B93D9                                                        ;8BCF57; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF59; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage5                         ;8BCF5B; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_IntroTextPage6:
    dw RTS_8B93D9                                                        ;8BCF5D; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF5F; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage6                         ;8BCF61; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_SamusBlinking:
    dw RTS_8B93D9                                                        ;8BCF63; Initialisation function
    dw PreInstruction_CinematicBGObject_SamusBlinking                    ;8BCF65; Pre-instruction
    dw CinematicBGObjectInstLists_SamusBlinking                          ;8BCF67; Instruction list (bank $8C)

CinematicSpriteObjectDefinitions_SpaceColony:
    dw RTS_8B93D9                                                        ;8BCF69; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF6B; Pre-instruction
    dw CinematicBGObjectInstLists_SpaceColony                            ;8BCF6D; Instruction list (bank $8C)

if !FEATURE_KEEP_UNREFERENCED
UNUSED_CinematicSpriteObjectDefs_IntroTextPage1_8BCF6F:
    dw RTS_8B93D9                                                        ;8BCF6F; Initialisation function
    dw RTS_8B93D9                                                        ;8BCF71; Pre-instruction
    dw CinematicBGObjectInstLists_IntroTextPage1                         ;8BCF73; Instruction list (bank $8C)
endif ; !FEATURE_KEEP_UNREFERENCED


; Format:
;     dddd,nnnn
;     tttt,bbbb
;     tttt,bbbb
;     ...
; where
;     d: Japanese text tiles destination offset ($7E:4000 + d)
;     n: Number of characters
;     t: Top Japanese text tiles source offset ($7F:A000 + t)
;     b: Bottom Japanese text tiles source offset ($7F:A000 + b)

;;; $CF75: Page 1 - top line ;;;
IntroSubtitleData_Page1_TopLine:                                         ;8BCF75;
; 私が メトロイドの存在を知ったのは (I learnt of the metroids' existence)
    dw $0040,$0011
    dw $0A60,$0B60
    dw $04E0,$0150
    dw $0EF0,$0EF0
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10
    dw $0280,$0380
    dw $0C70,$0D70
    dw $0C80,$0D80
    dw $04C0,$05C0
    dw $08E0,$09E0
    dw $0EF0,$0760
    dw $00F0,$01F0
    dw $0280,$0380
    dw $0290,$0390


;;; $CFBD: Page 1 - bottom line ;;;
IntroSubtitleData_Page1_BottomLine:                                      ;8BCFBD;
; 惑星ゼーベスでの戦いの時だった (it was during the battle on planet Zebes)
    dw $01C0,$000F
    dw $0680,$0780
    dw $0690,$0790
    dw $0E80,$0F80
    dw $0650,$0750
    dw $0E40,$0F40
    dw $0E60,$0F60
    dw $04F0,$0320
    dw $0280,$0380
    dw $08F0,$09F0
    dw $0010,$0110
    dw $0280,$0380
    dw $0C90,$0D90
    dw $05E0,$01F0
    dw $0EF0,$0760
    dw $00F0,$01F0


;;; $CFFD: Page 2 - subpage 1 - top line ;;;
IntroSubtitleData_Page2_Subpage1_TopLine:                                ;8BCFFD;
; その後 私は惑星ＳＲ３８８へ メトロイドを (after that, I, to planet SR388, with the metroid)
    dw $0020,$0015
    dw $00E0,$01E0
    dw $0280,$0380
    dw $0A20,$0B20
    dw $0EF0,$0EF0
    dw $0A60,$0B60
    dw $0290,$0390
    dw $0680,$0780
    dw $0690,$0790
    dw $0660,$07E0
    dw $0670,$0770
    dw $06E0,$07E0
    dw $06F0,$07F0
    dw $06F0,$07F0
    dw $02C0,$03C0
    dw $0EF0,$0EF0
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10
    dw $04C0,$05C0


;;; $D055: Page 2 - subpage 1 - bottom line ;;;
IntroSubtitleData_Page2_Subpage1_BottomLine:                             ;8BD055;
; 壊滅させるために向った (headed there to destroy it)
    dw $01A0,$000B
    dw $0A30,$0B30
    dw $0A40,$0B40
    dw $00A0,$01A0
    dw $00D0,$01D0
    dw $0480,$0580
    dw $00F0,$01F0
    dw $0410,$0510
    dw $0250,$0350
    dw $0A50,$0B50
    dw $0EF0,$0760
    dw $00F0,$01F0


;;; $D085: Page 2 - subpage 2 - top line ;;;
IntroSubtitleData_Page2_Subpage2_TopLine:                                ;8BD085;
; そこで 唯一の生き残りであるベビーメトロイド (there, the only baby metroid left alive)
    dw $0010,$0016
    dw $00E0,$01E0
    dw $0090,$0190
    dw $04F0,$0320
    dw $0EF0,$0EF0
    dw $0A70,$0B70
    dw $0A80,$0B80
    dw $0280,$0380
    dw $0A90,$0B90
    dw $0060,$0160
    dw $0AA0,$0BA0
    dw $0470,$0570
    dw $04F0,$0320
    dw $0000,$0100
    dw $0480,$0580
    dw $0E40,$0F40
    dw $0E50,$0F50
    dw $0650,$0750
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10


;;; $D0E1: Page 2 - subpage 2 - bottom line ;;;
IntroSubtitleData_Page2_Subpage2_BottomLine:                             ;8BD0E1;
; を捕獲した (I captured)
    dw $0190,$0005
    dw $04C0,$05C0
    dw $06A0,$07A0
    dw $06B0,$07B0
    dw $00B0,$01B0
    dw $00F0,$01F0


;;; $D0F9: Page 3 - subpage 1 ;;;
IntroSubtitleData_Page3_Subpage1:                                        ;8BD0F9;
; 正確にはベビーメトロイドがついて来たと言うべきだ (rather, I should say the metroid followed me)
    dw $0000,$0018
    dw $06C0,$07C0
    dw $06D0,$07D0
    dw $0250,$0350
    dw $0290,$0390
    dw $0E40,$0F40
    dw $0E50,$0F50
    dw $0650,$0750
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10
    dw $04E0,$0150
    dw $0210,$0310
    dw $0010,$0110
    dw $0220,$0320
    dw $0A00,$0B00
    dw $00F0,$01F0
    dw $0230,$0330
    dw $0A10,$0B10
    dw $0020,$0120
    dw $0E40,$0F40
    dw $0060,$0160
    dw $05E0,$01F0


;;; $D15D: Page 3 - subpage 2 ;;;
IntroSubtitleData_Page3_Subpage2:                                        ;8BD15D;
; 生まれてすぐ目に入った私を母親だと思った様だ (when it was born, it seemed to think that I, whom it immediately noticed, was its mother)
    dw $0010,$0016
    dw $0A90,$0B90
    dw $02E0,$03E0
    dw $0490,$0590
    dw $0220,$0320
    dw $00C0,$01C0
    dw $05F0,$0170
    dw $0AD0,$0BD0
    dw $0250,$0350
    dw $0CB0,$0DB0
    dw $0EF0,$0760
    dw $00F0,$01F0
    dw $0A60,$0B60
    dw $04C0,$05C0
    dw $08A0,$09A0
    dw $08B0,$09B0
    dw $05E0,$01F0
    dw $0230,$0330
    dw $08C0,$09C0
    dw $0EF0,$0760
    dw $00F0,$01F0
    dw $0C50,$0D50
    dw $05E0,$01F0


;;; $D1B9: Page 4 - subpage 1 - top line ;;;
IntroSubtitleData_Page4_Subpage1_TopLine:                                ;8BD1B9;
; そのベビーメトロイドを私はスペースコロニーの (I went to a space colony with this baby metroid)
    dw $0010,$0016
    dw $00E0,$01E0
    dw $0280,$0380
    dw $0E40,$0F40
    dw $0E50,$0F50
    dw $0650,$0750
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10
    dw $04C0,$05C0
    dw $0A60,$0B60
    dw $0290,$0390
    dw $0E60,$0F60
    dw $0E70,$0F40
    dw $0650,$0750
    dw $0E60,$0F60
    dw $0E90,$0F90
    dw $0E20,$0F20
    dw $0EA0,$0FA0
    dw $0650,$0750
    dw $0280,$0380


;;; $D215: Page 4 - subpage 1 - bottom line ;;;
IntroSubtitleData_Page4_Subpage1_BottomLine:                             ;8BD215;
; 宇宙科学アカデミーへと持ち込んだ (the Space Science Academy)
    dw $0190,$0010
    dw $0CE0,$0DE0
    dw $0CF0,$0DF0
    dw $0C20,$0D20
    dw $0C30,$0D30
    dw $0610,$0710
    dw $0620,$0720
    dw $0630,$0730
    dw $0640,$0740
    dw $0650,$0750
    dw $02C0,$03C0
    dw $0230,$0330
    dw $0C60,$0D60
    dw $0200,$0300
    dw $08D0,$09D0
    dw $04D0,$05D0
    dw $05E0,$01F0


;;; $D259: Page 4 - subpage 2 - top line ;;;
IntroSubtitleData_Page4_Subpage2_TopLine:                                ;8BD259;
; メトロイドの優れた特性を宇宙の未来に (with the metroid's amazing special powers, for the future of space)
    dw $0030,$0012
    dw $0E00,$0F00
    dw $0E10,$0F10
    dw $0E20,$0F20
    dw $0E30,$0F30
    dw $0F70,$0F10
    dw $0280,$0380
    dw $0AB0,$0BB0
    dw $0490,$0590
    dw $00F0,$01F0
    dw $0CC0,$0DC0
    dw $0CD0,$0DD0
    dw $04C0,$05C0
    dw $0CE0,$0DE0
    dw $0CF0,$0DF0
    dw $0280,$0380
    dw $0CA0,$0DA0
    dw $0A00,$0B00
    dw $0250,$0350


;;; $D2A5: Page 4 - subpage 2 - bottom line ;;;
IntroSubtitleData_Page4_Subpage2_BottomLine:                             ;8BD2A5;
; 役立たせるために・・・ (in order to harness it...)
    dw $01B0,$000B
    dw $0800,$0900
    dw $0810,$0910
    dw $00F0,$01F0
    dw $00D0,$01D0
    dw $0480,$0580
    dw $00F0,$01F0
    dw $0410,$0510
    dw $0250,$0350
    dw $0EF0,$0600
    dw $0EF0,$0600
    dw $0EF0,$0600


;;; $D2D5: Page 5 - subpage 1 ;;;
IntroSubtitleData_Page5_Subpage1:                                        ;8BD2D5;
; 研究は順調に進みつつあった (research was continuing smoothly)
    dw $0050,$000D
    dw $0860,$0960
    dw $0870,$0970
    dw $0290,$0390
    dw $0840,$0940
    dw $0850,$0950
    dw $0250,$0350
    dw $0C40,$0D40
    dw $02F0,$03F0
    dw $0210,$0310
    dw $0210,$0310
    dw $0000,$0100
    dw $0EF0,$0760
    dw $00F0,$01F0


;;; $D30D: Page 5 - subpage 2 ;;;
IntroSubtitleData_Page5_Subpage2:                                        ;8BD30D;
; そんなある日スペースコロニーから突然連絡が入った (one day I got a sudden transmission from the space colony)
    dw $0000,$0018
    dw $00E0,$01E0
    dw $04D0,$05D0
    dw $0240,$0340
    dw $0000,$0100
    dw $0480,$0580
    dw $0AC0,$0BC0
    dw $0E60,$0F60
    dw $0E70,$0F40
    dw $0650,$0750
    dw $0E60,$0F60
    dw $0E90,$0F90
    dw $0E20,$0F20
    dw $0EA0,$0FA0
    dw $0650,$0750
    dw $0050,$0150
    dw $0460,$0560
    dw $0880,$0980
    dw $0890,$0990
    dw $0820,$0920
    dw $0830,$0930
    dw $04E0,$0150
    dw $0CB0,$0DB0
    dw $0EF0,$0760
    dw $00F0,$01F0


;;; $D371: Page 6 ;;;
IntroSubtitleData_Page6:                                                 ;8BD371;
; 非常事態だ (it's an emergency)
    dw $0090,$0005
    dw $0AE0,$0BE0
    dw $0AF0,$0BF0
    dw $0C00,$0D00
    dw $0C10,$0D10
    dw $05E0,$01F0


;;; $D389: Instruction list - mode 7 object $D401 (page 1) ;;;
InstList_Mode7Object_Page1:
    dw Instruction_LoadIntroSubtitlePage1                                ;8BD389;
    dw $0001,Mode7_Transfer_Data                                         ;8BD38B;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate             ;8BD38F;
    dw Mode7Objects_Instruction_Delete                                   ;8BD391;


if !PAL != 0
InstList_Mode7Object_Page1_Subpage2:
    dw $0001,Mode7_Transfer_Data
    dw Mode7Objects_Instruction_GotoY
    dw InstList_Mode7Object_Page1_Subpage2

InstList_EnableCinematicBGTilemapUpdates_Page1DoneInput:
    dw Instruction_EnableCinematicBGTilemapUpdates_Page1DoneInput
    dw Mode7Objects_Instruction_Delete
endif


;;; $D393: Instruction list - mode 7 object $D407 (page 2 - subpage 1) ;;;
InstList_Mode7Object_Page2_Subpage1:
    dw Instruction_LoadIntroSubtitlePage2_Subpage1                       ;8BD393;
    dw $0001,Mode7_Transfer_Data                                         ;8BD395;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate             ;8BD399;
    dw Mode7Objects_Instruction_Delete                                   ;8BD39B;


;;; $D39D: Instruction list - mode 7 object $D40D (page 2 - subpage 2) ;;;
InstList_Mode7Object_Page2_Subpage2:
    dw $0001,Mode7_Transfer_Data                                         ;8BD39D;
    dw Mode7Objects_Instruction_GotoY                                    ;8BD3A1;
    dw InstList_Mode7Object_Page2_Subpage2                               ;8BD3A3;


;;; $D3A5: Instruction list - enable cinematic BG tilemap updates and page 2 done input ;;;
InstList_EnableCinematicBGTilemapUpdates_Page2DoneInput:
    dw Instruction_EnableCinematicBGTilemapUpdates_Page2DoneInput        ;8BD3A5;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3A7;


;;; $D3A9: Instruction list - mode 7 object $D413 (page 3 - subpage 1) ;;;
InstList_Mode7Object_Page3_Subpage1:
    dw Instruction_LoadIntroSubtitlePage3_Subpage1                       ;8BD3A9;
    dw $0001,Mode7_Transfer_Data                                         ;8BD3AB;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate             ;8BD3AF;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3B1;


;;; $D3B3: Instruction list - mode 7 object $D419 (page 3 - subpage 2) ;;;
InstList_Mode7Object_Page3_Subpage2:
    dw $0001,Mode7_Transfer_Data                                         ;8BD3B3;
    dw Mode7Objects_Instruction_GotoY                                    ;8BD3B7;
    dw InstList_Mode7Object_Page3_Subpage2                               ;8BD3B9;


;;; $D3BB: Instruction list - enable cinematic BG tilemap updates and page 3 done input ;;;
InstList_EnableCinematicBGTilemapUpdates_Page3DoneInput:
    dw Instruction_EnableCinematicBGTilemapUpdates_Page3DoneInput        ;8BD3BB;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3BD;


;;; $D3BF: Instruction list - mode 7 object $D41F (page 4 - subpage 1) ;;;
InstList_Mode7Object_Page4_Subpage1:
    dw Instruction_LoadIntroSubtitlePage4_Subpage1                       ;8BD3BF;
    dw $0001,Mode7_Transfer_Data                                         ;8BD3C1;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate             ;8BD3C5;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3C7;


;;; $D3C9: Instruction list - mode 7 object $D425 (page 4 - subpage 2) ;;;
InstList_Mode7Object_Page4_Subpage2:
    dw $0001,Mode7_Transfer_Data                                         ;8BD3C9;
    dw Mode7Objects_Instruction_GotoY                                    ;8BD3CD;
    dw InstList_Mode7Object_Page4_Subpage2                               ;8BD3CF;


;;; $D3D1: Instruction list - enable cinematic BG tilemap updates and page 4 done input ;;;
InstList_EnableCinematicBGTilemapUpdates_Page4DoneInput:
    dw Instruction_EnableCinematicBGTilemapUpdates_Page4DoneInput        ;8BD3D1;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3D3;


;;; $D3D5: Instruction list - mode 7 object $D42B (page 5 - subpage 1) ;;;
InstList_Mode7Object_Page5_Subpage1:
    dw Instruction_LoadIntroSubtitlePage5_Subpage1                       ;8BD3D5;
    dw $0001,Mode7_Transfer_Data                                         ;8BD3D7;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate             ;8BD3DB;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3DD;


;;; $D3DF: Instruction list - mode 7 object $D431 (page 5 - subpage 2) ;;;
InstList_Mode7Object_Page5_Subpage2:
    dw $0001,Mode7_Transfer_Data                                         ;8BD3DF;
    dw Mode7Objects_Instruction_GotoY                                    ;8BD3E3;
    dw InstList_Mode7Object_Page5_Subpage2                               ;8BD3E5;


;;; $D3E7: Instruction list - enable cinematic BG tilemap updates and page 5 done input ;;;
InstList_EnableCinematicBGTilemapUpdates_Page5DoneInput:
    dw Instruction_EnableCinematicBGTilemapUpdates_Page5DoneInput        ;8BD3E7;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3E9;


;;; $D3EB: Instruction list - mode 7 object $D437 (page 6) ;;;
InstList_Mode7Object_Page6:
    dw Instruction_LoadIntroSubtitlePage6                                ;8BD3EB;
    dw $0001,Mode7_Transfer_Data                                         ;8BD3ED;
    dw Instruction_EnableCinematicBGTilemapUpdates_duplicate_again       ;8BD3F1;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3F3;


if !FEATURE_KEEP_UNREFERENCED
;;; $D3F5: Instruction list - mode 7 object $D43D (unused, broken) ;;;
UNUSED_InstList_Mode7Object_D43D_8BD3F5:
if !PAL == 0
    dw UNUSED_Instruction_LoadIntroSubtitle_NonExistent                  ;8BD3F5;
else
    dw Instruction_EnableCinematicBGTilemapUpdates
endif
    dw $0001,Mode7_Transfer_Data                                         ;8BD3F7;
    dw Instruction_EnableCinematicBGTilemapUpdates                       ;8BD3FB;
    dw Mode7Objects_Instruction_Delete                                   ;8BD3FD;
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $D3FF: Mode 7 transfer data - dummy ;;;
Mode7_Transfer_Data:
    db $00,$00                                                           ;8BD3FF;


;;; $D401: Mode 7 objects. Japanese intro text ;;;
Mode7Objects_IntroSubtitle_Page1:
    dw RTS_8B93D9                                                        ;8BD401; Initialisation function
    dw RTS_8B93D9                                                        ;8BD403; Pre-instruction
    dw InstList_Mode7Object_Page1                                        ;8BD405; Instruction list pointer

if !PAL != 0
Mode7Objects_IntroText_Page1_Subpage2:
    dw RTS_8B93D9                                     ; Initialisation function
    dw PreInstruction_LoadIntroSubtitlePage1_Subpage2 ; Pre-instruction
    dw InstList_Mode7Object_Page1_Subpage2            ; Instruction list pointer
endif

Mode7Objects_IntroSubtitle_Page2_Subpage1:
    dw RTS_8B93D9                                                        ;8BD407; Initialisation function
    dw RTS_8B93D9                                                        ;8BD409; Pre-instruction
    dw InstList_Mode7Object_Page2_Subpage1                               ;8BD40B; Instruction list pointer

Mode7Objects_IntroSubtitle_Page2_Subpage2:
    dw RTS_8B93D9                                                        ;8BD40D; Initialisation function
    dw Instruction_LoadIntroSubtitlePage2_Subpage2                       ;8BD40F; Pre-instruction
    dw InstList_Mode7Object_Page2_Subpage2                               ;8BD411; Instruction list pointer

Mode7Objects_IntroSubtitle_Page3_Subpage1:
    dw RTS_8B93D9                                                        ;8BD413; Initialisation function
    dw RTS_8B93D9                                                        ;8BD415; Pre-instruction
    dw InstList_Mode7Object_Page3_Subpage1                               ;8BD417; Instruction list pointer

Mode7Objects_IntroSubtitle_Page3_Subpage2:
    dw RTS_8B93D9                                                        ;8BD419; Initialisation function
    dw PreInstruction_LoadIntroSubtitlePage3_Subpage2                    ;8BD41B; Pre-instruction
    dw InstList_Mode7Object_Page3_Subpage2                               ;8BD41D; Instruction list pointer

Mode7Objects_IntroSubtitle_Page4_Subpage1:
    dw RTS_8B93D9                                                        ;8BD41F; Initialisation function
    dw RTS_8B93D9                                                        ;8BD421; Pre-instruction
    dw InstList_Mode7Object_Page4_Subpage1                               ;8BD423; Instruction list pointer

Mode7Objects_IntroSubtitle_Page4_Subpage2:
    dw RTS_8B93D9                                                        ;8BD425; Initialisation function
    dw PreInstruction_LoadIntroSubtitlePage4_Subpage2                    ;8BD427; Pre-instruction
    dw InstList_Mode7Object_Page4_Subpage2                               ;8BD429; Instruction list pointer

Mode7Objects_IntroJaanText_Page5_Subpage1:
    dw RTS_8B93D9                                                        ;8BD42B; Initialisation function
    dw RTS_8B93D9                                                        ;8BD42D; Pre-instruction
    dw InstList_Mode7Object_Page5_Subpage1                               ;8BD42F; Instruction list pointer

Mode7Objects_IntroSubtitle_Page5_Subpage2:
    dw RTS_8B93D9                                                        ;8BD431; Initialisation function
    dw PreInstruction_LoadIntroSubtitlePage5_Subpage2                    ;8BD433; Pre-instruction
    dw InstList_Mode7Object_Page5_Subpage2                               ;8BD435; Instruction list pointer

Mode7Objects_IntroSubtitle_Page6:
    dw RTS_8B93D9                                                        ;8BD437; Initialisation function
    dw RTS_8B93D9                                                        ;8BD439; Pre-instruction
    dw InstList_Mode7Object_Page6                                        ;8BD43B; Instruction list pointer

if !FEATURE_KEEP_UNREFERENCED
UNUSED_Mode7Objects_8BD43D:
    dw RTS_8B93D9                                                        ;8BD43D; Initialisation function
    dw RTS_8B93D9                                                        ;8BD43F; Pre-instruction
    dw UNUSED_InstList_Mode7Object_D43D_8BD3F5                           ;8BD441; Instruction list pointer
endif ; !FEATURE_KEEP_UNREFERENCED


;;; $D443: Game state 27h (ending and credits) ;;;
GameState27_EndingAndCredits:
    PHP                                                                  ;8BD443;
    PHB                                                                  ;8BD444;
    PHK                                                                  ;8BD445;
    PLB                                                                  ;8BD446;
    REP #$30                                                             ;8BD447;
    PEA.W .manualReturn-1                                                ;8BD449;
    JMP.W (CinematicFunction)                                            ;8BD44C;

  .manualReturn:
    LDA.W CinematicSpriteObject_FrameCounter                             ;8BD44F;
    BMI .zeroTimer                                                       ;8BD452;
    INC                                                                  ;8BD454;
    STA.W CinematicSpriteObject_FrameCounter                             ;8BD455;

  .zeroTimer:
    INC.W CinematicFrameCounter                                          ;8BD458;
    JSR.W Handle_CinematicSpriteObjects                                  ;8BD45B;
    JSR.W HandleFinalScreen_CinematicBGObjects                           ;8BD45E;
    JSR.W Handle_CreditsObject                                           ;8BD461;
    JSL.L PaletteFXObject_Handler                                        ;8BD464;
    JSR.W Draw_CinematicSpriteObjects_EndingCredits                      ;8BD468;
    JSR.W Handle_ShootingStars                                           ;8BD46B;
    JSR.W HandleMode7TransformMatrixAndBG1Position                       ;8BD46E;
    PLB                                                                  ;8BD471;
    PLP                                                                  ;8BD472;
    RTL                                                                  ;8BD473;


;;; $D474: Handle final screen cinematic BG objects ;;;
HandleFinalScreen_CinematicBGObjects:
; Used for "see you next mission" and item percentage
    LDA.W CinematicFunction                                              ;8BD474;
    CMP.W #CinematicFunction_PostCredits_FadeFromWhite                   ;8BD477;
    BMI .return                                                          ;8BD47A;
if !PAL == 0
    JSR.W Handle_CinematicBGObjects                                      ;8BD47C;
else
    JSR.W Handle_CinematicBGObjects_NoEyes
endif

  .return:
    RTS                                                                  ;8BD47F;


;;; $D480: Cinematic function - ending - setup ;;;
CinematicFunction_Ending_Setup:
    STZ.B DP_IRQCmd                                                      ;8BD480;
    STZ.B DP_NextIRQCmd                                                  ;8BD482;
    LDX.W #$0008                                                         ;8BD484;

  .wait8Frames:
    JSL.L WaitForNMI                                                     ;8BD487;
    DEX                                                                  ;8BD48B;
    BPL .wait8Frames                                                     ;8BD48C;
    JSR.W Setup_PPU_ZebesDestruction                                     ;8BD48E;
    LDA.W #MessageBoxIndex                                               ;8BD491;
    DEC                                                                  ;8BD494;
    DEC                                                                  ;8BD495;
    SEC                                                                  ;8BD496;
    SBC.W #Mode7TransformationAngle                                      ;8BD497;
    TAX                                                                  ;8BD49A;

  .loopClearRAM:
    STZ.W Mode7TransformationAngle,X                                     ;8BD49B;
    DEX                                                                  ;8BD49E;
    DEX                                                                  ;8BD49F;
    BPL .loopClearRAM                                                    ;8BD4A0;
    LDX.W #$0000                                                         ;8BD4A2;

  .loopPalettes:
    LDA.L Palettes_CloudSpritesInZebesExplosionScene,X                   ;8BD4A5;
    STA.L Palettes,X                                                     ;8BD4A9;
    INX                                                                  ;8BD4AD;
    INX                                                                  ;8BD4AE;
    CPX.W #$0200                                                         ;8BD4AF;
    BMI .loopPalettes                                                    ;8BD4B2;
    LDA.W #Tiles_Zebes_Being_Zoomed_Out_during_Zebes_Explosion_Mode7>>8&$FF00 ;8BD4B4;
    STA.B DP_DecompSrc+1                                                 ;8BD4B7;
    LDA.W #Tiles_Zebes_Being_Zoomed_Out_during_Zebes_Explosion_Mode7     ;8BD4B9;
    STA.B DP_DecompSrc                                                   ;8BD4BC;
    JSL.L Decompression_HardcodedDestination                             ;8BD4BE;
    dl ZebesExplosionZoomedOutMode7Tiles                                 ;8BD4C2;
    LDA.W #Tiles_Yellow_Clouds_during_Zebes_Explosion>>8&$FF00           ;8BD4C5;
    STA.B DP_DecompSrc+1                                                 ;8BD4C8;
    LDA.W #Tiles_Yellow_Clouds_during_Zebes_Explosion                    ;8BD4CA;
    STA.B DP_DecompSrc                                                   ;8BD4CD;
    JSL.L Decompression_HardcodedDestination                             ;8BD4CF;
    dl YellowCloudsZebesExplosionTiles                                   ;8BD4D3;
    LDA.W #InterleavedTilesTilemap_ZebesBeingZoomedOutExplosion_Mode7>>8&$FF00 ;8BD4D6;
    STA.B DP_DecompSrc+1                                                 ;8BD4D9;
    LDA.W #InterleavedTilesTilemap_ZebesBeingZoomedOutExplosion_Mode7    ;8BD4DB;
    STA.B DP_DecompSrc                                                   ;8BD4DE;
    JSL.L Decompression_HardcodedDestination                             ;8BD4E0;
    dl ZebesBeingZoomedOutExplosionInterleavedTilesTilemap               ;8BD4E4;
    SEP #$30                                                             ;8BD4E7;
    LDA.B #$00                                                           ;8BD4E9;
    STA.W $2116                                                          ;8BD4EB;
    LDA.B #$00                                                           ;8BD4EE;
    STA.W $2117                                                          ;8BD4F0;
    LDA.B #$80                                                           ;8BD4F3;
    STA.W $2115                                                          ;8BD4F5;
    JSL.L SetupHDMATransfer                                              ;8BD4F8;
    db $01,$01,$18                                                       ;8BD4FC;
    dl ZebesBeingZoomedOutExplosionInterleavedTilesTilemap               ;8BD4FF;
    dw $4000                                                             ;8BD502;
    LDA.B #$02                                                           ;8BD504;
    STA.W $420B                                                          ;8BD506;
    LDA.B #$00                                                           ;8BD509;
    STA.W $2116                                                          ;8BD50B;
    LDA.B #$20                                                           ;8BD50E;
    STA.W $2117                                                          ;8BD510;
    LDA.B #$80                                                           ;8BD513;
    STA.W $2115                                                          ;8BD515;
    JSL.L SetupHDMATransfer                                              ;8BD518;
    db $01,$01,$18                                                       ;8BD51C;
    dl ZebesBeingZoomedOutExplosionInterleavedTilesTilemap               ;8BD51F;
    dw $4000                                                             ;8BD522;
    LDA.B #$02                                                           ;8BD524;
    STA.W $420B                                                          ;8BD526;
    LDA.B #$00                                                           ;8BD529;
    STA.W $2116                                                          ;8BD52B;
    LDA.B #$60                                                           ;8BD52E;
    STA.W $2117                                                          ;8BD530;
    LDA.B #$80                                                           ;8BD533;
    STA.W $2115                                                          ;8BD535;
    JSL.L SetupHDMATransfer                                              ;8BD538;
    db $01,$01,$18                                                       ;8BD53C;
    dl YellowCloudsZebesExplosionTiles                                   ;8BD53F;
    dw $4000                                                             ;8BD542;
    LDA.B #$02                                                           ;8BD544;
    STA.W $420B                                                          ;8BD546;
    LDA.B #$00                                                           ;8BD549;
    STA.W $2116                                                          ;8BD54B;
    LDA.B #$00                                                           ;8BD54E;
    STA.W $2117                                                          ;8BD550;
    LDA.B #$80                                                           ;8BD553;
    STA.W $2115                                                          ;8BD555;
    JSL.L SetupHDMATransfer                                              ;8BD558;
    db $01,$00,$19                                                       ;8BD55C;
    dl ZebesExplosionZoomedOutMode7Tiles                                 ;8BD55F;
    dw $4000                                                             ;8BD562;
    LDA.B #$02                                                           ;8BD564;
    STA.W $420B                                                          ;8BD566;
    REP #$30                                                             ;8BD569;
    LDA.W #Tiles_Zebes_Explosion>>8&$FF00                                ;8BD56B;
    STA.B DP_DecompSrc+1                                                 ;8BD56E;
    LDA.W #Tiles_Zebes_Explosion                                         ;8BD570;
    STA.B DP_DecompSrc                                                   ;8BD573;
    JSL.L Decompression_HardcodedDestination                             ;8BD575;
    dl ZebesExplosionTiles                                               ;8BD579;
    LDA.W #Tiles_Gunship_Ceres_Mode7>>8&$FF00                            ;8BD57C;
    STA.B DP_DecompSrc+1                                                 ;8BD57F;
    LDA.W #Tiles_Gunship_Ceres_Mode7                                     ;8BD581;
    STA.B DP_DecompSrc                                                   ;8BD584;
    JSL.L Decompression_HardcodedDestination                             ;8BD586;
    dl CeresGunshipMode7Tiles                                            ;8BD58A;
    LDA.W #Gunship_Ceres_Tilemap>>8&$FF00                                ;8BD58D;
    STA.B DP_DecompSrc+1                                                 ;8BD590;
    LDA.W #Gunship_Ceres_Tilemap                                         ;8BD592;
    STA.B DP_DecompSrc                                                   ;8BD595;
    JSL.L Decompression_HardcodedDestination                             ;8BD597;
    dl CeresCutsceneTilemap_ShipFront                                    ;8BD59B;
    LDX.W #$0300                                                         ;8BD59E;
    LDA.W #$8C8C                                                         ;8BD5A1;

  .loopTilemap:
    STA.L CeresCutsceneTilemap_ShipFront,X                               ;8BD5A4;
    INX                                                                  ;8BD5A8;
    INX                                                                  ;8BD5A9;
    CPX.W #$4000                                                         ;8BD5AA;
    BMI .loopTilemap                                                     ;8BD5AD;
    LDA.W #Wide_Part_of_Zebes_Explosion_Tilemap>>8&$FF00                 ;8BD5AF;
    STA.B DP_DecompSrc+1                                                 ;8BD5B2;
    LDA.W #Wide_Part_of_Zebes_Explosion_Tilemap                          ;8BD5B4;
    STA.B DP_DecompSrc                                                   ;8BD5B7;
    JSL.L Decompression_HardcodedDestination                             ;8BD5B9;
    dl WidePartOfZebesExplosionTilemap                                   ;8BD5BD;
    LDA.W #Concentric_Wide_Part_of_Zebes_Explosion_Tilemap>>8&$FF00      ;8BD5C0;
    STA.B DP_DecompSrc+1                                                 ;8BD5C3;
    LDA.W #Concentric_Wide_Part_of_Zebes_Explosion_Tilemap               ;8BD5C5;
    STA.B DP_DecompSrc                                                   ;8BD5C8;
    JSL.L Decompression_HardcodedDestination                             ;8BD5CA;
    dl ConcentricWidePartOfZebesExplosionTilemap                         ;8BD5CE;
    LDA.W #Eclipse_of_Zebes_during_Explosion_Tilemap>>8&$FF00            ;8BD5D1;
    STA.B DP_DecompSrc+1                                                 ;8BD5D4;
    LDA.W #Eclipse_of_Zebes_during_Explosion_Tilemap                     ;8BD5D6;
    STA.B DP_DecompSrc                                                   ;8BD5D9;
    JSL.L Decompression_HardcodedDestination                             ;8BD5DB;
    dl EclipseOfZebesDuringExplosionTilemap                              ;8BD5DF;
    LDA.W #Blank_BG2_Tilemap>>8&$FF00                                    ;8BD5E2;
    STA.B DP_DecompSrc+1                                                 ;8BD5E5;
    LDA.W #Blank_BG2_Tilemap                                             ;8BD5E7;
    STA.B DP_DecompSrc                                                   ;8BD5EA;
    JSL.L Decompression_HardcodedDestination                             ;8BD5EC;
    dl EndingBlankTilemap                                                ;8BD5F0;
    LDA.W #Tiles_Font3_Background>>8&$FF00                               ;8BD5F3;
    STA.B DP_DecompSrc+1                                                 ;8BD5F6;
    LDA.W #Tiles_Font3_Background                                        ;8BD5F8;
    STA.B DP_DecompSrc                                                   ;8BD5FB;
    JSL.L Decompression_HardcodedDestination                             ;8BD5FD;
    dl EndingFont3Tiles                                                  ;8BD601;
    LDA.W #InterleavedTilesTilemap_GreyCloudsDuringZebesExplosion_Mode7>>8&$FF00 ;8BD604;
    STA.B DP_DecompSrc+1                                                 ;8BD607;
    LDA.W #InterleavedTilesTilemap_GreyCloudsDuringZebesExplosion_Mode7  ;8BD609;
    STA.B DP_DecompSrc                                                   ;8BD60C;
    JSL.L Decompression_HardcodedDestination                             ;8BD60E;
    dl FadingPalettes                                                    ;8BD612;
    LDA.W #InterleavedTilesTilemap_BigZebesDuringZebesExplosion_Mode7>>8&$FF00 ;8BD615;
    STA.B DP_DecompSrc+1                                                 ;8BD618;
    LDA.W #InterleavedTilesTilemap_BigZebesDuringZebesExplosion_Mode7    ;8BD61A;
    STA.B DP_DecompSrc                                                   ;8BD61D;
    JSL.L Decompression_HardcodedDestination                             ;8BD61F;
    dl BigZebesDuringZebesExplosionTilemap                               ;8BD623;
    LDA.W #$0100                                                         ;8BD626;
    STA.W $211B                                                          ;8BD629;
    STA.B DP_Mode7TransMatrixA                                           ;8BD62C;
    STZ.W $211C                                                          ;8BD62E;
    STZ.B DP_Mode7TransMatrixB                                           ;8BD631;
    STZ.W $211D                                                          ;8BD633;
    STZ.B DP_Mode7TransMatrixC                                           ;8BD636;
    STA.W $211E                                                          ;8BD638;
    STA.B DP_Mode7TransMatrixD                                           ;8BD63B;
    LDA.W #$0080                                                         ;8BD63D;
    STA.W $211F                                                          ;8BD640;
    STA.B DP_Mode7TransOriginX                                           ;8BD643;
    STA.W $2120                                                          ;8BD645;
    STA.B DP_Mode7TransOriginY                                           ;8BD648;
    LDA.W #$0020                                                         ;8BD64A;
    STA.W Mode7TransformationAngle                                       ;8BD64D;
    LDA.W #$0040                                                         ;8BD650;
    STA.W Mode7TransformationZoomLevel                                   ;8BD653;
    LDA.W #$0000                                                         ;8BD656;
    STA.W CinematicBG1_XPosition                                         ;8BD659;
    STA.W CinematicBG1_YPosition                                         ;8BD65C;
    STZ.W DoorPointer                                                    ;8BD65F;
    STZ.W Layer1XPosition                                                ;8BD662;
    STZ.W Layer1YPosition                                                ;8BD665;
    JSL.L Clear_PaletteFXObjects                                         ;8BD668;
    JSL.L Enable_PaletteFXObjects                                        ;8BD66C;
    JSL.L EnableNMI                                                      ;8BD670;
    STZ.W CreditsObject_ShootingStarsEnable                              ;8BD674;
    SEP #$20                                                             ;8BD677;
    LDA.B #$11                                                           ;8BD679;
    STA.B DP_MainScreenLayers                                            ;8BD67B;
    LDA.B #$01                                                           ;8BD67D;
    STA.B DP_SubScreenLayers                                             ;8BD67F;
    LDA.B #$02                                                           ;8BD681;
    STA.B DP_ColorMathA                                                  ;8BD683;
    LDA.B #$11                                                           ;8BD685;
    STA.B DP_ColorMathB                                                  ;8BD687;
    REP #$20                                                             ;8BD689;
    LDA.W #$0000                                                         ;8BD68B;
    LDY.W #CinematicSpriteObjectDefinitions_Right                        ;8BD68E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD691;
    LDA.W #$0000                                                         ;8BD694;
    LDY.W #CinematicSpriteObjectDefinitions_Left                         ;8BD697;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD69A;
    LDA.W #$0001                                                         ;8BD69D;
    LDY.W #CinematicSpriteObjectDefinitions_Right                        ;8BD6A0;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD6A3;
    LDA.W #$0001                                                         ;8BD6A6;
    LDY.W #CinematicSpriteObjectDefinitions_Left                         ;8BD6A9;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD6AC;
    STZ.W ScreenFadeDelay                                                ;8BD6AF;
    LDA.W #$0002                                                         ;8BD6B2;
    STA.W ScreenFadeCounter                                              ;8BD6B5;
    LDA.W #CinematicFunction_Ending_WaitForMusicToChange                 ;8BD6B8;
    STA.W CinematicFunction                                              ;8BD6BB;
    LDA.W #$0000                                                         ;8BD6BE;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BD6C1;
    LDA.W #$FF33                                                         ;8BD6C5;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BD6C8;
    LDA.W #$0005                                                         ;8BD6CC;
    LDY.W #$000E                                                         ;8BD6CF;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BD6D2;
    RTS                                                                  ;8BD6D6;


;;; $D6D7: Cinematic function - ending - wait for music to change ;;;
CinematicFunction_Ending_WaitForMusicToChange:
    JSL.L CheckIfMusicIsQueued                                           ;8BD6D7;
    BCS .return                                                          ;8BD6DB;
    LDY.W #PaletteFXObjects_ExplodingZebesLava                           ;8BD6DD;
    JSL.L Spawn_PaletteFXObject                                          ;8BD6E0;
    LDY.W #PaletteFXObjects_FadeOutExplodingZebesCrust                   ;8BD6E4;
    JSL.L Spawn_PaletteFXObject                                          ;8BD6E7;
    LDA.W #CinematicFunc_Ending_ZebesDestruction0_CloudsOnSide_FadingIn  ;8BD6EB;
    STA.W CinematicFunction                                              ;8BD6EE;

  .return:
    RTS                                                                  ;8BD6F1;


;;; $D6F2: Cinematic function - ending - Zebes destruction scene 0 - zooming out, clouds on left/right - fading in ;;;
CinematicFunc_Ending_ZebesDestruction0_CloudsOnSide_FadingIn:
    JSR.W CinematicFunction_Ending_ZebesDestruction0_CloudsOnSide        ;8BD6F2;
    JSR.W AdvanceFastScreenFadeIn                                        ;8BD6F5;
    BCC .return                                                          ;8BD6F8;
    LDA.W #CinematicFunction_Ending_ZebesDestruction0_CloudsOnSide       ;8BD6FA;
    STA.W CinematicFunction                                              ;8BD6FD;

  .return:
    RTS                                                                  ;8BD700;


;;; $D701: Cinematic function - ending - Zebes destruction scene 0 - zooming out, clouds on left/right ;;;
CinematicFunction_Ending_ZebesDestruction0_CloudsOnSide:
    LDA.W CinematicFrameCounter                                          ;8BD701;
    BIT.W #$0001                                                         ;8BD704;
    BNE .zoomOut                                                         ;8BD707;
    LDA.W Mode7TransformationAngle                                       ;8BD709;
    SEC                                                                  ;8BD70C;
    SBC.W #$0001                                                         ;8BD70D;
    AND.W #$00FF                                                         ;8BD710;
    STA.W Mode7TransformationAngle                                       ;8BD713;

  .zoomOut:
    LDA.W Mode7TransformationZoomLevel                                   ;8BD716;
    CLC                                                                  ;8BD719;
    ADC.W #regional($0002, $0003)                                        ;8BD71A;
    STA.W Mode7TransformationZoomLevel                                   ;8BD71D;
    CMP.W #$0180                                                         ;8BD720;
    BMI .return                                                          ;8BD723;
    JSR.W AdvanceFastScreenFadeOut                                       ;8BD725;
    BCC .return                                                          ;8BD728;
    LDA.W #CineFunc_Ending_ZebesDestruction1_CloudsOnTopBottom_Setup     ;8BD72A;
    STA.W CinematicFunction                                              ;8BD72D;

  .return:
    RTS                                                                  ;8BD730;


;;; $D731: Cinematic function - ending - Zebes destruction scene 1 - zooming out, clouds on top/bottom - setup ;;;
CineFunc_Ending_ZebesDestruction1_CloudsOnTopBottom_Setup:
    SEP #$30                                                             ;8BD731;
    LDA.B #$00                                                           ;8BD733;
    STA.W $2116                                                          ;8BD735;
    LDA.B #$00                                                           ;8BD738;
    STA.W $2117                                                          ;8BD73A;
    LDA.B #$80                                                           ;8BD73D;
    STA.W $2115                                                          ;8BD73F;
    JSL.L SetupHDMATransfer                                              ;8BD742;
    db $01,$01,$18                                                       ;8BD746;
    dl GreyCloudsDuringZebesExplosionTilemap                             ;8BD749;
    dw $4000                                                             ;8BD74C;
    LDA.B #$02                                                           ;8BD74E;
    STA.W $420B                                                          ;8BD750;
    LDA.B #$00                                                           ;8BD753;
    STA.W $2116                                                          ;8BD755;
    LDA.B #$20                                                           ;8BD758;
    STA.W $2117                                                          ;8BD75A;
    LDA.B #$80                                                           ;8BD75D;
    STA.W $2115                                                          ;8BD75F;
    JSL.L SetupHDMATransfer                                              ;8BD762;
    db $01,$01,$18                                                       ;8BD766;
    dl GreyCloudsDuringZebesExplosionTilemap                             ;8BD769;
    dw $4000                                                             ;8BD76C;
    LDA.B #$02                                                           ;8BD76E;
    STA.W $420B                                                          ;8BD770;
    REP #$30                                                             ;8BD773;
    LDA.W #Tiles_Grey_Clouds_during_Zebes_Explosion_Mode7>>8&$FF00       ;8BD775;
    STA.B DP_DecompSrc+1                                                 ;8BD778;
    LDA.W #Tiles_Grey_Clouds_during_Zebes_Explosion_Mode7                ;8BD77A;
    STA.B DP_DecompSrc                                                   ;8BD77D;
    JSL.L Decompression_HardcodedDestination                             ;8BD77F;
    dl GreyCloudsDuringZebesExplosionTilemap                             ;8BD783;
    SEP #$30                                                             ;8BD786;
    LDA.B #$00                                                           ;8BD788;
    STA.W $2116                                                          ;8BD78A;
    LDA.B #$00                                                           ;8BD78D;
    STA.W $2117                                                          ;8BD78F;
    LDA.B #$80                                                           ;8BD792;
    STA.W $2115                                                          ;8BD794;
    JSL.L SetupHDMATransfer                                              ;8BD797;
    db $01,$00,$19                                                       ;8BD79B;
    dl GreyCloudsDuringZebesExplosionTilemap                             ;8BD79E;
    dw $4000                                                             ;8BD7A1;
    LDA.B #$02                                                           ;8BD7A3;
    STA.W $420B                                                          ;8BD7A5;
    REP #$30                                                             ;8BD7A8;
    JSL.L Clear_PaletteFXObjects                                         ;8BD7AA;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BD7AE;
    LDY.W #PaletteFXObjects_FadeOutExplodingZebesGreyClouds              ;8BD7B1;
    JSL.L Spawn_PaletteFXObject                                          ;8BD7B4;
    LDA.W #$0000                                                         ;8BD7B8;
    LDY.W #CinematicSpriteObjectDefinitions_YellowClouds_Top_TopHalf     ;8BD7BB;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD7BE;
    LDA.W #$0000                                                         ;8BD7C1;
    LDY.W #CinematicSpriteObjectDefinitions_Top_BottomHalf               ;8BD7C4;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD7C7;
    LDA.W #$0000                                                         ;8BD7CA;
    LDY.W #CinematicSpriteObjectDefinitions_Bottom_TopHalf               ;8BD7CD;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD7D0;
    LDA.W #$0000                                                         ;8BD7D3;
    LDY.W #CinematicSpriteObjectDefinitions_Bottom_BottomHalf            ;8BD7D6;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD7D9;
    LDA.W #$0020                                                         ;8BD7DC;
    STA.W Mode7TransformationAngle                                       ;8BD7DF;
    LDA.W #$0040                                                         ;8BD7E2;
    STA.W Mode7TransformationZoomLevel                                   ;8BD7E5;
    LDA.W #$0000                                                         ;8BD7E8;
    STA.W CinematicBG1_XPosition                                         ;8BD7EB;
    STA.W CinematicBG1_YPosition                                         ;8BD7EE;
    LDA.W #CineFunc_Ending_ZebesDestruction1_CloudsOnTopBottom_FadingIn  ;8BD7F1;
    STA.W CinematicFunction                                              ;8BD7F4;
    RTS                                                                  ;8BD7F7;


;;; $D7F8: Cinematic function - ending - Zebes destruction scene 1 - zooming out, clouds on top/bottom - fading in ;;;
CineFunc_Ending_ZebesDestruction1_CloudsOnTopBottom_FadingIn:
    JSR.W CinematicFunction_Ending_ZebesDestruction1_CloudsOnTopBottom   ;8BD7F8;
    JSR.W AdvanceFastScreenFadeIn                                        ;8BD7FB;
    BCC .return                                                          ;8BD7FE;
    LDA.W #CinematicFunction_Ending_ZebesDestruction1_CloudsOnTopBottom  ;8BD800;
    STA.W CinematicFunction                                              ;8BD803;

  .return:
    RTS                                                                  ;8BD806;


;;; $D807: Cinematic function - ending - Zebes destruction scene 1 - zooming out, clouds on top/bottom ;;;
CinematicFunction_Ending_ZebesDestruction1_CloudsOnTopBottom:
    LDA.W CinematicFrameCounter                                          ;8BD807;
    BIT.W #$0001                                                         ;8BD80A;
    BNE +                                                                ;8BD80D;
    LDA.W Mode7TransformationAngle                                       ;8BD80F;
    SEC                                                                  ;8BD812;
    SBC.W #$0001                                                         ;8BD813;
    AND.W #$00FF                                                         ;8BD816;
    STA.W Mode7TransformationAngle                                       ;8BD819;

+   LDA.W Mode7TransformationZoomLevel                                   ;8BD81C;
    CLC                                                                  ;8BD81F;
    ADC.W #$0003                                                         ;8BD820;
    STA.W Mode7TransformationZoomLevel                                   ;8BD823;
    CMP.W #$0180                                                         ;8BD826;
    BMI .return                                                          ;8BD829;
    JSR.W AdvanceFastScreenFadeOut                                       ;8BD82B;
    BCC .return                                                          ;8BD82E;
    LDA.W #CinematicFunc_Ending_ZebesDestruction2_CrossFade_Setup        ;8BD830;
    STA.W CinematicFunction                                              ;8BD833;

  .return:
    RTS                                                                  ;8BD836;


;;; $D837: Cinematic function - ending - Zebes destruction scene 2 - cross-fade to space view - setup ;;;
CinematicFunc_Ending_ZebesDestruction2_CrossFade_Setup:
    SEP #$30                                                             ;8BD837;
    LDA.B #$00                                                           ;8BD839;
    STA.W $2116                                                          ;8BD83B;
    LDA.B #$00                                                           ;8BD83E;
    STA.W $2117                                                          ;8BD840;
    LDA.B #$80                                                           ;8BD843;
    STA.W $2115                                                          ;8BD845;
    JSL.L SetupHDMATransfer                                              ;8BD848;
    db $01,$01,$18                                                       ;8BD84C;
    dl BigZebesZebesExplosionTiles                                       ;8BD84F;
    dw $4000                                                             ;8BD852;
    LDA.B #$02                                                           ;8BD854;
    STA.W $420B                                                          ;8BD856;
    LDA.B #$00                                                           ;8BD859;
    STA.W $2116                                                          ;8BD85B;
    LDA.B #$20                                                           ;8BD85E;
    STA.W $2117                                                          ;8BD860;
    LDA.B #$80                                                           ;8BD863;
    STA.W $2115                                                          ;8BD865;
    JSL.L SetupHDMATransfer                                              ;8BD868;
    db $01,$01,$18                                                       ;8BD86C;
    dl BigZebesZebesExplosionTiles                                       ;8BD86F;
    dw $4000                                                             ;8BD872;
    LDA.B #$02                                                           ;8BD874;
    STA.W $420B                                                          ;8BD876;
    REP #$30                                                             ;8BD879;
    LDA.W #Tiles_Big_Zebes_during_Zebes_Explosion>>8&$FF00               ;8BD87B;
    STA.B DP_DecompSrc+1                                                 ;8BD87E;
    LDA.W #Tiles_Big_Zebes_during_Zebes_Explosion                        ;8BD880;
    STA.B DP_DecompSrc                                                   ;8BD883;
    JSL.L Decompression_HardcodedDestination                             ;8BD885;
    dl BigZebesZebesExplosionTiles                                       ;8BD889;
    SEP #$30                                                             ;8BD88C;
    LDA.B #$00                                                           ;8BD88E;
    STA.W $2116                                                          ;8BD890;
    LDA.B #$00                                                           ;8BD893;
    STA.W $2117                                                          ;8BD895;
    LDA.B #$80                                                           ;8BD898;
    STA.W $2115                                                          ;8BD89A;
    JSL.L SetupHDMATransfer                                              ;8BD89D;
    db $01,$00,$19                                                       ;8BD8A1;
    dl BigZebesZebesExplosionTiles                                       ;8BD8A4;
    dw $4000                                                             ;8BD8A7;
    LDA.B #$02                                                           ;8BD8A9;
    STA.W $420B                                                          ;8BD8AB;
    LDA.B #$00                                                           ;8BD8AE;
    STA.W $2116                                                          ;8BD8B0;
    LDA.B #$40                                                           ;8BD8B3;
    STA.W $2117                                                          ;8BD8B5;
    LDA.B #$80                                                           ;8BD8B8;
    STA.W $2115                                                          ;8BD8BA;
    JSL.L SetupHDMATransfer                                              ;8BD8BD;
    db $01,$01,$18                                                       ;8BD8C1;
    dl ZebesExplosionTiles                                               ;8BD8C4;
    dw $6000                                                             ;8BD8C7;
    LDA.B #$02                                                           ;8BD8C9;
    STA.W $420B                                                          ;8BD8CB;
    LDA.B #$00                                                           ;8BD8CE;
    STA.W $2116                                                          ;8BD8D0;
    LDA.B #$70                                                           ;8BD8D3;
    STA.W $2117                                                          ;8BD8D5;
    LDA.B #$80                                                           ;8BD8D8;
    STA.W $2115                                                          ;8BD8DA;
    JSL.L SetupHDMATransfer                                              ;8BD8DD;
    db $01,$01,$18                                                       ;8BD8E1;
    dl WidePartOfZebesExplosionTilemap                                   ;8BD8E4;
    dw $0800                                                             ;8BD8E7;
    LDA.B #$02                                                           ;8BD8E9;
    STA.W $420B                                                          ;8BD8EB;
    LDA.B #$00                                                           ;8BD8EE;
    STA.W $2116                                                          ;8BD8F0;
    LDA.B #$74                                                           ;8BD8F3;
    STA.W $2117                                                          ;8BD8F5;
    LDA.B #$80                                                           ;8BD8F8;
    STA.W $2115                                                          ;8BD8FA;
    JSL.L SetupHDMATransfer                                              ;8BD8FD;
    db $01,$01,$18                                                       ;8BD901;
    dl ConcentricWidePartOfZebesExplosionTilemap                         ;8BD904;
    dw $0800                                                             ;8BD907;
    LDA.B #$02                                                           ;8BD909;
    STA.W $420B                                                          ;8BD90B;
    LDA.B #$00                                                           ;8BD90E;
    STA.W $2116                                                          ;8BD910;
    LDA.B #$78                                                           ;8BD913;
    STA.W $2117                                                          ;8BD915;
    LDA.B #$80                                                           ;8BD918;
    STA.W $2115                                                          ;8BD91A;
    JSL.L SetupHDMATransfer                                              ;8BD91D;
    db $01,$01,$18                                                       ;8BD921;
    dl EclipseOfZebesDuringExplosionTilemap                              ;8BD924;
    dw $0800                                                             ;8BD927;
    LDA.B #$02                                                           ;8BD929;
    STA.W $420B                                                          ;8BD92B;
    LDA.B #$00                                                           ;8BD92E;
    STA.W $2116                                                          ;8BD930;
    LDA.B #$7C                                                           ;8BD933;
    STA.W $2117                                                          ;8BD935;
    LDA.B #$80                                                           ;8BD938;
    STA.W $2115                                                          ;8BD93A;
    JSL.L SetupHDMATransfer                                              ;8BD93D;
    db $01,$01,$18                                                       ;8BD941;
    dl EndingBlankTilemap                                                ;8BD944;
    dw $0800                                                             ;8BD947;
    LDA.B #$02                                                           ;8BD949;
    STA.W $420B                                                          ;8BD94B;
    LDA.B #$00                                                           ;8BD94E;
    STA.W $2116                                                          ;8BD950;
    LDA.B #$50                                                           ;8BD953;
    STA.W $2117                                                          ;8BD955;
    LDA.B #$80                                                           ;8BD958;
    STA.W $2115                                                          ;8BD95A;
    JSL.L SetupHDMATransfer                                              ;8BD95D;
    db $01,$01,$18                                                       ;8BD961;
    dl EndingFont3Tiles                                                  ;8BD964;
    dw $1000                                                             ;8BD967;
    LDA.B #$02                                                           ;8BD969;
    STA.W $420B                                                          ;8BD96B;
    LDA.B #$02                                                           ;8BD96E;
    STA.B DP_SpriteSizeAddr                                              ;8BD970;
    REP #$30                                                             ;8BD972;
    JSL.L Clear_PaletteFXObjects                                         ;8BD974;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BD978;
    LDX.W #$0100                                                         ;8BD97B;

  .loopPalettes:
    LDA.L Palettes_ZebesExplosionScene,X                                 ;8BD97E;
    STA.L Palettes,X                                                     ;8BD982;
    INX                                                                  ;8BD986;
    INX                                                                  ;8BD987;
    CPX.W #$0200                                                         ;8BD988;
    BMI .loopPalettes                                                    ;8BD98B;
    LDY.W #CinematicSpriteObjectDefinitions_ExplodingZebes_Zebes         ;8BD98D;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD990;
    LDY.W #CinematicSpriteObjectDefinitions_ExplodingZebes_Lava          ;8BD993;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD996;
    LDY.W #CinematicSpriteObjectDefinitions_ExplodingZebes_PurpleGlow    ;8BD999;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD99C;
    LDY.W #CinematicSpriteObjectDefinitions_ExplodingZebes_Stars         ;8BD99F;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BD9A2;
    STZ.W Mode7TransformationAngle                                       ;8BD9A5;
    LDA.W #$0040                                                         ;8BD9A8;
    STA.W Mode7TransformationZoomLevel                                   ;8BD9AB;
    LDA.W #$0100                                                         ;8BD9AE;
    STA.B DP_Mode7TransMatrixA                                           ;8BD9B1;
    STZ.B DP_Mode7TransMatrixB                                           ;8BD9B3;
    STZ.B DP_Mode7TransMatrixC                                           ;8BD9B5;
    STA.B DP_Mode7TransMatrixD                                           ;8BD9B7;
    LDA.W #$0080                                                         ;8BD9B9;
    STA.B DP_Mode7TransOriginX                                           ;8BD9BC;
    STA.B DP_Mode7TransOriginY                                           ;8BD9BE;
    STZ.W CinematicBG1_XPosition                                         ;8BD9C0;
    STZ.W CinematicBG1_YPosition                                         ;8BD9C3;
    SEP #$20                                                             ;8BD9C6;
    LDA.B #$01                                                           ;8BD9C8;
    STA.B DP_MainScreenLayers                                            ;8BD9CA;
    LDA.B #$10                                                           ;8BD9CC;
    STA.B DP_SubScreenLayers                                             ;8BD9CE;
    LDA.B #$02                                                           ;8BD9D0;
    STA.B DP_ColorMathA                                                  ;8BD9D2;
    LDA.B #$21                                                           ;8BD9D4;
    STA.B DP_ColorMathB                                                  ;8BD9D6;
    REP #$20                                                             ;8BD9D8;
    JSR.W PaletteCrossFading_CopyCurrentPalettesToFadingPalettes         ;8BD9DA;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BD9DD;
    LDX.W #$01A0                                                         ;8BD9E0;
    LDY.W #$0010                                                         ;8BD9E3;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BD9E6;
    LDX.W #$01E0                                                         ;8BD9E9;
    LDY.W #$0010                                                         ;8BD9EC;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BD9EF;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BD9F2;
    LDA.W #$003F                                                         ;8BD9F5;
    STA.W CinematicFunctionTimer                                         ;8BD9F8;
    LDA.W #CinematicFunc_Ending_ZebesDestruction2_CrossFade_FadingIn     ;8BD9FB;
    STA.W CinematicFunction                                              ;8BD9FE;
    RTS                                                                  ;8BDA01;


;;; $DA02: Cinematic function - ending - Zebes destruction scene 2 - cross-fade to space view - fading in ;;;
CinematicFunc_Ending_ZebesDestruction2_CrossFade_FadingIn:
    JSR.W CinematicFunction_Ending_ZebesDestruction2_CrossFade           ;8BDA02;
    JSR.W AdvanceFastScreenFadeIn                                        ;8BDA05;
    BCC .return                                                          ;8BDA08;
    LDA.W #$0002                                                         ;8BDA0A;
    STA.W ScreenFadeDelay                                                ;8BDA0D;
    STA.W ScreenFadeCounter                                              ;8BDA10;
    LDA.W #CinematicFunction_Ending_ZebesDestruction2_CrossFade          ;8BDA13;
    STA.W CinematicFunction                                              ;8BDA16;

  .return:
    RTS                                                                  ;8BDA19;


;;; $DA1A: Cinematic function - ending - Zebes destruction scene 2 - cross-fade to space view ;;;
CinematicFunction_Ending_ZebesDestruction2_CrossFade:
    LDA.W Mode7TransformationZoomLevel                                   ;8BDA1A;
    CLC                                                                  ;8BDA1D;
    ADC.W #$0004                                                         ;8BDA1E;
    STA.W Mode7TransformationZoomLevel                                   ;8BDA21;
    LDA.W CinematicFunctionTimer                                         ;8BDA24;
    BIT.W #$0001                                                         ;8BDA27;
    BNE .decTimer                                                        ;8BDA2A;
    LDX.W #$00E0                                                         ;8BDA2C;
    LDY.W #$0010                                                         ;8BDA2F;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BDA32;
    LDX.W #$01A0                                                         ;8BDA35;
    LDY.W #$0010                                                         ;8BDA38;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BDA3B;
    LDX.W #$01E0                                                         ;8BDA3E;
    LDY.W #$0010                                                         ;8BDA41;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BDA44;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BDA47;

  .decTimer:
    DEC.W CinematicFunctionTimer                                         ;8BDA4A;
    BMI .setupLoop                                                       ;8BDA4D;
    JMP.W .return                                                        ;8BDA4F;

  .setupLoop:
    LDX.W #$0000                                                         ;8BDA52;

  .loopPalettes:
    LDA.L Palettes_ZebesExplosionScene,X                                 ;8BDA55;
    STA.L Palettes,X                                                     ;8BDA59;
    INX                                                                  ;8BDA5D;
    INX                                                                  ;8BDA5E;
    CPX.W #$0100                                                         ;8BDA5F;
    BMI .loopPalettes                                                    ;8BDA62;
    SEP #$20                                                             ;8BDA64;
    STZ.B DP_Mode7Settings                                               ;8BDA66;
    LDA.B #$70                                                           ;8BDA68;
    STA.B DP_BG1TilemapAddrSize                                          ;8BDA6A;
    LDA.B #$78                                                           ;8BDA6C;
    STA.B DP_BG2TilemapAddrSize                                          ;8BDA6E;
    STZ.B DP_BG3TilemapAddrSize                                          ;8BDA70;
    STZ.B DP_BG4TilemapAddrSize                                          ;8BDA72;
    LDA.B #$44                                                           ;8BDA74;
    STA.B DP_BGTilesAddr                                                 ;8BDA76;
    STZ.B DP_BGTilesAddr+1                                               ;8BDA78;
    LDA.B #$10                                                           ;8BDA7A;
    STA.B DP_MainScreenLayers                                            ;8BDA7C;
    STZ.B DP_SubScreenLayers                                             ;8BDA7E;
    STZ.B DP_WindowAreaMainScreen                                        ;8BDA80;
    STZ.B DP_WindowAreaSubScreen                                         ;8BDA82;
    STZ.B DP_NextGameplayColorMathA                                      ;8BDA84;
    STZ.B DP_NextGameplayColorMathB                                      ;8BDA86;
    STZ.B DP_ColorMathA                                                  ;8BDA88;
    STZ.B DP_ColorMathB                                                  ;8BDA8A;
    LDA.B #$E0                                                           ;8BDA8C;
    STA.W $2132                                                          ;8BDA8E;
    LDA.B #$20                                                           ;8BDA91;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDA93;
    LDA.B #$40                                                           ;8BDA95;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDA97;
    LDA.B #$80                                                           ;8BDA99;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDA9B;
    STZ.B DP_Mosaic                                                      ;8BDA9D;
    REP #$20                                                             ;8BDA9F;
    STZ.W CinematicBG1_XSubPosition                                      ;8BDAA1;
    STZ.W CinematicBG1_XPosition                                         ;8BDAA4;
    STZ.W CinematicBG1_YSubPosition                                      ;8BDAA7;
    STZ.W CinematicBG1_YPosition                                         ;8BDAAA;
    STZ.W CinematicBG1_XSubSpeed                                         ;8BDAAD;
    STZ.W CinematicBG1_XSpeed                                            ;8BDAB0;
    STZ.W CinematicBG1_YSubSpeed                                         ;8BDAB3;
    STZ.W CinematicBG1_YSpeed                                            ;8BDAB6;
    STZ.W LayerBlending_DefaultConfig                                    ;8BDAB9;
    STZ.B DP_BG2XScroll                                                  ;8BDABC;
    STZ.B DP_BG2YScroll                                                  ;8BDABE;
    STZ.W ScreenFadeDelay                                                ;8BDAC0;
    LDA.W #$0002                                                         ;8BDAC3;
    STA.W ScreenFadeCounter                                              ;8BDAC6;
    LDA.W #CinematicFunc_Ending_SpaceView_LoadGunshipBG                  ;8BDAC9;
    STA.W CinematicFunction                                              ;8BDACC;
    STZ.W CinematicFunctionTimer                                         ;8BDACF;

  .return:
    RTS                                                                  ;8BDAD2;


;;; $DAD3: Cinematic function - ending - space view - load gunship BG ;;;
CinematicFunc_Ending_SpaceView_LoadGunshipBG:
    LDA.W CinematicFunctionTimer                                         ;8BDAD3;
    CMP.W #$0008                                                         ;8BDAD6;
    BPL .timerGreaterThan7                                               ;8BDAD9;
    ASL                                                                  ;8BDADB;
    TAX                                                                  ;8BDADC;
    LDY.W Mode7Stack                                                     ;8BDADD;
    LDA.W #$00C0                                                         ;8BDAE0;
    STA.W Mode7Transfer.control,Y                                        ;8BDAE3;
    LDA.W .sourceAddresses,X                                             ;8BDAE6;
    STA.W Mode7Transfer.src,Y                                            ;8BDAE9;
    LDA.W #$007F                                                         ;8BDAEC;
    STA.W Mode7Transfer.src+2,Y                                          ;8BDAEF;
    LDA.W #$0800                                                         ;8BDAF2;
    STA.W Mode7Transfer.size,Y                                           ;8BDAF5;
    LDA.W .destinationAddresses,X                                        ;8BDAF8;
    STA.W Mode7Transfer.dest,Y                                           ;8BDAFB;
    LDA.W #$0080                                                         ;8BDAFE;
    STA.W Mode7Transfer.inc,Y                                            ;8BDB01;
    TYA                                                                  ;8BDB04;
    CLC                                                                  ;8BDB05;
    ADC.W #$0009                                                         ;8BDB06;
    STA.W Mode7Stack                                                     ;8BDB09;
    BRA +                                                                ;8BDB0C;

  .timerGreaterThan7:
    ASL                                                                  ;8BDB0E;
    TAX                                                                  ;8BDB0F;
    LDY.W Mode7Stack                                                     ;8BDB10;
    LDA.W #$0080                                                         ;8BDB13;
    STA.W Mode7Transfer.control,Y                                        ;8BDB16;
    LDA.W .sourceAddresses,X                                             ;8BDB19;
    STA.W Mode7Transfer.src,Y                                            ;8BDB1C;
    LDA.W #$007F                                                         ;8BDB1F;
    STA.W Mode7Transfer.src+2,Y                                          ;8BDB22;
    LDA.W #$0800                                                         ;8BDB25;
    STA.W Mode7Transfer.size,Y                                           ;8BDB28;
    LDA.W .destinationAddresses,X                                        ;8BDB2B;
    STA.W Mode7Transfer.dest,Y                                           ;8BDB2E;
    LDA.W #$0000                                                         ;8BDB31;
    STA.W Mode7Transfer.inc,Y                                            ;8BDB34;
    TYA                                                                  ;8BDB37;
    CLC                                                                  ;8BDB38;
    ADC.W #$0009                                                         ;8BDB39;
    STA.W Mode7Stack                                                     ;8BDB3C;

+   LDA.W CinematicFunctionTimer                                         ;8BDB3F;
    INC                                                                  ;8BDB42;
    STA.W CinematicFunctionTimer                                         ;8BDB43;
    CMP.W #$0010                                                         ;8BDB46;
    BMI .return                                                          ;8BDB49;
    SEP #$20                                                             ;8BDB4B;
    LDA.B #$01                                                           ;8BDB4D;
    STA.B DP_BGModeSize                                                  ;8BDB4F;
    REP #$20                                                             ;8BDB51;
    STZ.W CinematicFunctionTimer                                         ;8BDB53;
    LDA.W #RTS_8BDB9D                                                    ;8BDB56;
    STA.W CinematicFunction                                              ;8BDB59;

  .return:
    RTS                                                                  ;8BDB5C;

  .sourceAddresses:
    dw $0000,$0800,$1000,$1800,$2000,$2800,$3000,$3800                   ;8BDB5D; Tiles source addresses (bank $7F)
    dw $4000,$4800,$5000,$5800,$6000,$6800,$7000,$7800                   ;8BDB6D; Tilemap source addresses (bank $7F)
  .destinationAddresses:
    dw $0000,$0800,$1000,$1800,$2000,$2800,$3000,$3800                   ;8BDB7D; Tiles destination addresses (VRAM)
    dw $0000,$0800,$1000,$1800,$2000,$2800,$3000,$3800                   ;8BDB8D; Tilemap destination addresses (VRAM)


;;; $DB9D: RTS ;;;
RTS_8BDB9D:
    RTS                                                                  ;8BDB9D;


;;; $DB9E: Cinematic function - ending - space view - change music ;;;
CinematicFunc_Ending_SpaceView_ChangeMusic:
    DEC.W CinematicFunctionTimer                                         ;8BDB9E;
    BEQ .changeMusic                                                     ;8BDBA1;
    BPL .return                                                          ;8BDBA3;

  .changeMusic:
    LDA.W #$0000                                                         ;8BDBA5;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BDBA8;
    LDA.W #$FF3C                                                         ;8BDBAC;
    JSL.L QueueMusicDataOrTrack_8FrameDelay                              ;8BDBAF;
    LDA.W #$0005                                                         ;8BDBB3;
    LDY.W #$000E                                                         ;8BDBB6;
    JSL.L QueueMusicDataOrTrack_YFrameDelay                              ;8BDBB9;
    LDA.W #CinematicFunc_Ending_SpaceView_GunshipEmergence_Setup         ;8BDBBD;
    STA.W CinematicFunction                                              ;8BDBC0;

  .return:
    RTS                                                                  ;8BDBC3;


;;; $DBC4: Cinematic function - ending - space view - gunship emergence - setup ;;;
CinematicFunc_Ending_SpaceView_GunshipEmergence_Setup:
    JSL.L CheckIfMusicIsQueued                                           ;8BDBC4;
    BCC .noMusicQueued                                                   ;8BDBC8;
    RTS                                                                  ;8BDBCA;

  .noMusicQueued:
    SEP #$20                                                             ;8BDBCB;
    LDA.B #$07                                                           ;8BDBCD;
    STA.B DP_BGModeSize                                                  ;8BDBCF;
    LDA.B #$80                                                           ;8BDBD1;
    STA.B DP_Mode7Settings                                               ;8BDBD3;
    LDA.B #$11                                                           ;8BDBD5;
    STA.B DP_MainScreenLayers                                            ;8BDBD7;
    STZ.B DP_SubScreenLayers                                             ;8BDBD9;
    STZ.B DP_ColorMathA                                                  ;8BDBDB;
    LDA.B #$30                                                           ;8BDBDD;
    STA.B DP_ColorMathB                                                  ;8BDBDF;
    LDA.B #$3F                                                           ;8BDBE1;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDBE3;
    LDA.B #$5F                                                           ;8BDBE5;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDBE7;
    LDA.B #$9F                                                           ;8BDBE9;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDBEB;
    LDA.B #$00                                                           ;8BDBED;
    STA.B DP_BG1TilemapAddrSize                                          ;8BDBEF;
    LDA.B #$00                                                           ;8BDBF1;
    STA.B DP_BGTilesAddr                                                 ;8BDBF3;
    REP #$20                                                             ;8BDBF5;
    LDA.W #$0000                                                         ;8BDBF7;
    STA.L Palettes                                                       ;8BDBFA;
    STA.L Palettes_BG3P4                                                 ;8BDBFE;
    STA.L Palettes_SpriteP0                                              ;8BDC02;
    LDY.W #PaletteFXObjects_ZebesExplosionPlanetAfterglow                ;8BDC06;
    JSL.L Spawn_PaletteFXObject                                          ;8BDC09;
    LDY.W #PaletteFXObjects_GunshipEmergineFromZebesExplosion            ;8BDC0D;
    JSL.L Spawn_PaletteFXObject                                          ;8BDC10;
    LDA.W #$0038                                                         ;8BDC14;
    STA.B DP_Mode7TransOriginX                                           ;8BDC17;
    LDA.W #$0018                                                         ;8BDC19;
    STA.B DP_Mode7TransOriginY                                           ;8BDC1C;
    LDA.W #$FFB8                                                         ;8BDC1E;
    STA.W CinematicBG1_XPosition                                         ;8BDC21;
    LDA.W #$FF98                                                         ;8BDC24;
    STA.W CinematicBG1_YPosition                                         ;8BDC27;
    LDA.W #$0C00                                                         ;8BDC2A;
    STA.W Mode7TransformationZoomLevel                                   ;8BDC2D;
    LDA.W #$FF90                                                         ;8BDC30;
    STA.W Mode7TransformationAngle                                       ;8BDC33;
    LDA.W #$0001                                                         ;8BDC36;
    STA.W CinematicFunctionTimer                                         ;8BDC39;
    LDA.W #$00C0                                                         ;8BDC3C;
    STA.W EndingShipXVelocity                                            ;8BDC3F;
    STZ.W EndingShipShakeIndex                                           ;8BDC42;
    LDA.W #CinematicFunc_Ending_SpaceView_GunshipEmergence_SpinningFast  ;8BDC45;
    STA.W CinematicFunction                                              ;8BDC48;
    RTS                                                                  ;8BDC4B;


;;; $DC4C: Fade out Zebes explosion afterglow ;;;
FadeOut_ZebesExplosion_AfterGlow:
    PHP                                                                  ;8BDC4C;
    REP #$30                                                             ;8BDC4D;
    DEC.W CinematicFunctionTimer                                         ;8BDC4F;
    BEQ .timerExpired                                                    ;8BDC52;
    BPL .return                                                          ;8BDC54;

  .timerExpired:
    SEP #$20                                                             ;8BDC56;
    LDA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDC58;
    SEC                                                                  ;8BDC5A;
    SBC.B #$01                                                           ;8BDC5B;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDC5D;
    CMP.B #$20                                                           ;8BDC5F;
    BPL .color1                                                          ;8BDC61;
    LDA.B #$20                                                           ;8BDC63;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDC65;

  .color1:
    LDA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDC67;
    SEC                                                                  ;8BDC69;
    SBC.B #$01                                                           ;8BDC6A;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDC6C;
    CMP.B #$40                                                           ;8BDC6E;
    BPL .color2                                                          ;8BDC70;
    LDA.B #$40                                                           ;8BDC72;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDC74;

  .color2:
    LDA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDC76;
    SEC                                                                  ;8BDC78;
    SBC.B #$01                                                           ;8BDC79;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDC7B;
    CMP.B #$80                                                           ;8BDC7D;
    BPL .checkColors                                                     ;8BDC7F;
    LDA.B #$80                                                           ;8BDC81;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDC83;

  .checkColors:
    LDA.B DP_ColorMathSubScreenBackdropColor0                            ;8BDC85;
    CMP.B #$20                                                           ;8BDC87;
    BNE .setTimer                                                        ;8BDC89;
    LDA.B DP_ColorMathSubScreenBackdropColor1                            ;8BDC8B;
    CMP.B #$40                                                           ;8BDC8D;
    BNE .setTimer                                                        ;8BDC8F;
    LDA.B DP_ColorMathSubScreenBackdropColor2                            ;8BDC91;
    CMP.B #$80                                                           ;8BDC93;
    BNE .setTimer                                                        ;8BDC95;
    STZ.B DP_ColorMathA                                                  ;8BDC97;
    STZ.B DP_ColorMathB                                                  ;8BDC99;

  .setTimer:
    REP #$20                                                             ;8BDC9B;
    LDA.W #$0008*!FPS                                                    ;8BDC9D;
    STA.W CinematicFunctionTimer                                         ;8BDCA0;

  .return:
    PLP                                                                  ;8BDCA3;
    RTS                                                                  ;8BDCA4;


;;; $DCA5: Cinematic function - ending - space view - gunship emergence - spinning fast ;;;
CinematicFunc_Ending_SpaceView_GunshipEmergence_SpinningFast:
    LDA.W IntroCrossFadeTimer                                            ;8BDCA5;
    BEQ .fadeOutAfterGlow                                                ;8BDCA8;
    DEC                                                                  ;8BDCAA;
    STA.W IntroCrossFadeTimer                                            ;8BDCAB;
    BRA .timerExpired                                                    ;8BDCAE;

  .fadeOutAfterGlow:
    JSR.W FadeOut_ZebesExplosion_AfterGlow                               ;8BDCB0;

  .timerExpired:
    LDA.W Mode7TransformationAngle                                       ;8BDCB3;
    SEC                                                                  ;8BDCB6;
    SBC.W #$0004                                                         ;8BDCB7;
    AND.W #$00FF                                                         ;8BDCBA;
    STA.W Mode7TransformationAngle                                       ;8BDCBD;
    LDA.W EndingShipShakeIndex                                           ;8BDCC0;
    ASL                                                                  ;8BDCC3;
    ASL                                                                  ;8BDCC4;
    TAX                                                                  ;8BDCC5;
    LDA.W CinematicBG1_XSubPosition                                      ;8BDCC6;
    CLC                                                                  ;8BDCC9;
    ADC.W .shakingXVelocities+2,X                                        ;8BDCCA;
    STA.W CinematicBG1_XSubPosition                                      ;8BDCCD;
    LDA.W CinematicBG1_XPosition                                         ;8BDCD0;
    ADC.W .shakingXVelocities,X                                          ;8BDCD3;
    STA.W CinematicBG1_XPosition                                         ;8BDCD6;
    LDA.W EndingShipShakeIndex                                           ;8BDCD9;
    INC                                                                  ;8BDCDC;
    AND.W #$000F                                                         ;8BDCDD;
    STA.W EndingShipShakeIndex                                           ;8BDCE0;
    LDA.W Mode7TransformationZoomLevel                                   ;8BDCE3;
    SEC                                                                  ;8BDCE6;
    SBC.W #$0008                                                         ;8BDCE7;
    STA.W Mode7TransformationZoomLevel                                   ;8BDCEA;
    CMP.W #$05B0                                                         ;8BDCED;
    BPL .return                                                          ;8BDCF0;
    LDA.W #$0001                                                         ;8BDCF2;
    STA.W IntroCrossFadeTimer                                            ;8BDCF5;
    STZ.W EndingShipShakeIndex                                           ;8BDCF8;
    LDA.W #CinematicFunc_Ending_SpaceView_GunshipEmergence_SpinningSlow  ;8BDCFB;
    STA.W CinematicFunction                                              ;8BDCFE;

  .return:
    RTS                                                                  ;8BDD01;

  .shakingXVelocities:
    dw $0000,$8000, $0000,$8000, $0000,$8000, $0000,$8000                ;8BDD02;
    dw $FFFF,$8000, $FFFF,$8000, $0000,$8000, $0000,$8000                ;8BDD12;
    dw $0000,$8000, $0000,$8000, $FFFF,$8000, $FFFF,$8000                ;8BDD22;
    dw $0000,$8000, $0000,$8000, $FFFF,$8000, $FFFF,$8000                ;8BDD32;


;;; $DD42: Cinematic function - ending - space view - gunship emergence - spinning slow ;;;
CinematicFunc_Ending_SpaceView_GunshipEmergence_SpinningSlow:
    JSR.W FadeOut_ZebesExplosion_AfterGlow                               ;8BDD42;
    LDA.W Mode7TransformationAngle                                       ;8BDD45;
    CMP.W #$00E0                                                         ;8BDD48;
    BEQ .notE0                                                           ;8BDD4B;
    SEC                                                                  ;8BDD4D;
    SBC.W #regional($0001, $0002)                                        ;8BDD4E;
    AND.W #$00FF                                                         ;8BDD51;
    STA.W Mode7TransformationAngle                                       ;8BDD54;

  .notE0:
    LDA.W EndingShipShakeIndex                                           ;8BDD57;
    ASL                                                                  ;8BDD5A;
    ASL                                                                  ;8BDD5B;
    TAX                                                                  ;8BDD5C;
    LDA.W CinematicBG1_XSubPosition                                      ;8BDD5D;
    CLC                                                                  ;8BDD60;
    ADC.W .shakingXVelocities+2,X                                        ;8BDD61;
    STA.W CinematicBG1_XSubPosition                                      ;8BDD64;
    LDA.W CinematicBG1_XPosition                                         ;8BDD67;
    ADC.W .shakingXVelocities,X                                          ;8BDD6A;
    STA.W CinematicBG1_XPosition                                         ;8BDD6D;
    LDA.W EndingShipShakeIndex                                           ;8BDD70;
    INC                                                                  ;8BDD73;
    AND.W #$0007                                                         ;8BDD74;
    STA.W EndingShipShakeIndex                                           ;8BDD77;
    LDA.W Mode7TransformationZoomLevel                                   ;8BDD7A;
    SEC                                                                  ;8BDD7D;
    SBC.W #regional($0002, $0003)                                        ;8BDD7E;
    STA.W Mode7TransformationZoomLevel                                   ;8BDD81;
    CMP.W #$04A0                                                         ;8BDD84;
    BPL .return                                                          ;8BDD87;
    LDA.W #CinematicFunc_Ending_SpaceView_GunshipEmergence_FlyToCamera   ;8BDD89;
    STA.W CinematicFunction                                              ;8BDD8C;
    LDA.W #$8000                                                         ;8BDD8F;
    STA.W EndingShipShakeIndex                                           ;8BDD92;
    STZ.W EndingShipXVelocity                                            ;8BDD95;
    LDA.W #$000F                                                         ;8BDD98;
    JSL.L CheckIfEvent_inA_HasHappened                                   ;8BDD9B;
    BCC .return                                                          ;8BDD9F;
    LDY.W #CinematicSpriteObjectDefinitions_CrittersEscape               ;8BDDA1;
    LDA.W #$0004                                                         ;8BDDA4;
    STA.B DP_Temp12                                                      ;8BDDA7;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BDDA9;

  .return:
    RTS                                                                  ;8BDDAC;

  .shakingXVelocities:
if !PAL == 0
    dw $0001,$0000,$0001,$0000,$0001,$0000,$FFFF,$0000                   ;8BDDAD;
    dw $FFFF,$0000,$0001,$0000,$0001,$0000,$FFFF,$0000                   ;8BDDBD;
else
    dw $0001,$4000,$0001,$4000,$0001,$4000,$FFFE,$C000
    dw $FFFE,$C000,$0001,$4000,$0001,$4000,$FFFE,$C000
endif


;;; $DDCD: Cinematic function - ending - space view - gunship emergence - fly into camera ;;;
CinematicFunc_Ending_SpaceView_GunshipEmergence_FlyToCamera:
    JSR.W FadeOut_ZebesExplosion_AfterGlow                               ;8BDDCD;
    LDA.W EndingShipXSubVelocity                                         ;8BDDD0;
    SEC                                                                  ;8BDDD3;
    SBC.W #$0100*!SPF                                                    ;8BDDD4;
    STA.W EndingShipXSubVelocity                                         ;8BDDD7;
    LDA.W EndingShipXVelocity                                            ;8BDDDA;
    SBC.W #$0000                                                         ;8BDDDD;
    STA.W EndingShipXVelocity                                            ;8BDDE0;
    LDA.W CinematicBG1_XSubPosition                                      ;8BDDE3;
    CLC                                                                  ;8BDDE6;
    ADC.W EndingShipXSubVelocity                                         ;8BDDE7;
    STA.W CinematicBG1_XSubPosition                                      ;8BDDEA;
    LDA.W CinematicBG1_XPosition                                         ;8BDDED;
    ADC.W EndingShipXVelocity                                            ;8BDDF0;
    STA.W CinematicBG1_XPosition                                         ;8BDDF3;
    LDA.W Mode7TransformationZoomLevel                                   ;8BDDF6;
    CMP.W #regional($0180, $0200)                                        ;8BDDF9;
    BPL +                                                                ;8BDDFC;
    LDA.W CinematicFrameCounter                                          ;8BDDFE;
    BIT.W #$0003                                                         ;8BDE01;
    BNE +                                                                ;8BDE04;
    LDA.W Mode7TransformationAngle                                       ;8BDE06;
    CMP.W #$0010                                                         ;8BDE09;
    BEQ +                                                                ;8BDE0C;
    CLC                                                                  ;8BDE0E;
    ADC.W #$0002                                                         ;8BDE0F;
    AND.W #$00FF                                                         ;8BDE12;
    STA.W Mode7TransformationAngle                                       ;8BDE15;

+   LDA.W Mode7TransformationZoomLevel                                   ;8BDE18;
    CMP.W #$0020                                                         ;8BDE1B;
    BMI .zoomLessThan20                                                  ;8BDE1E;
    SEC                                                                  ;8BDE20;
    SBC.W #regional($0004, $0005)                                        ;8BDE21;
    STA.W Mode7TransformationZoomLevel                                   ;8BDE24;
    RTS                                                                  ;8BDE27;

  .zoomLessThan20:
    LDY.W #CinematicSpriteObjectDefinitions_TheOperationWas              ;8BDE28;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BDE2B;
    LDA.W #RTS_8BDE63                                                    ;8BDE2E;
    STA.W CinematicFunction                                              ;8BDE31;
    LDX.W #$001E                                                         ;8BDE34;

  .loopPalette:
    LDA.W .greyGunshipPalette,X                                          ;8BDE37;
    STA.L Palettes_BG12P5,X                                              ;8BDE3A;
    DEX                                                                  ;8BDE3E;
    DEX                                                                  ;8BDE3F;
    BPL .loopPalette                                                     ;8BDE40;
    RTS                                                                  ;8BDE42;

  .greyGunshipPalette:
    dw $0000,$6F7B,$4A52,$1CE7,$0000,$5AD6,$4A52,$35AD                   ;8BDE43;
    dw $2529,$7FFF,$56B5,$294A,$4210,$2D6B,$18C6,$7FFF                   ;8BDE53;


;;; $DE63: RTS. Cinematic function - ending - space view - gunship emergence - freeze frame ;;;
RTS_8BDE63:
    RTS                                                                  ;8BDE63;


;;; $DE64: Cinematic function - ending - space view - transition to credits ;;;
CinematicFunction_Ending_SpaceView_GunshipEmergence_Credits:
    LDA.W #$0001                                                         ;8BDE64;
    STA.W ScreenFadeCounter                                              ;8BDE67;
    JSR.W AdvanceFastScreenFadeOut                                       ;8BDE6A;
    BCC .return                                                          ;8BDE6D;
    JSL.L EnableNMI                                                      ;8BDE6F;
    STZ.W ScreenFadeDelay                                                ;8BDE73;
    STZ.W ScreenFadeCounter                                              ;8BDE76;
    LDA.W #CinematicFunction_Credits_Setup                               ;8BDE79;
    STA.W CinematicFunction                                              ;8BDE7C;

  .return:
    RTS                                                                  ;8BDE7F;


;;; $DE80: Cinematic function - credits - setup ;;;
CinematicFunction_Credits_Setup:
    JSR.W Setup_PPU_Credits                                              ;8BDE80;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BDE83;
    JSL.L Clear_PaletteFXObjects                                         ;8BDE86;
    LDX.W #$0000                                                         ;8BDE8A;

  .loopPalettes:
    LDA.L Palettes_Credits,X                                             ;8BDE8D;
    STA.L Palettes,X                                                     ;8BDE91;
    INX                                                                  ;8BDE95;
    INX                                                                  ;8BDE96;
    CPX.W #$0100                                                         ;8BDE97;
    BMI .loopPalettes                                                    ;8BDE9A;
    LDA.W #Tiles_Samus_Waiting_for_Credits_to_End>>8&$FF00               ;8BDE9C;
    STA.B DP_DecompSrc+1                                                 ;8BDE9F;
    LDA.W #Tiles_Samus_Waiting_for_Credits_to_End                        ;8BDEA1;
    STA.B DP_DecompSrc                                                   ;8BDEA4;
    JSL.L Decompression_HardcodedDestination                             ;8BDEA6;
    dl CreditsTilemap                                                    ;8BDEAA;
    LDA.W #Tiles_PostCredits_SuitlessSamus>>8&$FF00                      ;8BDEAD;
    STA.B DP_DecompSrc+1                                                 ;8BDEB0;
    LDA.W #Tiles_PostCredits_SuitlessSamus                               ;8BDEB2;
    STA.B DP_DecompSrc                                                   ;8BDEB5;
    JSL.L Decompression_HardcodedDestination                             ;8BDEB7;
    dl PostCreditsSuitlessSamusTiles                                     ;8BDEBB;
    LDA.W #Tiles_PostCredits_Samus_Shooting_the_Screen>>8&$FF00          ;8BDEBE;
    STA.B DP_DecompSrc+1                                                 ;8BDEC1;
    LDA.W #Tiles_PostCredits_Samus_Shooting_the_Screen                   ;8BDEC3;
    STA.B DP_DecompSrc                                                   ;8BDEC6;
    JSL.L Decompression_HardcodedDestination                             ;8BDEC8;
    dl PostCreditsSamusShootingScreenTiles                               ;8BDECC;
    LDA.W #Tiles_Font3_Background>>8&$FF00                               ;8BDECF;
    STA.B DP_DecompSrc+1                                                 ;8BDED2;
    LDA.W #Tiles_Font3_Background                                        ;8BDED4;
    STA.B DP_DecompSrc                                                   ;8BDED7;
    JSL.L Decompression_HardcodedDestination                             ;8BDED9;
    dl CreditsFont3                                                      ;8BDEDD;
    LDA.W #Samus_Waiting_for_Credits_to_End_Tilemap>>8&$FF00             ;8BDEE0;
    STA.B DP_DecompSrc+1                                                 ;8BDEE3;
    LDA.W #Samus_Waiting_for_Credits_to_End_Tilemap                      ;8BDEE5;
    STA.B DP_DecompSrc                                                   ;8BDEE8;
    JSL.L Decompression_HardcodedDestination                             ;8BDEEA;
    dl SamusWaitingForCreditsTilemap                                     ;8BDEEE;
    LDA.W #InterleavedTilesTilemapPostCreditsSamusBeamMode7>>8&$FF00     ;8BDEF1;
    STA.B DP_DecompSrc+1                                                 ;8BDEF4;
    LDA.W #InterleavedTilesTilemapPostCreditsSamusBeamMode7              ;8BDEF6;
    STA.B DP_DecompSrc                                                   ;8BDEF9;
    JSL.L Decompression_HardcodedDestination                             ;8BDEFB;
    dl PostCreditsSamusBeamInterleavedTilesTilemap                       ;8BDEFF;
    LDA.W #Tiles_PostCredits_Samus_Transformation_Effect>>8&$FF00        ;8BDF02;
    STA.B DP_DecompSrc+1                                                 ;8BDF05;
    LDA.W #Tiles_PostCredits_Samus_Transformation_Effect                 ;8BDF07;
    STA.B DP_DecompSrc                                                   ;8BDF0A;
    JSL.L Decompression_HardcodedDestination                             ;8BDF0C;
    dl PostCreditsSamusTransformationEffectTiles                         ;8BDF10;
    LDA.W #PostCredits_Samus_Transformation_Effect_Tilemap>>8&$FF00      ;8BDF13;
    STA.B DP_DecompSrc+1                                                 ;8BDF16;
    LDA.W #PostCredits_Samus_Transformation_Effect_Tilemap               ;8BDF18;
    STA.B DP_DecompSrc                                                   ;8BDF1B;
    JSL.L Decompression_HardcodedDestination                             ;8BDF1D;
    dl PostCreditsSamusTransformationEffectTilemap                       ;8BDF21;
    SEP #$30                                                             ;8BDF24;
    LDA.B #$00                                                           ;8BDF26;
    STA.W $2116                                                          ;8BDF28;
    LDA.B #$20                                                           ;8BDF2B;
    STA.W $2117                                                          ;8BDF2D;
    LDA.B #$80                                                           ;8BDF30;
    STA.W $2115                                                          ;8BDF32;
    JSL.L SetupHDMATransfer                                              ;8BDF35;
    db $01,$01,$18                                                       ;8BDF39;
    dl PostCreditsSamusTransformationEffectTiles                         ;8BDF3C;
    dw $0100                                                             ;8BDF3F;
    LDA.B #$02                                                           ;8BDF41;
    STA.W $420B                                                          ;8BDF43;
    LDA.B #$00                                                           ;8BDF46;
    STA.W $2116                                                          ;8BDF48;
    LDA.B #$24                                                           ;8BDF4B;
    STA.W $2117                                                          ;8BDF4D;
    LDA.B #$80                                                           ;8BDF50;
    STA.W $2115                                                          ;8BDF52;
    JSL.L SetupHDMATransfer                                              ;8BDF55;
    db $01,$01,$18                                                       ;8BDF59;
    dl PostCreditsSamusTransformationEffectTilemap                       ;8BDF5C;
    dw $0800                                                             ;8BDF5F;
    LDA.B #$02                                                           ;8BDF61;
    STA.W $420B                                                          ;8BDF63;
    LDA.B #$00                                                           ;8BDF66;
    STA.W $2116                                                          ;8BDF68;
    LDA.B #$40                                                           ;8BDF6B;
    STA.W $2117                                                          ;8BDF6D;
    LDA.B #$80                                                           ;8BDF70;
    STA.W $2115                                                          ;8BDF72;
    JSL.L SetupHDMATransfer                                              ;8BDF75;
    db $01,$01,$18                                                       ;8BDF79;
    dl CreditsFont3                                                      ;8BDF7C;
    dw $1000                                                             ;8BDF7F;
    LDA.B #$02                                                           ;8BDF81;
    STA.W $420B                                                          ;8BDF83;
    LDA.B #$00                                                           ;8BDF86;
    STA.W $2116                                                          ;8BDF88;
    LDA.B #$60                                                           ;8BDF8B;
    STA.W $2117                                                          ;8BDF8D;
    LDA.B #$80                                                           ;8BDF90;
    STA.W $2115                                                          ;8BDF92;
    JSL.L SetupHDMATransfer                                              ;8BDF95;
    db $01,$01,$18                                                       ;8BDF99;
    dl PostCreditsSamusShootingScreenTiles                               ;8BDF9C;
    dw $4000                                                             ;8BDF9F;
    LDA.B #$02                                                           ;8BDFA1;
    STA.W $420B                                                          ;8BDFA3;
    LDA.B #$00                                                           ;8BDFA6;
    STA.W $2116                                                          ;8BDFA8;
    LDA.B #$50                                                           ;8BDFAB;
    STA.W $2117                                                          ;8BDFAD;
    LDA.B #$80                                                           ;8BDFB0;
    STA.W $2115                                                          ;8BDFB2;
    JSL.L SetupHDMATransfer                                              ;8BDFB5;
    db $01,$01,$18                                                       ;8BDFB9;
    dl SamusWaitingForCreditsToEndTiles                                  ;8BDFBC;
    dw $2000                                                             ;8BDFBF;
    LDA.B #$02                                                           ;8BDFC1;
    STA.W $420B                                                          ;8BDFC3;
    LDA.B #$00                                                           ;8BDFC6;
    STA.W $2116                                                          ;8BDFC8;
    LDA.B #$4C                                                           ;8BDFCB;
    STA.W $2117                                                          ;8BDFCD;
    LDA.B #$80                                                           ;8BDFD0;
    STA.W $2115                                                          ;8BDFD2;
    JSL.L SetupHDMATransfer                                              ;8BDFD5;
    db $01,$01,$18                                                       ;8BDFD9;
    dl SamusWaitingForCreditsTilemap                                     ;8BDFDC;
    dw $0800                                                             ;8BDFDF;
    LDA.B #$02                                                           ;8BDFE1;
    STA.W $420B                                                          ;8BDFE3;
    REP #$30                                                             ;8BDFE6;
    LDA.W #Tiles_PostCredits_SuperMetroid_Icon>>8&$FF00                  ;8BDFE8;
    STA.B DP_DecompSrc+1                                                 ;8BDFEB;
    LDA.W #Tiles_PostCredits_SuperMetroid_Icon                           ;8BDFED;
    STA.B DP_DecompSrc                                                   ;8BDFF0;
    JSL.L Decompression_HardcodedDestination                             ;8BDFF2;
    dl PostCreditsSuperMetroidIcon_Tiles                                 ;8BDFF6;
    LDA.W #PostCredits_SuperMetroid_Icon_Tilemap>>8&$FF00                ;8BDFF9;
    STA.B DP_DecompSrc+1                                                 ;8BDFFC;
    LDA.W #PostCredits_SuperMetroid_Icon_Tilemap                         ;8BDFFE;
    STA.B DP_DecompSrc                                                   ;8BE001;
    JSL.L Decompression_HardcodedDestination                             ;8BE003;
    dl PostCreditsSuperMetroidIcon_Tilemap                               ;8BE007;
    LDA.W IGTHours                                                       ;8BE00A;
    CMP.W #$0003                                                         ;8BE00D;
    BPL .gameTimeOver3                                                   ;8BE010;
    SEP #$30                                                             ;8BE012;
    LDA.B #$00                                                           ;8BE014;
    STA.W $2116                                                          ;8BE016;
    LDA.B #$00                                                           ;8BE019;
    STA.W $2117                                                          ;8BE01B;
    LDA.B #$80                                                           ;8BE01E;
    STA.W $2115                                                          ;8BE020;
    JSL.L SetupHDMATransfer                                              ;8BE023;
    db $01,$01,$18                                                       ;8BE027;
    dl PostCreditsSuitlessSamusTiles                                     ;8BE02A;
    dw $4000                                                             ;8BE02D;
    LDA.B #$02                                                           ;8BE02F;
    STA.W $420B                                                          ;8BE031;
    BRA +                                                                ;8BE034;

  .gameTimeOver3:
    SEP #$30                                                             ;8BE036;
    LDA.B #$00                                                           ;8BE038;
    STA.W $2116                                                          ;8BE03A;
    LDA.B #$00                                                           ;8BE03D;
    STA.W $2117                                                          ;8BE03F;
    LDA.B #$80                                                           ;8BE042;
    STA.W $2115                                                          ;8BE044;
    JSL.L SetupHDMATransfer                                              ;8BE047;
    db $01,$01,$18                                                       ;8BE04B;
    dl SamusWaitingForCreditsToEndTiles                                  ;8BE04E;
    dw $4000                                                             ;8BE051;
    LDA.B #$02                                                           ;8BE053;
    STA.W $420B                                                          ;8BE055;

+   REP #$30                                                             ;8BE058;
    LDA.W #$0100                                                         ;8BE05A;
    STA.W $211B                                                          ;8BE05D;
    STA.B DP_Mode7TransMatrixA                                           ;8BE060;
    STZ.W $211C                                                          ;8BE062;
    STZ.B DP_Mode7TransMatrixB                                           ;8BE065;
    STZ.W $211D                                                          ;8BE067;
    STZ.B DP_Mode7TransMatrixC                                           ;8BE06A;
    STA.W $211E                                                          ;8BE06C;
    STA.B DP_Mode7TransMatrixD                                           ;8BE06F;
    LDA.W #$0068                                                         ;8BE071;
    STA.W $211F                                                          ;8BE074;
    STA.B DP_Mode7TransOriginX                                           ;8BE077;
    LDA.W #$0070                                                         ;8BE079;
    STA.W $2120                                                          ;8BE07C;
    STA.B DP_Mode7TransOriginY                                           ;8BE07F;
    LDA.W #$FFF8                                                         ;8BE081;
    STA.W CinematicBG1_XPosition                                         ;8BE084;
    LDA.W #$FFE8                                                         ;8BE087;
    STA.W CinematicBG1_YPosition                                         ;8BE08A;
    STZ.W Mode7TransformationAngle                                       ;8BE08D;
    LDA.W #$0900                                                         ;8BE090;
    STA.W Mode7TransformationZoomLevel                                   ;8BE093;
    JSL.L EnableNMI                                                      ;8BE096;
    SEP #$20                                                             ;8BE09A;
    LDA.B #$0F                                                           ;8BE09C;
    STA.B DP_Brightness                                                  ;8BE09E;
    REP #$20                                                             ;8BE0A0;
    STZ.W Layer1XPosition                                                ;8BE0A2;
    STZ.W Layer1YPosition                                                ;8BE0A5;
    JSL.L Enable_HDMAObjects                                             ;8BE0A8;
    LDX.W #$01FE                                                         ;8BE0AC;
    LDA.W #$0000                                                         ;8BE0AF;

  .loop:
    STA.L TitleScreenGradientColorMathSubScreenBackdropColorHDMATable,X  ;8BE0B2;
    DEX                                                                  ;8BE0B6;
    DEX                                                                  ;8BE0B7;
    BPL .loop                                                            ;8BE0B8;
    JSR.W Initialize_ShootingStars                                       ;8BE0BA;
    LDA.W #Credits_Tilemap>>8&$FF00                                      ;8BE0BD;
    STA.B DP_DecompSrc+1                                                 ;8BE0C0;
    LDA.W #Credits_Tilemap                                               ;8BE0C2;
    STA.B DP_DecompSrc                                                   ;8BE0C5;
    JSL.L Decompression_HardcodedDestination                             ;8BE0C7;
    dl CreditsTilemap                                                    ;8BE0CB;
    LDA.W #regional($007F, $004F)                                        ;8BE0CE;
    JSL.L Clear_CinematicBGObjects_CinematicBGTilemap                    ;8BE0D1;
    LDA.W #regional($007F, $004F)                                        ;8BE0D5;
    JSR.W Clear_CreditsObject_CinematicBGTilemapInA                      ;8BE0D8;
    JSR.W Enable_CreditsObject                                           ;8BE0DB;
    LDA.W #$0003                                                         ;8BE0DE;
    STA.W ScreenFadeDelay                                                ;8BE0E1;
    STA.W ScreenFadeCounter                                              ;8BE0E4;
    LDY.W #CreditsObjectDefinition                                       ;8BE0E7;
    JSR.W Spawn_CreditsObject                                            ;8BE0EA;
    LDA.W #RTS_8BDB9D                                                    ;8BE0ED;
    STA.W CinematicFunction                                              ;8BE0F0;
    RTS                                                                  ;8BE0F3;


;;; $E0F4: Cinematic function - post-credits - blank screen ;;;
CinematicFunction_PostCredits_BlankScreen:
    DEC.W CinematicFunctionTimer                                         ;8BE0F4;
    BEQ .timerExpired                                                    ;8BE0F7;
    BPL .return                                                          ;8BE0F9;

  .timerExpired:
    LDA.W #CinematicFunction_PostCredits_FadeInShootingStars             ;8BE0FB;
    STA.W CinematicFunction                                              ;8BE0FE;
    LDA.W #$0078                                                         ;8BE101;
    STA.W CinematicFunctionTimer                                         ;8BE104;
    SEP #$20                                                             ;8BE107;
    LDA.B #$10                                                           ;8BE109;
    STA.B DP_MainScreenLayers                                            ;8BE10B;
    REP #$20                                                             ;8BE10D;

  .return:
    RTS                                                                  ;8BE10F;


;;; $E110: Cinematic function - post-credits - fade in shooting stars ;;;
CinematicFunction_PostCredits_FadeInShootingStars:
    JSL.L HandleFadingIn                                                 ;8BE110;
    SEP #$20                                                             ;8BE114;
    LDA.B DP_Brightness                                                  ;8BE116;
    CMP.B #$0F                                                           ;8BE118;
    BEQ .fadedIn                                                         ;8BE11A;
    REP #$20                                                             ;8BE11C;
    RTS                                                                  ;8BE11E;

  .fadedIn:
    SEP #$20                                                             ;8BE11F;
    LDA.B #$02                                                           ;8BE121;
    STA.B DP_MainScreenLayers                                            ;8BE123;
    LDA.B #$10                                                           ;8BE125;
    STA.B DP_SubScreenLayers                                             ;8BE127;
    LDA.B #$02                                                           ;8BE129;
    STA.B DP_ColorMathA                                                  ;8BE12B;
    LDA.B #$22                                                           ;8BE12D;
    STA.B DP_ColorMathB                                                  ;8BE12F;
    REP #$20                                                             ;8BE131;
    STZ.W ScreenFadeDelay                                                ;8BE133;
    STZ.W ScreenFadeCounter                                              ;8BE136;
    JSR.W PaletteCrossFading_CopyCurrentPalettesToFadingPalettes         ;8BE139;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BE13C;
    LDX.W #$0040                                                         ;8BE13F;
    LDY.W #$0010                                                         ;8BE142;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BE145;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE148;
    LDA.W #$0020                                                         ;8BE14B;
    STA.W CinematicFunctionTimer                                         ;8BE14E;
    LDA.W #CinematicFunction_PostCredits_FadeInSamus                     ;8BE151;
    STA.W CinematicFunction                                              ;8BE154;
    RTS                                                                  ;8BE157;


;;; $E158: Cinematic function - post-credits - fade in Samus ;;;
CinematicFunction_PostCredits_FadeInSamus:
    LDX.W #$0040                                                         ;8BE158;
    LDY.W #$0010                                                         ;8BE15B;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BE15E;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE161;
    DEC.W CinematicFunctionTimer                                         ;8BE164;
    BEQ .timerExpired                                                    ;8BE167;
    BPL .return                                                          ;8BE169;

  .timerExpired:
    SEP #$20                                                             ;8BE16B;
    LDA.B #$12                                                           ;8BE16D;
    STA.B DP_MainScreenLayers                                            ;8BE16F;
    LDA.B #$04                                                           ;8BE171;
    STA.B DP_SubScreenLayers                                             ;8BE173;
    LDA.B #$02                                                           ;8BE175;
    STA.B DP_ColorMathA                                                  ;8BE177;
    LDA.B #$02                                                           ;8BE179;
    STA.B DP_ColorMathB                                                  ;8BE17B;
    REP #$20                                                             ;8BE17D;
    LDA.W #regional($00B4, $0084)                                        ;8BE17F;
    STA.W CinematicFunctionTimer                                         ;8BE182;
    LDA.W #CinematicFunction_PostCredits_WavySamus                       ;8BE185;
    STA.W CinematicFunction                                              ;8BE188;
    JSL.L Spawn_WavySamus_HDMAObject                                     ;8BE18B;

  .return:
    RTS                                                                  ;8BE18F;


;;; $E190: Cinematic function - post-credits - wavy Samus ;;;
CinematicFunction_PostCredits_WavySamus:
    LDA.B DP_BG3YScroll                                                  ;8BE190;
    CLC                                                                  ;8BE192;
    ADC.W #$0002                                                         ;8BE193;
    STA.B DP_BG3YScroll                                                  ;8BE196;
    DEC.W CinematicFunctionTimer                                         ;8BE198;
    BEQ .timerExpired                                                    ;8BE19B;
    BPL .return                                                          ;8BE19D;

  .timerExpired:
    LDX.W #$0000                                                         ;8BE19F;

  .loopTilemap:
    LDA.L Tilemap_PostCredits_DeeRForCe,X                                ;8BE1A2;
    STA.L CreditsTilemap_DeeRForCe,X                                     ;8BE1A6;
    INX                                                                  ;8BE1AA;
    INX                                                                  ;8BE1AB;
    CPX.W #$0240                                                         ;8BE1AC;
    BMI .loopTilemap                                                     ;8BE1AF;
    JSR.W CinematicBGObjects_Update32x32CinematicBGTilemap               ;8BE1B1;
    SEP #$20                                                             ;8BE1B4;
    LDA.B #$01                                                           ;8BE1B6;
    STA.B DP_MainScreenLayers                                            ;8BE1B8;
    STZ.B DP_SubScreenLayers                                             ;8BE1BA;
    STZ.B DP_ColorMathA                                                  ;8BE1BC;
    STZ.B DP_ColorMathB                                                  ;8BE1BE;
    REP #$20                                                             ;8BE1C0;
    LDA.W #regional($00B4, $0084)                                        ;8BE1C2;
    STA.W CinematicFunctionTimer                                         ;8BE1C5;
    LDA.W #CinematicFunction_PostCredits_DeerForce                       ;8BE1C8;
    STA.W CinematicFunction                                              ;8BE1CB;
    STZ.W WavySamus_Enable                                               ;8BE1CE;

  .return:
    RTS                                                                  ;8BE1D1;


;;; $E1D2: Cinematic function - post-credits - Deer Force ;;;
CinematicFunction_PostCredits_DeerForce:
    DEC.W CinematicFunctionTimer                                         ;8BE1D2;
    BEQ .decTimer                                                        ;8BE1D5;
    JMP.W .return                                                        ;8BE1D7;

  .decTimer:
    LDA.W #$007F                                                         ;8BE1DA;
    STA.W CinematicFunctionTimer                                         ;8BE1DD;
    LDA.W IGTHours                                                       ;8BE1E0;
    CMP.W #$0003                                                         ;8BE1E3;
    BMI .bestEnding                                                      ;8BE1E6;
    CMP.W #$000A                                                         ;8BE1E8;
    BMI .mediocreEnding                                                  ;8BE1EB;
    LDY.W #CinematicSpriteObjectDefs_SuitedSamus_Idle_Head_Helmet        ;8BE1ED;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE1F0;
    LDY.W #CinematicSpriteObjectDefinitions_SuitedSamus_Idle_Body        ;8BE1F3;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE1F6;
    LDA.W #CinematicFunction_PostCredits_IdleSamus1                      ;8BE1F9;
    STA.W CinematicFunction                                              ;8BE1FC;
    SEP #$20                                                             ;8BE1FF;
    LDA.B #$10                                                           ;8BE201;
    STA.B DP_MainScreenLayers                                            ;8BE203;
    STZ.B DP_SubScreenLayers                                             ;8BE205;
    STZ.B DP_ColorMathA                                                  ;8BE207;
    STZ.B DP_ColorMathB                                                  ;8BE209;
    REP #$20                                                             ;8BE20B;
    BRA .return                                                          ;8BE20D;

  .mediocreEnding:
    JSR.W PaletteCrossFading_CopyCurrentPalettesToFadingPalettes         ;8BE20F;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BE212;
    LDY.W #CinematicSpriteObjectDefinitions_SuitedSamus_Idle_Head        ;8BE215;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE218;
    LDY.W #CinematicSpriteObjectDefinitions_SuitedSamus_Idle_Body        ;8BE21B;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE21E;
    LDX.W #$01C0                                                         ;8BE221;
    LDY.W #$0010                                                         ;8BE224;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BE227;
    BRA .notWorstEnding                                                  ;8BE22A;

  .bestEnding:
    JSR.W PaletteCrossFading_CopyCurrentPalettesToFadingPalettes         ;8BE22C;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BE22F;
    LDY.W #CinematicSpriteObjectDefinitions_SuitlessSamus_Idle           ;8BE232;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE235;
    LDY.W #CinematicSpriteObjectDefinitions_SuitlessSamus_Idle_Legs      ;8BE238;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE23B;

  .notWorstEnding:
    LDX.W #$01A0                                                         ;8BE23E;
    LDY.W #$0010                                                         ;8BE241;
    JSR.W PaletteCrossFading_ClearYColorsStartingFromColorIndexX         ;8BE244;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE247;
    SEP #$20                                                             ;8BE24A;
    LDA.B #$02                                                           ;8BE24C;
    STA.B DP_MainScreenLayers                                            ;8BE24E;
    LDA.B #$10                                                           ;8BE250;
    STA.B DP_SubScreenLayers                                             ;8BE252;
    LDA.B #$02                                                           ;8BE254;
    STA.B DP_ColorMathA                                                  ;8BE256;
    LDA.B #$22                                                           ;8BE258;
    STA.B DP_ColorMathB                                                  ;8BE25A;
    REP #$20                                                             ;8BE25C;
    LDA.W #CinematicFunc_PostCredits_IdleSamus_1_CrossFadeOutSamusSuit   ;8BE25E;
    STA.W CinematicFunction                                              ;8BE261;

  .return:
    RTS                                                                  ;8BE264;


;;; $E265: Cinematic function - post-credits - idle Samus 1/2 - cross-fade out Samus suit ;;;
CinematicFunc_PostCredits_IdleSamus_1_CrossFadeOutSamusSuit:
    LDA.W CinematicFunctionTimer                                         ;8BE265;
    BIT.W #$0003                                                         ;8BE268;
    BNE CinematicFunction_PostCredits_IdleSamus1                         ;8BE26B;
    LDX.W #$0040                                                         ;8BE26D;
    LDY.W #$0010                                                         ;8BE270;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BE273;
    LDA.W IGTHours                                                       ;8BE276;
    CMP.W #$0003                                                         ;8BE279;
    BMI .lessThan3                                                       ;8BE27C;
    LDX.W #$01C0                                                         ;8BE27E;
    LDY.W #$0010                                                         ;8BE281;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BE284;

  .lessThan3:
    LDX.W #$01A0                                                         ;8BE287;
    LDY.W #$0010                                                         ;8BE28A;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BE28D;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE290; fallthrough to CinematicFunction_PostCredits_IdleSamus1


;;; $E293: Cinematic function - post-credits - idle Samus 1/2 ;;;
CinematicFunction_PostCredits_IdleSamus1:
    LDA.W CinematicFunctionTimer                                         ;8BE293;
    DEC                                                                  ;8BE296;
    STA.W CinematicFunctionTimer                                         ;8BE297;
    CMP.W #$0041                                                         ;8BE29A;
    BPL .return                                                          ;8BE29D;
    LDX.W #$023E                                                         ;8BE29F;
    LDA.W #regional($007F, $004F)                                        ;8BE2A2;

  .loopTilemap9:
    STA.L CreditsTilemap_DeeRForCe,X                                     ;8BE2A5;
    DEX                                                                  ;8BE2A9;
    DEX                                                                  ;8BE2AA;
    BPL .loopTilemap9                                                    ;8BE2AB;
    LDX.W #$0000                                                         ;8BE2AD;

  .loopTilemapC:
    LDA.L Tilemap_PostCredits_1994Nintendo,X                             ;8BE2B0;
    STA.L CinematicBGTilemap_RowsCD,X                                    ;8BE2B4;
    INX                                                                  ;8BE2B8;
    INX                                                                  ;8BE2B9;
    CPX.W #$0080                                                         ;8BE2BA;
    BMI .loopTilemapC                                                    ;8BE2BD;
    JSR.W CinematicBGObjects_Update32x32CinematicBGTilemap               ;8BE2BF;
    SEP #$20                                                             ;8BE2C2;
    LDA.B #$01                                                           ;8BE2C4;
    STA.B DP_MainScreenLayers                                            ;8BE2C6;
    STZ.B DP_SubScreenLayers                                             ;8BE2C8;
    STZ.B DP_ColorMathA                                                  ;8BE2CA;
    STZ.B DP_ColorMathB                                                  ;8BE2CC;
    REP #$20                                                             ;8BE2CE;
    LDA.W #regional($00B4, $0084)                                        ;8BE2D0;
    STA.W IntroCrossFadeTimer                                            ;8BE2D3;
    LDA.W #CinematicFunction_PostCredits_1994Nintendo                    ;8BE2D6;
    STA.W CinematicFunction                                              ;8BE2D9;

  .return:
    RTS                                                                  ;8BE2DC;


;;; $E2DD: Cinematic function - post-credits - 1994 Nintendo ;;;
CinematicFunction_PostCredits_1994Nintendo:
    DEC.W PostCreditsSamusBeamVRAMTransferIndex                          ;8BE2DD;
    BEQ .timerExpired                                                    ;8BE2E0;
    BPL .return                                                          ;8BE2E2;

  .timerExpired:
    LDA.W IGTHours                                                       ;8BE2E4;
    CMP.W #$0003                                                         ;8BE2E7;
    BMI .gameTimeOver10                                                  ;8BE2EA;
    CMP.W #$000A                                                         ;8BE2EC;
    BMI .gameTimeOver10                                                  ;8BE2EF;
    LDA.W #CinematicFunction_PostCredits_IdleSamus2                      ;8BE2F1;
    STA.W CinematicFunction                                              ;8BE2F4;
    BRA .return                                                          ;8BE2F7;

  .gameTimeOver10:
    SEP #$20                                                             ;8BE2F9;
    LDA.B #$02                                                           ;8BE2FB;
    STA.B DP_MainScreenLayers                                            ;8BE2FD;
    LDA.B #$10                                                           ;8BE2FF;
    STA.B DP_SubScreenLayers                                             ;8BE301;
    LDA.B #$02                                                           ;8BE303;
    STA.B DP_ColorMathA                                                  ;8BE305;
    LDA.B #$22                                                           ;8BE307;
    STA.B DP_ColorMathB                                                  ;8BE309;
    REP #$20                                                             ;8BE30B;
    LDA.W #CinematicFunc_PostCredits_IdleSamus2_CrossFadeOutSamusSuit    ;8BE30D;
    STA.W CinematicFunction                                              ;8BE310;

  .return:
    RTS                                                                  ;8BE313;


;;; $E314: Cinematic function - post-credits - idle Samus 2/2 - cross-fade out Samus suit ;;;
CinematicFunc_PostCredits_IdleSamus2_CrossFadeOutSamusSuit:
    LDA.W CinematicFunctionTimer                                         ;8BE314;
    BIT.W #$0003                                                         ;8BE317;
    BNE CinematicFunction_PostCredits_IdleSamus2                         ;8BE31A;
    LDX.W #$0040                                                         ;8BE31C;
    LDY.W #$0010                                                         ;8BE31F;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BE322;
    LDA.W IGTHours                                                       ;8BE325;
    CMP.W #$0003                                                         ;8BE328;
    BMI .gameTimeUnder3                                                  ;8BE32B;
    LDX.W #$01C0                                                         ;8BE32D;
    LDY.W #$0010                                                         ;8BE330;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BE333;

  .gameTimeUnder3:
    LDX.W #$01A0                                                         ;8BE336;
    LDY.W #$0010                                                         ;8BE339;
    JSR.W PaletteCrossFading_FadeInYColorsStartingFromColorIndexX        ;8BE33C;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE33F; fallthrough to CinematicFunction_PostCredits_IdleSamus2


;;; $E342: Cinematic function - post-credits - idle Samus 2/2 ;;;
CinematicFunction_PostCredits_IdleSamus2:
    DEC.W CinematicFunctionTimer                                         ;8BE342;
    BPL .return                                                          ;8BE345;
    SEP #$20                                                             ;8BE347;
    LDA.B #$10                                                           ;8BE349;
    STA.B DP_MainScreenLayers                                            ;8BE34B;
    STZ.B DP_SubScreenLayers                                             ;8BE34D;
    STZ.B DP_ColorMathA                                                  ;8BE34F;
    STZ.B DP_ColorMathB                                                  ;8BE351;
    LDA.B #$07                                                           ;8BE353;
    STA.B DP_BGModeSize                                                  ;8BE355;
    LDA.B #$80                                                           ;8BE357;
    STA.B DP_Mode7Settings                                               ;8BE359;
    LDA.B #$00                                                           ;8BE35B;
    STA.B DP_BG1TilemapAddrSize                                          ;8BE35D;
    STZ.B DP_BGTilesAddr                                                 ;8BE35F;
    REP #$20                                                             ;8BE361;
    LDA.W #RTS_8BDB9D                                                    ;8BE363;
    STA.W CinematicFunction                                              ;8BE366;
    STZ.W PostCreditsSMIconVRAMTransferIndex                             ;8BE369;
    LDA.W IGTHours                                                       ;8BE36C;
    CMP.W #$0003                                                         ;8BE36F;
    BMI .bestEnding                                                      ;8BE372;
    CMP.W #$000A                                                         ;8BE374;
    BMI .mediocreEnding                                                  ;8BE377;
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Head_Helmet         ;8BE379;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE37C;
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Arm                 ;8BE37F;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE382;
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Body                ;8BE385;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE388;
    BRA .return                                                          ;8BE38B;

  .mediocreEnding:
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Head                ;8BE38D;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE390;
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Arm                 ;8BE393;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE396;
    LDY.W #CinematicSpriteObjectDefinitions_ThumbsUp_Body                ;8BE399;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE39C;
    BRA .return                                                          ;8BE39F;

  .bestEnding:
    LDY.W #CinematicSpriteObjectDefs_SuitlessSamus_LettingHairDown       ;8BE3A1;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE3A4;
    LDY.W #CinematicSpriteObjectDefs_SuitlessSamus_LettingHairDown_Legs  ;8BE3A7;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE3AA;

  .return:
    RTS                                                                  ;8BE3AD;


;;; $E3AE: Cinematic function - post-credits - Samus shoots screen ;;;
CinematicFunction_PostCredits_SamusShootsScreen:
    LDA.W PostCreditsSMIconVRAMTransferIndex                             ;8BE3AE;
    BEQ .timerExpired                                                    ;8BE3B1;
    DEC                                                                  ;8BE3B3;
    STA.W PostCreditsSMIconVRAMTransferIndex                             ;8BE3B4;
    LDX.W #$0180                                                         ;8BE3B7;
    LDY.W #$0010                                                         ;8BE3BA;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BE3BD;
    LDA.W CinematicFunctionTimer                                         ;8BE3C0;
    BEQ .timerExpired                                                    ;8BE3C3;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE3C5;

  .timerExpired:
    LDA.W CinematicFunctionTimer                                         ;8BE3C8;
    BEQ .transitionPalette                                               ;8BE3CB;
    DEC                                                                  ;8BE3CD;
    STA.W CinematicFunctionTimer                                         ;8BE3CE;
    BRA +                                                                ;8BE3D1;

  .transitionPalette:
    JSR.W TransitionSamusPaletteToBlack                                  ;8BE3D3;

+   LDA.W Mode7TransformationAngle                                       ;8BE3D6;
    SEC                                                                  ;8BE3D9;
    SBC.W #$0008                                                         ;8BE3DA;
    AND.W #$00FF                                                         ;8BE3DD;
    STA.W Mode7TransformationAngle                                       ;8BE3E0;
    LDA.W Mode7TransformationZoomLevel                                   ;8BE3E3;
    SEC                                                                  ;8BE3E6;
    SBC.W #$0040                                                         ;8BE3E7;
    STA.W Mode7TransformationZoomLevel                                   ;8BE3EA;
    CMP.W #$0018                                                         ;8BE3ED;
    BMI .zoomGreaterThan18                                               ;8BE3F0;
    RTS                                                                  ;8BE3F2;

  .zoomGreaterThan18:
    LDA.W #$0018                                                         ;8BE3F3;
    STA.W Mode7TransformationZoomLevel                                   ;8BE3F6;
    LDA.W #CinematicFunction_PostCredits_FadeToWhite                     ;8BE3F9;
    STA.W CinematicFunction                                              ;8BE3FC;
    LDA.W #regional($00B4, $0084)                                        ;8BE3FF;
    STA.W CinematicFunctionTimer                                         ;8BE402;
    STZ.W PostCreditsSMIconVRAMTransferIndex                             ;8BE405;
    RTS                                                                  ;8BE408;


;;; $E409: Transition Samus palette to black ;;;
TransitionSamusPaletteToBlack:
    LDA.W PostCreditsSamusFadeTimer                                      ;8BE409;
    BEQ .return                                                          ;8BE40C;
    DEC                                                                  ;8BE40E;
    STA.W PostCreditsSamusFadeTimer                                      ;8BE40F;
    LDX.W #$01E0                                                         ;8BE412;
    LDY.W #$0010                                                         ;8BE415;
    JSR.W PaletteCrossFading_FadeOutYColorsStartingFromColorIndexX       ;8BE418;
    JSR.W PaletteCrossFading_ComposeFadingPalettes                       ;8BE41B;

  .return:
    RTS                                                                  ;8BE41E;


;;; $E41F: Transfer post-credits Super Metroid icon to VRAM ;;;
TransferPostCreditsSuperMetroidIconToVRAM:
    LDA.W PostCreditsSamusFadeTimer                                      ;8BE41F;
    BNE .return                                                          ;8BE422;
    LDA.W PostCreditsSMIconVRAMTransferIndex                             ;8BE424;
    CMP.W #$0006                                                         ;8BE427;
    BMI .loading                                                         ;8BE42A;

  .return:
    RTS                                                                  ;8BE42C;

  .loading:
    ASL                                                                  ;8BE42D;
    ASL                                                                  ;8BE42E;
    ASL                                                                  ;8BE42F;
    TAY                                                                  ;8BE430;
    LDX.W VRAMWriteStack                                                 ;8BE431;
    LDA.W .size,Y                                                        ;8BE434;
    STA.B VRAMWrite.size,X                                               ;8BE437;
    INX                                                                  ;8BE439;
    INX                                                                  ;8BE43A;
    LDA.W .source,Y                                                      ;8BE43B;
    STA.B VRAMWrite.size,X                                               ;8BE43E;
    INX                                                                  ;8BE440;
    INX                                                                  ;8BE441;
    SEP #$20                                                             ;8BE442;
    LDA.W .source+2,Y                                                    ;8BE444;
    STA.B VRAMWrite.size,X                                               ;8BE447;
    REP #$20                                                             ;8BE449;
    INX                                                                  ;8BE44B;
    LDA.W .destination,Y                                                 ;8BE44C;
    STA.B VRAMWrite.size,X                                               ;8BE44F;
    INX                                                                  ;8BE451;
    INX                                                                  ;8BE452;
    STX.W VRAMWriteStack                                                 ;8BE453;
    INC.W PostCreditsSMIconVRAMTransferIndex                             ;8BE456;
    RTS                                                                  ;8BE459;

  .size:
if !PAL == 0
    dw $0400                                                             ;8BE45A; Item percentage Japanese text
else
    dw $0800
endif
  .source:
    dl ItemPercentageSubtitle                                            ;8BE45C;
    db $00                                                               ;8BE45F;
  .destination:
    dw $4800                                                             ;8BE460;

    dw $0800                                                             ;8BE462; Super Metroid icon tiles
    dl PostCreditsSuperMetroidIcon_Tiles                                 ;8BE464;
    db $00                                                               ;8BE467;
    dw $6000                                                             ;8BE468;

    dw $0800                                                             ;8BE46A;
    dl PostCreditsSuperMetroidIcon_Tiles+$800                            ;8BE46C;
    db $00                                                               ;8BE46F;
    dw $6400                                                             ;8BE470;

    dw $0800                                                             ;8BE472;
    dl PostCreditsSuperMetroidIcon_Tiles+$1000                           ;8BE474;
    db $00                                                               ;8BE477;
    dw $6800                                                             ;8BE478;

    dw $0800                                                             ;8BE47A;
    dl PostCreditsSuperMetroidIcon_Tiles+$1800                           ;8BE47C;
    db $00                                                               ;8BE47F;
    dw $6C00                                                             ;8BE480;

    dw $0800                                                             ;8BE482; Super Metroid icon tilemap
    dl PostCreditsSuperMetroidIcon_Tilemap                               ;8BE484;
    db $00                                                               ;8BE487;
    dw $5400                                                             ;8BE488;


;;; $E48A: Cinematic function - post-credits - fade to white ;;;
CinematicFunction_PostCredits_FadeToWhite:
    JSR.W TransitionSamusPaletteToBlack                                  ;8BE48A;
    JSR.W TransferPostCreditsSuperMetroidIconToVRAM                      ;8BE48D;
    DEC.W CinematicFunctionTimer                                         ;8BE490;
    BEQ .timerExpired                                                    ;8BE493;
    RTS                                                                  ;8BE495;

  .timerExpired:
    SEP #$20                                                             ;8BE496;
    LDA.B #$01                                                           ;8BE498;
    STA.B DP_BGModeSize                                                  ;8BE49A;
    LDA.B #$11                                                           ;8BE49C;
    STA.B DP_MainScreenLayers                                            ;8BE49E;
    STZ.B DP_SubScreenLayers                                             ;8BE4A0;
    STZ.B DP_ColorMathA                                                  ;8BE4A2;
    LDA.B #$31                                                           ;8BE4A4;
    STA.B DP_ColorMathB                                                  ;8BE4A6;
    LDA.B #$3F                                                           ;8BE4A8;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BE4AA;
    LDA.B #$5F                                                           ;8BE4AC;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BE4AE;
    LDA.B #$9F                                                           ;8BE4B0;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BE4B2;
    STZ.B DP_Mode7Settings                                               ;8BE4B4;
    LDA.B #$4E                                                           ;8BE4B6;
    STA.B DP_BG1TilemapAddrSize                                          ;8BE4B8;
    LDA.B #$54                                                           ;8BE4BA;
    STA.B DP_BGTilesAddr                                                 ;8BE4BC;
    REP #$20                                                             ;8BE4BE;
    LDX.W #$0180                                                         ;8BE4C0;

  .loopPalettes:
    LDA.L Palettes_PostCredits,X                                         ;8BE4C3;
    STA.L Palettes,X                                                     ;8BE4C7;
    INX                                                                  ;8BE4CB;
    INX                                                                  ;8BE4CC;
    CPX.W #$01A0                                                         ;8BE4CD;
    BMI .loopPalettes                                                    ;8BE4D0;
    STZ.W CinematicBG1_XPosition                                         ;8BE4D2;
    STZ.W CinematicBG1_YPosition                                         ;8BE4D5;
    LDA.W #CinematicFunction_PostCredits_FadeFromWhite                   ;8BE4D8;
    STA.W CinematicFunction                                              ;8BE4DB;
    LDA.W #$0020                                                         ;8BE4DE;
    STA.W CinematicFunctionTimer                                         ;8BE4E1;
    JSL.L Enable_CinematicBGObjects                                      ;8BE4E4;
    JSL.L Enable_CinematicBGTilemap_Updates                              ;8BE4E8;
    LDA.W #$4C00                                                         ;8BE4EC;
    STA.W CinematicBGObject_VRAMAddr                                     ;8BE4EF;
    LDX.W #$007E                                                         ;8BE4F2;
    LDA.W #regional($007F, $004F)                                        ;8BE4F5;

  .loopTilemap:
    STA.L CinematicBGTilemap_RowsCD,X                                    ;8BE4F8;
    DEX                                                                  ;8BE4FC;
    DEX                                                                  ;8BE4FD;
    BPL .loopTilemap                                                     ;8BE4FE;
    JSR.W CinematicBGObjects_Update32x32CinematicBGTilemap               ;8BE500;
    RTS                                                                  ;8BE503;


;;; $E504: Cinematic function - post-credits - fade from white ;;;
CinematicFunction_PostCredits_FadeFromWhite:
    SEP #$20                                                             ;8BE504;
    LDA.B DP_ColorMathSubScreenBackdropColor0                            ;8BE506;
    SEC                                                                  ;8BE508;
    SBC.B #$01                                                           ;8BE509;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BE50B;
    CMP.B #$20                                                           ;8BE50D;
    BPL +                                                                ;8BE50F;
    LDA.B #$20                                                           ;8BE511;
    STA.B DP_ColorMathSubScreenBackdropColor0                            ;8BE513;

+   LDA.B DP_ColorMathSubScreenBackdropColor1                            ;8BE515;
    SEC                                                                  ;8BE517;
    SBC.B #$01                                                           ;8BE518;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BE51A;
    CMP.B #$40                                                           ;8BE51C;
    BPL +                                                                ;8BE51E;
    LDA.B #$40                                                           ;8BE520;
    STA.B DP_ColorMathSubScreenBackdropColor1                            ;8BE522;

+   LDA.B DP_ColorMathSubScreenBackdropColor2                            ;8BE524;
    SEC                                                                  ;8BE526;
    SBC.B #$01                                                           ;8BE527;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BE529;
    CMP.B #$80                                                           ;8BE52B;
    BPL +                                                                ;8BE52D;
    LDA.B #$80                                                           ;8BE52F;
    STA.B DP_ColorMathSubScreenBackdropColor2                            ;8BE531;

+   REP #$20                                                             ;8BE533;
    DEC.W CinematicFunctionTimer                                         ;8BE535;
    BEQ .timerExpired                                                    ;8BE538;
    BPL .return                                                          ;8BE53A;

  .timerExpired:
    LDA.W #RTS_8BE7BA                                                    ;8BE53C;
    STA.W CinematicFunction                                              ;8BE53F;
    LDA.W #$5000                                                         ;8BE542;
    STA.W CinematicBGObject_VRAMAddr                                     ;8BE545;
    JSR.W CinematicBGObjects_Update32x32CinematicBGTilemap               ;8BE548;
    LDA.W #$0100                                                         ;8BE54B;
    STA.W Layer1XPosition                                                ;8BE54E;
    STA.W Layer1YPosition                                                ;8BE551;
    LDY.W #CinematicSpriteObjectDefinitions_SuperMetroidIcon_S_TopHalf   ;8BE554;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE557;
    LDY.W #CinematicSpriteObjectDefs_SuperMetroidIcon_S_BottomHalf       ;8BE55A;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE55D;
    LDY.W #CinematicSpriteObjectDefs_SuperMetroidIcon_Circle_TopHalf     ;8BE560;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE563;
    LDY.W #CinematicSpriteObjectDefs_SuperMetroidIcon_Circle_BottomHalf  ;8BE566;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BE569;
    LDX.W #$001E                                                         ;8BE56C;
    LDA.W #$0000                                                         ;8BE56F;

  .loopBGPalette:
    STA.L Palettes_BG3P4,X                                               ;8BE572;
    DEX                                                                  ;8BE576;
    DEX                                                                  ;8BE577;
    BPL .loopBGPalette                                                   ;8BE578;
    LDX.W #$001E                                                         ;8BE57A;

  .loopSpirtePalette:
    LDA.L Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_0,X         ;8BE57D;
    STA.L Palettes_SpriteP7,X                                            ;8BE581;
    DEX                                                                  ;8BE585;
    DEX                                                                  ;8BE586;
    BPL .loopSpirtePalette                                               ;8BE587;

  .return:
    RTS                                                                  ;8BE589;


;;; $E58A: Cinematic function - post-credits - grey out Super Metroid icon ;;;
CinematicFunction_PostCredits_GreyOutSuperMetroidIcon:
; Handles palette transition to greyscale of Super Metroid icon
; Fades the SM icon sprite from full colour to black whilst fading the SM icon background from black to grey
; When the transition is done, the sprite no longer needs to be drawn
    PHX                                                                  ;8BE58A;
    PHY                                                                  ;8BE58B;
    PHB                                                                  ;8BE58C;
    LDA.W CinematicFunctionTimer                                         ;8BE58D;
    ASL                                                                  ;8BE590;
    ASL                                                                  ;8BE591;
    TAX                                                                  ;8BE592;
    LDA.W .spritePalette,X                                               ;8BE593;
    PHA                                                                  ;8BE596;
    LDA.W .BGPalette,X                                                   ;8BE597;
    TAY                                                                  ;8BE59A;
    PEA.W Palettes_EndingSuperMetroidIconFadingToGrey_BG_0>>8&$FF00      ;8BE59B;
    PLB                                                                  ;8BE59E;
    PLB                                                                  ;8BE59F;
    LDX.W #$001E                                                         ;8BE5A0;

  .loopBGPalette:
    LDA.W $0000,Y                                                        ;8BE5A3;
    STA.L Palettes_BG3P4,X                                               ;8BE5A6;
    DEY                                                                  ;8BE5AA;
    DEY                                                                  ;8BE5AB;
    DEX                                                                  ;8BE5AC;
    DEX                                                                  ;8BE5AD;
    BPL .loopBGPalette                                                   ;8BE5AE;
    PLY                                                                  ;8BE5B0;
    LDX.W #$001E                                                         ;8BE5B1;

  .loopSpritePalette:
    LDA.W $0000,Y                                                        ;8BE5B4;
    STA.L Palettes_SpriteP7,X                                            ;8BE5B7;
    DEY                                                                  ;8BE5BB;
    DEY                                                                  ;8BE5BC;
    DEX                                                                  ;8BE5BD;
    DEX                                                                  ;8BE5BE;
    BPL .loopSpritePalette                                               ;8BE5BF;
    LDA.W CinematicFunctionTimer                                         ;8BE5C1;
    INC                                                                  ;8BE5C4;
    STA.W CinematicFunctionTimer                                         ;8BE5C5;
    CMP.W #$0010                                                         ;8BE5C8;
    BMI .return                                                          ;8BE5CB;
    LDA.W #RTS_8BE7BA                                                    ;8BE5CD;
    STA.W CinematicFunction                                              ;8BE5D0;
    JSR.W Clear_CinematicSpriteObjects                                   ;8BE5D3;
    PLB                                                                  ;8BE5D6;
    LDY.W #CinematicBGObjectDefinitions_PostCredits_ItemPercentage       ;8BE5D7;
    LDA.W #$4C00                                                         ;8BE5DA;
    JSR.W Spawn_CinematicBGObject                                        ;8BE5DD;
    PLY                                                                  ;8BE5E0;
    PLX                                                                  ;8BE5E1;
    RTS                                                                  ;8BE5E2;

  .return:
    PLB                                                                  ;8BE5E3;
    PLY                                                                  ;8BE5E4;
    PLX                                                                  ;8BE5E5;
    RTS                                                                  ;8BE5E6;

; Pointers to (the last colour of) increasingly grey palettes
  .BGPalette:
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_10                 ;8BE5E7; These pointers read the list backwards :(
  .spritePalette:
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_1              ;8BE5E9;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_F                  ;8BE5EB;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_2              ;8BE5ED;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_E                  ;8BE5EF;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_3              ;8BE5F1;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_D                  ;8BE5F3;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_4              ;8BE5F5;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_C                  ;8BE5F7;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_5              ;8BE5F9;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_B                  ;8BE5FB;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_6              ;8BE5FD;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_A                  ;8BE5FF;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_7              ;8BE601;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_9                  ;8BE603;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_8              ;8BE605;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_8                  ;8BE607;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_9              ;8BE609;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_7                  ;8BE60B;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_A              ;8BE60D;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_6                  ;8BE60F;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_B              ;8BE611;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_5                  ;8BE613;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_C              ;8BE615;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_4                  ;8BE617;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_D              ;8BE619;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_3                  ;8BE61B;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_E              ;8BE61D;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_2                  ;8BE61F;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_F              ;8BE621;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_BG_1                  ;8BE623;
    dw Palettes_EndingSuperMetroidIconFadingToGrey_Sprite_10             ;8BE625;


;;; $E627: Instruction - draw item percentage count ;;;
Instruction_DrawItemPercentageCount:
    PHP                                                                  ;8BE627;
    PHB                                                                  ;8BE628;
    PHK                                                                  ;8BE629;
    PLB                                                                  ;8BE62A;
    REP #$30                                                             ;8BE62B;
    PHX                                                                  ;8BE62D;
    PHY                                                                  ;8BE62E;
    LDX.W #$0008                                                         ;8BE62F;
    STZ.B DP_Temp12                                                      ;8BE632;

  .loopTanks:
    LDA.W .tankValuesEnergy,X                                            ;8BE634;
    TAY                                                                  ;8BE637;
    LDA.W $0000,Y                                                        ;8BE638;
    STA.W $4204                                                          ;8BE63B;
    SEP #$20                                                             ;8BE63E;
    LDA.W .tankValuesEnergyDivisor,X                                     ;8BE640;
    STA.W $4206                                                          ;8BE643;
    NOP                                                                  ;8BE646;
    NOP                                                                  ;8BE647;
    NOP                                                                  ;8BE648;
    NOP                                                                  ;8BE649;
    NOP                                                                  ;8BE64A;
    NOP                                                                  ;8BE64B;
    NOP                                                                  ;8BE64C;
    REP #$20                                                             ;8BE64D;
    LDA.W $4214                                                          ;8BE64F;
    CLC                                                                  ;8BE652;
    ADC.B DP_Temp12                                                      ;8BE653;
    STA.B DP_Temp12                                                      ;8BE655;
    DEX                                                                  ;8BE657;
    DEX                                                                  ;8BE658;
    BPL .loopTanks                                                       ;8BE659;
    LDX.W #$0014                                                         ;8BE65B;

  .loopItems:
    LDA.W CollectedItems                                                 ;8BE65E;
    BIT.W .itemBits,X                                                    ;8BE661;
    BEQ .nextItem                                                        ;8BE664;
    INC.B DP_Temp12                                                      ;8BE666;

  .nextItem:
    DEX                                                                  ;8BE668;
    DEX                                                                  ;8BE669;
    BPL .loopItems                                                       ;8BE66A;
    LDX.W #$0008                                                         ;8BE66C;

  .loopBeams:
    LDA.W CollectedBeams                                                 ;8BE66F;
    BIT.W .beamBits,X                                                    ;8BE672;
    BEQ .nextBeam                                                        ;8BE675;
    INC.B DP_Temp12                                                      ;8BE677;

  .nextBeam:
    DEX                                                                  ;8BE679;
    DEX                                                                  ;8BE67A;
    BPL .loopBeams                                                       ;8BE67B;
    LDA.B DP_Temp12                                                      ;8BE67D;
    STA.W $4204                                                          ;8BE67F;
    SEP #$20                                                             ;8BE682;
    LDA.B #$0A                                                           ;8BE684;
    STA.W $4206                                                          ;8BE686;
    NOP                                                                  ;8BE689;
    NOP                                                                  ;8BE68A;
    NOP                                                                  ;8BE68B;
    NOP                                                                  ;8BE68C;
    NOP                                                                  ;8BE68D;
    NOP                                                                  ;8BE68E;
    NOP                                                                  ;8BE68F;
    REP #$20                                                             ;8BE690;
    LDA.W $4214                                                          ;8BE692;
    STA.W $4204                                                          ;8BE695;
    LDA.W $4216                                                          ;8BE698;
    STA.B DP_Temp16                                                      ;8BE69B;
    SEP #$20                                                             ;8BE69D;
    LDA.B #$0A                                                           ;8BE69F;
    STA.W $4206                                                          ;8BE6A1;
    NOP                                                                  ;8BE6A4;
    NOP                                                                  ;8BE6A5;
    NOP                                                                  ;8BE6A6;
    NOP                                                                  ;8BE6A7;
    NOP                                                                  ;8BE6A8;
    NOP                                                                  ;8BE6A9;
    NOP                                                                  ;8BE6AA;
    REP #$20                                                             ;8BE6AB;
    LDA.W $4214                                                          ;8BE6AD;
    STA.B DP_Temp12                                                      ;8BE6B0;
    LDA.W $4216                                                          ;8BE6B2;
    STA.B DP_Temp14                                                      ;8BE6B5;
    LDA.B DP_Temp12                                                      ;8BE6B7;
    BEQ +                                                                ;8BE6B9;
    ASL                                                                  ;8BE6BB;
    ASL                                                                  ;8BE6BC;
    TAY                                                                  ;8BE6BD;
    LDA.W TilemapValuesForDecimalDigits_topHalf,Y                        ;8BE6BE;
    STA.L $7E339C                                                        ;8BE6C1;
    LDA.W TilemapValuesForDecimalDigits_bottomHalf,Y                     ;8BE6C5;
    STA.L $7E33DC                                                        ;8BE6C8;

+   LDA.B DP_Temp14                                                      ;8BE6CC;
    BNE +                                                                ;8BE6CE;
    LDA.B DP_Temp12                                                      ;8BE6D0;
    BEQ .unitsOnly                                                       ;8BE6D2;
    LDA.B DP_Temp14                                                      ;8BE6D4;

+   ASL                                                                  ;8BE6D6;
    ASL                                                                  ;8BE6D7;
    TAY                                                                  ;8BE6D8;
    LDA.W TilemapValuesForDecimalDigits_topHalf,Y                        ;8BE6D9;
    STA.L $7E339E                                                        ;8BE6DC;
    LDA.W TilemapValuesForDecimalDigits_bottomHalf,Y                     ;8BE6E0;
    STA.L $7E33DE                                                        ;8BE6E3;

  .unitsOnly:
    LDA.B DP_Temp16                                                      ;8BE6E7;
    ASL                                                                  ;8BE6E9;
    ASL                                                                  ;8BE6EA;
    TAY                                                                  ;8BE6EB;
    LDA.W TilemapValuesForDecimalDigits_topHalf,Y                        ;8BE6EC;
    STA.L $7E33A0                                                        ;8BE6EF;
    LDA.W TilemapValuesForDecimalDigits_bottomHalf,Y                     ;8BE6F3;
    STA.L $7E33E0                                                        ;8BE6F6;
    LDA.W #$386A                                                         ;8BE6FA;
    STA.L $7E33A2                                                        ;8BE6FD;
    LDA.W #$387A                                                         ;8BE701;
    STA.L $7E33E2                                                        ;8BE704;
    PLY                                                                  ;8BE708;
    PLX                                                                  ;8BE709;
    PLB                                                                  ;8BE70A;
    PLP                                                                  ;8BE70B;
    RTS                                                                  ;8BE70C;

; RAM addresses to measure
  .tankValuesEnergy:
    dw MaxEnergy                                                         ;8BE70D;
  .tankValuesReserve:
    dw MaxReserveEnergy                                                  ;8BE70F;
  .tankValuesMissiles:
    dw MaxMissiles                                                       ;8BE711;
  .tankValuesSuperMissiles:
    dw MaxSuperMissiles                                                  ;8BE713;
  .tankValuesPowerBombs:
    dw MaxPowerBombs                                                     ;8BE715;

; Divisors
  .tankValuesEnergyDivisor:
    dw $0064                                                             ;8BE717;
  .tankValuesReserveDivisor:
    dw $0064                                                             ;8BE719;
  .tankValuesMissilesDivisor:
    dw $0005                                                             ;8BE71B;
  .tankValuesSuperMissilesDivisor:
    dw $0005                                                             ;8BE71D;
  .tankValuesPowerBombsDivisor:
    dw $0005                                                             ;8BE71F;

  .itemBits:
    dw $0001,$0020,$0004,$1000,$0002,$0008,$0100,$0200                   ;8BE721;
    dw $2000,$4000,$8000                                                 ;8BE731;

  .beamBits:
    dw $0001,$0002,$0004,$0008,$1000                                     ;8BE737;


TilemapValuesForDecimalDigits:
  .topHalf:
    dw $3860                                                             ;8BE741;
  .bottomHalf:                                                           ;8BE743;
    dw       $3870 ; 0
    dw $3861,$3871 ; 1
    dw $3862,$3872 ; 2
    dw $3863,$3873 ; 3
    dw $3864,$3874 ; 4
    dw $3865,$3875 ; 5
    dw $3866,$3876 ; 6
    dw $3867,$3877 ; 7
    dw $3868,$3878 ; 8
    dw $3869,$3879 ; 9


;;; $E769: Instruction - draw item percentage Japanese text ;;;
Instruction_DrawItemPercentageSubtitle:
    PHX                                                                  ;8BE769;
    LDA.W AltText                                                        ;8BE76A;
    BEQ .defaultLanguage                                                 ;8BE76D;
    LDX.W #$007E                                                         ;8BE76F;

  .loop:
    LDA.L Tilemap_PostCredits_ItemPercentageSubtitle_AltLanguage,X       ;8BE772;
    STA.L CinematicBGTilemap_Rows17_18,X                                 ;8BE776;
    DEX                                                                  ;8BE77A;
    DEX                                                                  ;8BE77B;
    BPL .loop                                                            ;8BE77C;

if !PAL == 0
  .defaultLanguage:
endif
    PLX                                                                  ;8BE77E;
    RTS                                                                  ;8BE77F;

if !PAL != 0
  .defaultLanguage:
    LDX.W #$00FE

  ..loop
    LDA.L Tilemap_PostCredits_ItemPercentageSubtitle_DefaultLanguage,X
    STA.L CinematicBGTilemap_Rows17_18,X
    DEX
    DEX
    BPL ..loop
    PLX
    RTS
endif


;;; $E780: Instruction - clear item percentage Japanese text ;;;
Instruction_ClearItemPercentageSubtitle:
    PHX                                                                  ;8BE780;
if !PAL == 0
    LDX.W #$007E                                                         ;8BE781;
    LDA.W #$007F                                                         ;8BE784;
else
    LDX.W #$00FE
    LDA.W #$004F
endif

  .loop:
    STA.L CinematicBGTilemap_Rows17_18,X                                 ;8BE787;
    DEX                                                                  ;8BE78B;
    DEX                                                                  ;8BE78C;
    BPL .loop                                                            ;8BE78D;
    LDA.W #CinematicFunction_PostCredits_ScrollItemPercentageDown        ;8BE78F;
    STA.W CinematicFunction                                              ;8BE792;
    PLX                                                                  ;8BE795;
    RTS                                                                  ;8BE796;


;;; $E797: Cinematic function - post-credits - scroll item percentage down ;;;
CinematicFunction_PostCredits_ScrollItemPercentageDown:
; This is the end. Once the cinematic function is set to RTS, the game logic never progresses any further
    LDA.W CinematicBG1_YPosition                                         ;8BE797;
    SEC                                                                  ;8BE79A;
    SBC.W #$0002                                                         ;8BE79B;
    STA.W CinematicBG1_YPosition                                         ;8BE79E;
    CMP.W #$FFB1                                                         ;8BE7A1;
    BPL .return                                                          ;8BE7A4;
    LDY.W #CinematicBGObjectDefinitions_PostCredits_SeeYouNextMission    ;8BE7A6;
    LDA.W #$4C00                                                         ;8BE7A9;
    JSR.W Spawn_CinematicBGObject                                        ;8BE7AC;
    LDA.W #RTS_8BE7BA                                                    ;8BE7AF;
    STA.W CinematicFunction                                              ;8BE7B2;
    JSL.L Write_supermetroid_ToSRAM                                      ;8BE7B5;

  .return:
    RTS                                                                  ;8BE7B9;


;;; $E7BA: RTS ;;;
RTS_8BE7BA:
    RTS                                                                  ;8BE7BA;


;;; $E7BB: Initialise shooting stars ;;;
Initialize_ShootingStars:
    PHP                                                                  ;8BE7BB;
    REP #$30                                                             ;8BE7BC;
    LDY.W #ShootingStars_StarIndex                                       ;8BE7BE;
    LDX.W #$0000                                                         ;8BE7C1;
    STX.B DP_Temp12                                                      ;8BE7C4;

  .loop:
    PHX                                                                  ;8BE7C6;
    TXA                                                                  ;8BE7C7;
    STA.W $0000,Y                                                        ;8BE7C8;
    ASL                                                                  ;8BE7CB;
    ASL                                                                  ;8BE7CC;
    ASL                                                                  ;8BE7CD;
    TAX                                                                  ;8BE7CE;
    LDA.W #$0000                                                         ;8BE7CF;
    STA.W $000C,Y                                                        ;8BE7D2;
    STA.W $000E,Y                                                        ;8BE7D5;
    LDA.W ShootingStar_Table_delay,X                                     ;8BE7D8;
    BEQ .zero                                                            ;8BE7DB;
    STA.W $000A,Y                                                        ;8BE7DD;
    LDA.W $0000,Y                                                        ;8BE7E0;
    ORA.W #$8000                                                         ;8BE7E3;
    STA.W $0000,Y                                                        ;8BE7E6;
    BRA +                                                                ;8BE7E9;

  .zero:
    LDA.W #$0020                                                         ;8BE7EB;
    STA.W $000A,Y                                                        ;8BE7EE;

+   PLX                                                                  ;8BE7F1;
    LDA.W #$0080                                                         ;8BE7F2;
    STA.W $0002,Y                                                        ;8BE7F5;
    STA.W $0006,Y                                                        ;8BE7F8;
    LDA.W #$0000                                                         ;8BE7FB;
    STA.W $0004,Y                                                        ;8BE7FE;
    STA.W $0008,Y                                                        ;8BE801;
    TYA                                                                  ;8BE804;
    CLC                                                                  ;8BE805;
    ADC.W #$0010                                                         ;8BE806;
    TAY                                                                  ;8BE809;
    INX                                                                  ;8BE80A;
    CPX.W #$0028                                                         ;8BE80B;
    BMI .loop                                                            ;8BE80E;
    PLP                                                                  ;8BE810;
    RTS                                                                  ;8BE811;


;;; $E812: Handle shooting stars ;;;
Handle_ShootingStars:
    PHP                                                                  ;8BE812;
    REP #$30                                                             ;8BE813;
    LDA.W CreditsObject_ShootingStarsEnable                              ;8BE815;
    BNE .loopSetup                                                       ;8BE818;
    PLP                                                                  ;8BE81A;
    RTS                                                                  ;8BE81B;

  .loopSetup:
    LDA.W #$0028                                                         ;8BE81C;
    STA.B DP_Temp16                                                      ;8BE81F;
    LDY.W #ShootingStars_StarIndex                                       ;8BE821;
    BRA .loopProcess                                                     ;8BE824;

  .delay:
    LDA.W $000A,Y                                                        ;8BE826;
    DEC                                                                  ;8BE829;
    STA.W $000A,Y                                                        ;8BE82A;
    BPL .gotoNextProcess                                                 ;8BE82D;
    LDA.W #$0020                                                         ;8BE82F;
    STA.W $000A,Y                                                        ;8BE832;
    LDA.W $0000,Y                                                        ;8BE835;
    AND.W #$00FF                                                         ;8BE838;
    STA.W $0000,Y                                                        ;8BE83B;

  .gotoNextProcess:
    JMP.W .nextProcess                                                   ;8BE83E;

  .loopProcess:
    LDA.W $0000,Y                                                        ;8BE841;
    BMI .delay                                                           ;8BE844;
    PHA                                                                  ;8BE846;
    AND.W #$FF00                                                         ;8BE847;
    CMP.W #$0400                                                         ;8BE84A;
    BMI .lessThan4                                                       ;8BE84D;
    PLA                                                                  ;8BE84F;
    AND.W #$00FF                                                         ;8BE850;
    ASL                                                                  ;8BE853;
    ASL                                                                  ;8BE854;
    ASL                                                                  ;8BE855;
    TAX                                                                  ;8BE856;
    LDA.W $000C,Y                                                        ;8BE857;
    CLC                                                                  ;8BE85A;
    ADC.W ShootingStar_Table_Xaccel,X                                    ;8BE85B;
    CLC                                                                  ;8BE85E;
    ADC.W ShootingStar_Table_Xaccel,X                                    ;8BE85F;
    STA.W $000C,Y                                                        ;8BE862;
    LDA.W $000E,Y                                                        ;8BE865;
    CLC                                                                  ;8BE868;
    ADC.W ShootingStar_Table_Yaccel,X                                    ;8BE869;
    CLC                                                                  ;8BE86C;
    ADC.W ShootingStar_Table_Yaccel,X                                    ;8BE86D;
    STA.W $000E,Y                                                        ;8BE870;
    BRA +                                                                ;8BE873;

  .lessThan4:
    PLA                                                                  ;8BE875;
    AND.W #$00FF                                                         ;8BE876;
    ASL                                                                  ;8BE879;
    ASL                                                                  ;8BE87A;
    ASL                                                                  ;8BE87B;
    TAX                                                                  ;8BE87C;
    LDA.W $000C,Y                                                        ;8BE87D;
    CLC                                                                  ;8BE880;
    ADC.W ShootingStar_Table_Xaccel,X                                    ;8BE881;
    STA.W $000C,Y                                                        ;8BE884;
    LDA.W $000E,Y                                                        ;8BE887;
    CLC                                                                  ;8BE88A;
    ADC.W ShootingStar_Table_Yaccel,X                                    ;8BE88B;
    STA.W $000E,Y                                                        ;8BE88E;

+   LDA.W $000C,Y                                                        ;8BE891;
    PHA                                                                  ;8BE894;
    XBA                                                                  ;8BE895;
    AND.W #$00FF                                                         ;8BE896;
    BIT.W #$0080                                                         ;8BE899;
    BEQ +                                                                ;8BE89C;
    ORA.W #$FF00                                                         ;8BE89E;

+   STA.B DP_Temp12                                                      ;8BE8A1;
    PLA                                                                  ;8BE8A3;
    XBA                                                                  ;8BE8A4;
    AND.W #$FF00                                                         ;8BE8A5;
    STA.B DP_Temp14                                                      ;8BE8A8;
    LDA.W $0004,Y                                                        ;8BE8AA;
    CLC                                                                  ;8BE8AD;
    ADC.B DP_Temp14                                                      ;8BE8AE;
    STA.W $0004,Y                                                        ;8BE8B0;
    LDA.W $0002,Y                                                        ;8BE8B3;
    ADC.B DP_Temp12                                                      ;8BE8B6;
    STA.W $0002,Y                                                        ;8BE8B8;
    LDA.W $000E,Y                                                        ;8BE8BB;
    PHA                                                                  ;8BE8BE;
    XBA                                                                  ;8BE8BF;
    AND.W #$00FF                                                         ;8BE8C0;
    BIT.W #$0080                                                         ;8BE8C3;
    BEQ +                                                                ;8BE8C6;
    ORA.W #$FF00                                                         ;8BE8C8;

+   STA.B DP_Temp12                                                      ;8BE8CB;
    PLA                                                                  ;8BE8CD;
    XBA                                                                  ;8BE8CE;
    AND.W #$FF00                                                         ;8BE8CF;
    STA.B DP_Temp14                                                      ;8BE8D2;
    LDA.W $0008,Y                                                        ;8BE8D4;
    CLC                                                                  ;8BE8D7;
    ADC.B DP_Temp14                                                      ;8BE8D8;
    STA.W $0008,Y                                                        ;8BE8DA;
    LDA.W $0006,Y                                                        ;8BE8DD;
    ADC.B DP_Temp12                                                      ;8BE8E0;
    STA.W $0006,Y                                                        ;8BE8E2;

  .nextProcess:
    TYA                                                                  ;8BE8E5;
    CLC                                                                  ;8BE8E6;
    ADC.W #$0010                                                         ;8BE8E7;
    TAY                                                                  ;8BE8EA;
    DEC.B DP_Temp16                                                      ;8BE8EB;
    BEQ .loopDrawSetup                                                   ;8BE8ED;
    JMP.W .loopProcess                                                   ;8BE8EF;

  .loopDrawSetup:
    LDA.W #$0028                                                         ;8BE8F2;
    STA.B DP_Temp16                                                      ;8BE8F5;
    LDX.W OAMStack                                                       ;8BE8F7;
    LDY.W #ShootingStars_StarIndex                                       ;8BE8FA;

  .loopDraw:
    LDA.W $0000,Y                                                        ;8BE8FD;
    BMI .nextDraw                                                        ;8BE900;
    LDA.W $0002,Y                                                        ;8BE902;
    BIT.W #$FF00                                                         ;8BE905;
    BNE .offScreen                                                       ;8BE908;
    SEC                                                                  ;8BE90A;
    SBC.W #$0004                                                         ;8BE90B;
    BIT.W #$FF00                                                         ;8BE90E;
    BNE .offScreen                                                       ;8BE911;
    STA.W OAMLow,X                                                       ;8BE913;
    LDA.W $0006,Y                                                        ;8BE916;
    BIT.W #$FF00                                                         ;8BE919;
    BNE .offScreen                                                       ;8BE91C;
    SEC                                                                  ;8BE91E;
    SBC.W #$0004                                                         ;8BE91F;
    BIT.W #$FF00                                                         ;8BE922;
    BNE .offScreen                                                       ;8BE925;
    STA.W OAMLow+1,X                                                     ;8BE927;
    LDA.W $000A,Y                                                        ;8BE92A;
    DEC                                                                  ;8BE92D;
    STA.W $000A,Y                                                        ;8BE92E;
    BEQ .timerExpired                                                    ;8BE931;
    BPL .nonZero                                                         ;8BE933;

  .timerExpired:
    PHX                                                                  ;8BE935;
    LDA.W $0000,Y                                                        ;8BE936;
    PHA                                                                  ;8BE939;
    AND.W #$00FF                                                         ;8BE93A;
    ASL                                                                  ;8BE93D;
    ASL                                                                  ;8BE93E;
    ASL                                                                  ;8BE93F;
    TAX                                                                  ;8BE940;
    LDA.W ShootingStar_Table_timer,X                                     ;8BE941;
    STA.W $000A,Y                                                        ;8BE944;
    PLA                                                                  ;8BE947;
    CLC                                                                  ;8BE948;
    ADC.W #$0200                                                         ;8BE949;
    STA.W $0000,Y                                                        ;8BE94C;
    PLX                                                                  ;8BE94F;

  .nonZero:
    LDA.W $0000,Y                                                        ;8BE950;
    BIT.W #$FF00                                                         ;8BE953;
    BEQ .nextDraw                                                        ;8BE956;
    PHY                                                                  ;8BE958;
    XBA                                                                  ;8BE959;
    AND.W #$00FF                                                         ;8BE95A;
    TAY                                                                  ;8BE95D;
    LDA.W .tilemapValues,Y                                               ;8BE95E;
    STA.W OAMLow+2,X                                                     ;8BE961;
    PLY                                                                  ;8BE964;
    TXA                                                                  ;8BE965;
    CLC                                                                  ;8BE966;
    ADC.W #$0004                                                         ;8BE967;
    TAX                                                                  ;8BE96A;

  .nextDraw:
    TYA                                                                  ;8BE96B;
    CLC                                                                  ;8BE96C;
    ADC.W #$0010                                                         ;8BE96D;
    TAY                                                                  ;8BE970;
    DEC.B DP_Temp16                                                      ;8BE971;
    BEQ .return                                                          ;8BE973;
    JMP.W .loopDraw                                                      ;8BE975;

  .return:
    STX.W OAMStack                                                       ;8BE978;
    PLP                                                                  ;8BE97B;
    RTS                                                                  ;8BE97C;

  .offScreen:
    LDA.W #$0020                                                         ;8BE97D;
    STA.W $000A,Y                                                        ;8BE980;
    LDA.W #$0080                                                         ;8BE983;
    STA.W $0002,Y                                                        ;8BE986;
    STA.W $0006,Y                                                        ;8BE989;
    LDA.W #$0000                                                         ;8BE98C;
    STA.W $0004,Y                                                        ;8BE98F;
    STA.W $0008,Y                                                        ;8BE992;
    STA.W $000C,Y                                                        ;8BE995;
    STA.W $000E,Y                                                        ;8BE998;
    LDA.W $0000,Y                                                        ;8BE99B;
    AND.W #$00FF                                                         ;8BE99E;
    STA.W $0000,Y                                                        ;8BE9A1;
    JMP.W .nextDraw                                                      ;8BE9A4;

  .tilemapValues:
; Tile number and attributes, indexed by animation frame
    dw $0000,$09F0,$09F1,$09F2,$09F3,$09F3,$09F3,$09F3                   ;8BE9A7;
    dw $09F3,$09F3,$09F3,$09F3,$09F3,$09F3,$09F3,$09F3                   ;8BE9B7;
    dw $09F3,$09F3,$09F3,$09F3                                           ;8BE9C7;


;;; $E9CF: Shooting star table ;;;
ShootingStar_Table:
; Indexed by star index
  .Xaccel:
    dw $0010                                                             ;8BE9CF; X acceleration. Unit 1/100h px/frame²
  .Yaccel:
    dw       $FFF0                                                       ;8BE9D1; Y acceleration. Unit 1/100h px/frame²
  .timer:
    dw             $0006                                                 ;8BE9D3; Animation timer reset value
  .delay:
    dw                   $0008                                           ;8BE9D5; Delay before appearing
    dw $000C,$FFFF,$0006,$0000
    dw $000D,$FFF6,$0006,$0006
    dw $0008,$FFF0,$0006,$0000
    dw $0002,$FFF2,$0006,$0008
    dw $0010,$FFF8,$0006,$0000
    dw $0002,$FFFF,$0F00,$0000
    dw $0001,$FFFE,$0F00,$0000
    dw $0000,$FFFD,$0F00,$0000
    dw $0002,$FFFB,$0020,$0004
    dw $000F,$0010,$0006,$0008
    dw $0002,$0009,$0008,$0000
    dw $000C,$0008,$0006,$0000
    dw $0010,$0004,$0006,$0008
    dw $0008,$000C,$0008,$0000
    dw $0002,$0008,$0008,$0000
    dw $0002,$0004,$0F00,$0000
    dw $0002,$0001,$0F00,$0000
    dw $FFF3,$000D,$0004,$0008
    dw $FFF2,$0008,$0004,$0000
    dw $FFF9,$000E,$0006,$0000
    dw $FFFB,$0010,$0004,$0008
    dw $FFFC,$0005,$0020,$0000
    dw $FFFE,$0003,$0F00,$0000
    dw $FFFE,$0004,$0F00,$0000
    dw $FFFD,$0001,$0F00,$0000
    dw $FFF4,$0002,$0004,$0000
    dw $FFFA,$0005,$0020,$0000
    dw $FFFD,$0008,$0020,$0000
    dw $FFF2,$FFF7,$0004,$0008
    dw $FFF8,$FFF4,$0004,$0000
    dw $FFFA,$FFF2,$0006,$0000
    dw $FFF4,$FFF0,$0004,$0008
    dw $FFF8,$FFFC,$0020,$0000
    dw $FFFD,$FFFA,$0020,$0000
    dw $FFF9,$FFF8,$0020,$0000
    dw $FFFE,$FFFD,$0F00,$0000
    dw $FFFC,$FFFC,$0F00,$0000
    dw $FFF8,$FFFE,$0F00,$0000
    dw $FFF8,$FFFC,$0F00,$0000


;;; $EB0F: Instruction list - cinematic sprite object $EE9D (exploding Zebes - Zebes) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Zebes_0:
    dw CinematicSpriteObject_Instruction_TimerInY,$0005                  ;8BEB0F;

InstList_CinematicSpriteObjects_ExplodingZebes_Zebes_1:
    dw regional($000D,$000B),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame1 ;8BEB13;
    dw regional($000D,$000B),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame2 ;8BEB17;
    dw regional($000D,$000B),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame3 ;8BEB1B;
    dw regional($000D,$000B),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame4 ;8BEB1F;
    dw CinematicSpriteObject_Inst_DecrementTimer_GotoYIfNonZero          ;8BEB23;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Zebes_1            ;8BEB25;
    dw Instruction_FadeOutZoomedOutExplodingZebes                        ;8BEB27;
    dw regional($0020, $001D),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame5 ;8BEB29;
    dw regional($0020, $001D),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame6 ;8BEB2D;
    dw regional($0020, $001D),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame7 ;8BEB31;
    dw regional($0020, $001D),EndingSequenceSpritemaps_ExplodingPlanetZebesFrame8 ;8BEB35;
    dw Instruction_CineSpriteObjectSpawnZebesExplosionSilhouette         ;8BEB39;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEB3B;


;;; $EB3D: Instruction list - cinematic sprite object $EEA3 (exploding Zebes - purple glow) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_PurpleGlow:
    dw $0010*!FPS,EndingSequenceSpritemaps_ExplodingPlanetZebesGlow      ;8BEB3D;
    dw $0010*!FPS,EndingSequenceSpritemaps_ZebesSupernovaPart1           ;8BEB41;
    dw $0010*!FPS,EndingSequenceSpritemaps_ZebesSupernovaPart2           ;8BEB45;
    dw $0010*!FPS,EndingSequenceSpritemaps_ZebesSupernovaPart1           ;8BEB49;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEB4D;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_PurpleGlow         ;8BEB4F;


;;; $EB51: Instruction list - cinematic sprite object $EEA9 (exploding Zebes - stars) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Stars:
    dw $0010,EndingSequenceSpritemaps_ZebesBoomStarryBackground          ;8BEB51;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEB55;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Stars              ;8BEB57;


;;; $EB59: Instruction list - cinematic sprite object $EEAF (exploding Zebes - lava) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Lava_0:
    dw $009C,$0000                                                       ;8BEB59;

InstList_CinematicSpriteObjects_ExplodingZebes_Lava_1:
    dw $000A*!FPS,EndingSequenceSpritemaps_ExplodingPlanetZebesCoreFrame1 ;8BEB5D;
    dw $000A*!FPS,EndingSequenceSpritemaps_ExplodingPlanetZebesCoreFrame2 ;8BEB61;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEB65;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Lava_1             ;8BEB67;


;;; $EB69: Instruction list - cinematic sprite object $EEB5 (Zebes explosion - silhouette) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Silhouette:
    dw $0008,EndingSequenceSpritemaps_ZebesSupernovaPart3                ;8BEB69;
    dw Instruction_CinematicSpriteObject_StartZebesExplosion             ;8BEB6D;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEB6F;


;;; $EB71: Instruction list - cinematic sprite object $EEBB (Zebes explosion - stars - right) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Stars_Right:
    dw $0090,EndingSequenceSpritemaps_ZebesBoomStarryBackground          ;8BEB71;
    dw Instruction_ZebesExplosionFinale                                  ;8BEB75;
    dw $014C,EndingSequenceSpritemaps_ZebesBoomStarryBackground          ;8BEB77;
    dw Instruction_EndZebesExplosion                                     ;8BEB7B;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BEB7D;
    dw Instruction_CinematicSpriteObject_ZebesExplosion_Stars_Left       ;8BEB7F;


;;; $EB81: Instruction list - cinematic sprite object $EEF7 (Zebes explosion - stars - left) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_Stars_Left:
    dw $0010,EndingSequenceSpritemaps_ZebesBoomStarryBackground          ;8BEB81;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEB85;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Stars_Left         ;8BEB87;


;;; $EB89: Instruction list - cinematic sprite object $EEC1 (Zebes explosion - afterglow) ;;;
InstList_CinematicSpriteObjects_ExplodingZebes_AfterGlow:
    dw $0010,EndingSequenceSpritemaps_ZebesSupernovaPart4                ;8BEB89;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEB8D;
    dw InstList_CinematicSpriteObjects_ExplodingZebes_AfterGlow          ;8BEB8F;


;;; $EB91: Instruction list - cinematic sprite object $EEC7 ('THE OPERATION WAS') ;;;
InstList_CinematicSpriteObjects_TheOperationWas_0:
    dw $0008*!FPS,EndingSequenceSpritemaps_T                             ;8BEB91;
    dw $0008*!FPS,EndingSequenceSpritemaps_TH                            ;8BEB95;
    dw $000F*!FPS,EndingSequenceSpritemaps_THE                           ;8BEB99;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEO                          ;8BEB9D;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOP                         ;8BEBA1;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPE                        ;8BEBA5;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPER                       ;8BEBA9;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERA                      ;8BEBAD;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERAT                     ;8BEBB1;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERATI                    ;8BEBB5;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERATIO                   ;8BEBB9;
    dw $000F*!FPS,EndingSequenceSpritemaps_THEOPERATION                  ;8BEBBD;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERATIONW                 ;8BEBC1;
    dw $0008*!FPS,EndingSequenceSpritemaps_THEOPERATIONWA                ;8BEBC5;
    dw $000F*!FPS,EndingSequenceSpritemaps_THEOPERATIONWAS               ;8BEBC9;
    dw Instruction_CinematicSpriteObject_SpawnCompletedSuccessfully      ;8BEBCD;

InstList_CinematicSpriteObjects_TheOperationWas_1:
    dw $000F,EndingSequenceSpritemaps_THEOPERATIONWAS                    ;8BEBCF;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEBD3;
    dw InstList_CinematicSpriteObjects_TheOperationWas_1                 ;8BEBD5;


;;; $EBD7: Instruction list - cinematic sprite object $EECD ('COMPLETED SUCCESSFULLY') ;;;
InstList_CinematicSpriteObjects_CompletedSuccessfully_0:
    dw $0008*!FPS,EndingSequenceSpritemaps_C_ompleted                    ;8BEBD7;
    dw $0008*!FPS,EndingSequenceSpritemaps_CO                            ;8BEBDB;
    dw $0008*!FPS,EndingSequenceSpritemaps_COM                           ;8BEBDF;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMP                          ;8BEBE3;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPL                         ;8BEBE7;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLE                        ;8BEBEB;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLET                       ;8BEBEF;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETE                      ;8BEBF3;
    dw $000F*!FPS,EndingSequenceSpritemaps_COMPLETED                     ;8BEBF7;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDS                    ;8BEBFB;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSU                   ;8BEBFF;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUC                  ;8BEC03;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCC                 ;8BEC07;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCE                ;8BEC0B;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCES               ;8BEC0F;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESS              ;8BEC13;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESSF             ;8BEC17;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESSFU            ;8BEC1B;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESSFUL           ;8BEC1F;
    dw $0008*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESSFULL          ;8BEC23;
    dw $000F*!FPS,EndingSequenceSpritemaps_COMPLETEDSUCCESSFULLY         ;8BEC27;
    dw Instruction_CinematicSpriteObject_SpawnClearTime                  ;8BEC2B;

InstList_CinematicSpriteObjects_CompletedSuccessfully_1:
    dw $0008,EndingSequenceSpritemaps_COMPLETEDSUCCESSFULLY              ;8BEC2D;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC31;
    dw InstList_CinematicSpriteObjects_CompletedSuccessfully_1           ;8BEC33;


;;; $EC35: Instruction list - cinematic sprite object $EEFD (clear time) ;;;
InstList_CinematicSpriteObjects_ClearTime_0:
    dw $0008*!FPS,EndingSequenceSpritemaps_C_lear                        ;8BEC35;
    dw $0008*!FPS,EndingSequenceSpritemaps_CL                            ;8BEC39;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLE                           ;8BEC3D;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEA                          ;8BEC41;
    dw $000F*!FPS,EndingSequenceSpritemaps_CLEAR                         ;8BEC45;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEART                        ;8BEC49;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTI                       ;8BEC4D;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTIM                      ;8BEC51;
    dw $000F*!FPS,EndingSequenceSpritemaps_CLEARTIME                     ;8BEC55;
    dw Instruction_CineSpriteObject_SpawnClearTime_Hours_TensDigit       ;8BEC59;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTIME                     ;8BEC5B;
    dw Instruction_CineSpriteObject_SpawnClearTime_Hours_OnesDigit       ;8BEC5F;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTIME                     ;8BEC61;
    dw Instruction_CinematicSpriteObject_SpawnClearTime_Colon            ;8BEC65;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTIME                     ;8BEC67;
    dw Inst_CineSpriteObject_SpawnClearTime_Minutes_TensDigit            ;8BEC6B;
    dw $0008*!FPS,EndingSequenceSpritemaps_CLEARTIME                     ;8BEC6D;
    dw Inst_CineSpriteObject_SpawnClearTime_Minutes_OnesDigit            ;8BEC71;
    dw $0080,EndingSequenceSpritemaps_CLEARTIME                          ;8BEC73;
    dw Instruction_CinematicSpriteObject_TransitionToCredits             ;8BEC77;

InstList_CinematicSpriteObjects_ClearTime_1:
    dw $000F,EndingSequenceSpritemaps_CLEARTIME                          ;8BEC79;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC7D;
    dw InstList_CinematicSpriteObjects_ClearTime_1                       ;8BEC7F;


;;; $EC81: Instruction list - clear time digit ;;;
InstList_ClearTimeDigit_0:
    dw $0008,EndingSequenceSpritemaps_0                                  ;8BEC81;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC85;
    dw InstList_ClearTimeDigit_0                                         ;8BEC87;

InstList_ClearTimeDigit_1:
    dw $0008,EndingSequenceSpritemaps_1                                  ;8BEC89;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC8D;
    dw InstList_ClearTimeDigit_1                                         ;8BEC8F;

InstList_ClearTimeDigit_2:
    dw $0008,EndingSequenceSpritemaps_2                                  ;8BEC91;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC95;
    dw InstList_ClearTimeDigit_2                                         ;8BEC97;

InstList_ClearTimeDigit_3:
    dw $0008,EndingSequenceSpritemaps_3                                  ;8BEC99;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEC9D;
    dw InstList_ClearTimeDigit_3                                         ;8BEC9F;

InstList_ClearTimeDigit_4:
    dw $0008,EndingSequenceSpritemaps_4                                  ;8BECA1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECA5;
    dw InstList_ClearTimeDigit_4                                         ;8BECA7;

InstList_ClearTimeDigit_5:
    dw $0008,EndingSequenceSpritemaps_5                                  ;8BECA9;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECAD;
    dw InstList_ClearTimeDigit_5                                         ;8BECAF;

InstList_ClearTimeDigit_6:
    dw $0008,EndingSequenceSpritemaps_6                                  ;8BECB1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECB5;
    dw InstList_ClearTimeDigit_6                                         ;8BECB7;

InstList_ClearTimeDigit_7:
    dw $0008,EndingSequenceSpritemaps_7                                  ;8BECB9;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECBD;
    dw InstList_ClearTimeDigit_7                                         ;8BECBF;

InstList_ClearTimeDigit_8:
    dw $0008,EndingSequenceSpritemaps_8                                  ;8BECC1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECC5;
    dw InstList_ClearTimeDigit_8                                         ;8BECC7;

InstList_ClearTimeDigit_9:
    dw $0008,EndingSequenceSpritemaps_9                                  ;8BECC9;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECCD;
    dw InstList_ClearTimeDigit_9                                         ;8BECCF;


;;; $ECD1: Instruction list - cinematic sprite object $EF0F (clear time - colon) ;;;
InstList_CinematicSpriteObject_ClearTime_Colon:
    dw $0008,EndingSequenceSpritemaps_Colon                              ;8BECD1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECD5;
    dw InstList_CinematicSpriteObject_ClearTime_Colon                    ;8BECD7;


;;; $ECD9: Instruction list - cinematic sprite object $EF21 (critters escape) ;;;
InstList_CinematicSpriteObject_CrittersEscape:
    dw $0001,EndingSequenceSpritemaps_CrittersEscapePodFrame1            ;8BECD9;
    dw $0001,EndingSequenceSpritemaps_CrittersEscapePodFrame2            ;8BECDD;
    dw $0001,EndingSequenceSpritemaps_CrittersEscapePodFrame3            ;8BECE1;
    dw $0001,EndingSequenceSpritemaps_CrittersEscapePodFrame4            ;8BECE5;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECE9;
    dw InstList_CinematicSpriteObject_CrittersEscape                     ;8BECEB;


;;; $ECED: Instruction list - cinematic sprite object $EED3 (yellow clouds - top - top half) ;;;
InstList_CinematicSpriteObject_YellowClouds_Top_TopHalf:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneTopCloudsPattern     ;8BECED;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECF1;
    dw InstList_CinematicSpriteObject_YellowClouds_Top_TopHalf           ;8BECF3;


;;; $ECF5: Instruction list - cinematic sprite object $EED9 (yellow clouds - top - bottom half) ;;;
InstList_CinematicSpriteObject_YellowClouds_Top_BottomHalf:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneTopCloudsEdge        ;8BECF5;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BECF9;
    dw InstList_CinematicSpriteObject_YellowClouds_Top_BottomHalf        ;8BECFB;


;;; $ECFD: Instruction list - cinematic sprite object $EEDF (yellow clouds - bottom - top half) ;;;
InstList_CinematicSpriteObject_YellowClouds_Bottom_TopHalf:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneBottomCloudsEdge     ;8BECFD;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED01;
    dw InstList_CinematicSpriteObject_YellowClouds_Bottom_TopHalf        ;8BED03;


;;; $ED05: Instruction list - cinematic sprite object $EEE5 (yellow clouds - bottom - bottom half) ;;;
InstList_CineSpriteObject_YellowClouds_Bottom_BottomHalf:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneBottomCloudsPattern  ;8BED05;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED09;
    dw InstList_CineSpriteObject_YellowClouds_Bottom_BottomHalf          ;8BED0B;


;;; $ED0D: Instruction list - cinematic sprite object $EEEB (yellow clouds - right) ;;;
InstList_CinematicSpriteObject_YellowClouds_Right:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneRightClouds          ;8BED0D;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED11;
    dw InstList_CinematicSpriteObject_YellowClouds_Right                 ;8BED13;


;;; $ED15: Instruction list - cinematic sprite object $EEF1 (yellow clouds - left) ;;;
InstList_CinematicSpriteObject_YellowClouds_Left:
    dw $0001,EndingSequenceSpritemaps_EndingCutsceneLeftClouds           ;8BED15;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED19;
    dw InstList_CinematicSpriteObject_YellowClouds_Left                  ;8BED1B;


;;; $ED1D: Instruction list - cinematic sprite object $EF27 (suitless Samus - idle) ;;;
InstList_CinematicSpriteObject_SuitlessSamus_Idle:
    dw $0080,EndingSequenceSpritemaps_SuitlessSamusStandingArmsStraight  ;8BED1D;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED21;
    dw InstList_CinematicSpriteObject_SuitlessSamus_Idle                 ;8BED23;


;;; $ED25: Instruction list - cinematic sprite object $EF2D (suitless Samus - idle - legs) ;;;
InstList_CinematicSpriteObject_SuitlessSamus_Idle_Legs:
    dw $0080,EndingSequenceSpritemaps_SuitlessSamusLowerBody             ;8BED25;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED29;
    dw InstList_CinematicSpriteObject_SuitlessSamus_Idle_Legs            ;8BED2B;


;;; $ED2D: Instruction list - cinematic sprite object $EF33 (suitless Samus - letting hair down) ;;;
InstList_CinematicSpriteObject_SuitlessSamus_LettingHairDown:
    dw regional($005A, $0048),EndingSequenceSpritemaps_SuitlessSamusStandingArmsStraight ;8BED2D;
    dw $0008*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame1 ;8BED31;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame2 ;8BED35;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame3 ;8BED39;
    dw regional($0020, $0019),EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame4 ;8BED3D;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame5 ;8BED41;
    dw $0009*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame6 ;8BED45;
    dw regional($0010, $000C),EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame7 ;8BED49;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusOpeningHairFrame8 ;8BED4D;
    dw regional($0030, $0026),EndingSequenceSpritemaps_SuitlessSamusStanding ;8BED51;
    dw Instruction_CinematicSpriteObject_SpawnSuitlessSamusJump          ;8BED55;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BED57;


;;; $ED59: Instruction list - cinematic sprite object $EF39 (suitless Samus - letting hair down - legs) ;;;
InstList_CineSpriteObject_SuitlessSamus_LettingHairDown_Legs:
    dw regional($005A, $0048),EndingSequenceSpritemaps_SuitlessSamusLowerBody ;8BED59;
    dw $0008*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED5D;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED61;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED65;
    dw regional($0020, $0019),EndingSequenceSpritemaps_SuitlessSamusLowerBody ;8BED69;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED6D;
    dw $0009*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED71;
    dw regional($0010, $000C),EndingSequenceSpritemaps_SuitlessSamusLowerBody ;8BED75;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusLowerBody        ;8BED79;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BED7D;


;;; $ED7F: Instruction list - cinematic sprite object $EF3F (suitless Samus - jump) ;;;
InstList_CinematicSpriteObject_SuitlessSamus_Jump_0:
    dw regional($0030, $0026),EndingSequenceSpritemaps_SuitlessSamusStanding ;8BED7F;
    dw $000A*!FPS,EndingSequenceSpritemaps_SuitlessSamusPreparingToJump  ;8BED83;
    dw Instruction_CinematicSpriteObject_MakeEndingSamusJump             ;8BED87;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BED89;
    dw Inst_CineSpriteObject_SpawnSuitlessSamus_LettingHairDown          ;8BED8B;

InstList_CinematicSpriteObject_SuitlessSamus_Jump_1:
    dw $0030,EndingSequenceSpritemaps_SuitlessSamusJumping               ;8BED8D;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED91;
    dw InstList_CinematicSpriteObject_SuitlessSamus_Jump_1               ;8BED93;


;;; $ED95: Instruction list - Samus - jump - falling ;;;
InstList_Samus_Jump_Falling:
    dw $000A,EndingSequenceSpritemaps_SamusFalling                       ;8BED95;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BED99;
    dw InstList_Samus_Jump_Falling                                       ;8BED9B;


;;; $ED9D: Instruction list - Samus - jump - landed ;;;
InstList_Samus_Jump_Landed:
    dw $000A*!FPS,EndingSequenceSpritemaps_SamusLanding                  ;8BED9D;
    dw regional($0010, $000C),EndingSequenceSpritemaps_SamusLanded       ;8BEDA1;
    dw regional($0030, $0026),EndingSequenceSpritemaps_SamusShooting     ;8BEDA5;
    dw Instruction_CinematicSpriteObject_SamusShootsScreen               ;8BEDA9;
    dw regional($0080, $0066),EndingSequenceSpritemaps_SamusShooting     ;8BEDAB;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEDAF;


;;; $EDB1: Instruction list - cinematic sprite object $EF45 (suited Samus - idle - body) ;;;
InstList_CinematicSpriteObject_SuitedSamus_Idle_Body:
    dw $000A,EndingSequenceSpritemaps_LargeSamusFromEndingStanding       ;8BEDB1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEDB5;
    dw InstList_CinematicSpriteObject_SuitedSamus_Idle_Body              ;8BEDB7;


;;; $EDB9: Instruction list - cinematic sprite object $EF4B (suited Samus - idle - head - with helmet) ;;;
InstList_CinematicSpriteObject_SuitedSamus_Idle_Head_Helmet:
    dw $000A,EndingSequenceSpritemaps_SamusHeadWithHelmetFromEnding      ;8BEDB9;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEDBD;
    dw InstList_CinematicSpriteObject_SuitedSamus_Idle_Head_Helmet       ;8BEDBF;


;;; $EDC1: Instruction list - cinematic sprite object $EF51 (suited Samus - idle - head - without helmet) ;;;
InstList_CinematicSpriteObject_SuitedSamus_Head:
    dw $000A,EndingSequenceSpritemaps_SamusHeadFromEndingFrame1          ;8BEDC1;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEDC5;
    dw InstList_CinematicSpriteObject_SuitedSamus_Head                   ;8BEDC7;


;;; $EDC9: Instruction list - cinematic sprite object $EF57 (suited Samus - thumbs up - body) ;;;
InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Body:
    dw regional($0040, $0033),EndingSequenceSpritemaps_LargeSamusFromEndingStanding ;8BEDC9;
    dw regional($0108, $00D0),EndingSequenceSpritemaps_HeadlessArmlessSuitedSamus ;8BEDCD;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEDD1;


;;; $EDD3: Instruction list - cinematic sprite object $EF5D (suited Samus - thumbs up - arm) ;;;
InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Arm:
    dw regional($0040, $0033),$0000                                      ;8BEDD3;
    dw $0008*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame1      ;8BEDD7;
    dw $0008*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame2      ;8BEDDB;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame3      ;8BEDDF;
    dw $0004*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame4      ;8BEDE3;
    dw $0003*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame5      ;8BEDE7;
    dw regional($0020, $0019),EndingSequenceSpritemaps_SamusArmFromEndingFrame6 ;8BEDEB;
    dw $0008*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame7      ;8BEDEF;
    dw regional($0040, $0033),EndingSequenceSpritemaps_SamusArmFromEndingFrame8 ;8BEDF3;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame6      ;8BEDF7;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame5      ;8BEDFB;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame4      ;8BEDFF;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusArmFromEndingFrame3      ;8BEE03;
    dw regional($0070, $0059),EndingSequenceSpritemaps_SamusArmFromEndingFrame2 ;8BEE07;
    dw Instruction_CinematicSpriteObject_SpawnSuitedSamusJump            ;8BEE0B;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEE0D;


;;; $EE0F: Instruction list - cinematic sprite object $EF63 (suited Samus - thumbs up - head - with helmet) ;;;
InstList_CineSpriteObject_SuitedSamus_ThumbsUp_Head_Helmet:
    dw regional($0148, $0103),EndingSequenceSpritemaps_SamusHeadWithHelmetFromEnding ;8BEE0F;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEE13;


;;; $EE15: Instruction list - cinematic sprite object $EF69 (suited Samus - thumbs up - head - without helmet) ;;;
InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Head:
    dw regional($0080, $0066),EndingSequenceSpritemaps_SamusHeadFromEndingFrame1 ;8BEE15;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusHeadFromEndingFrame2     ;8BEE19;
    dw $0005*!FPS,EndingSequenceSpritemaps_SamusHeadFromEndingFrame3     ;8BEE1D;
    dw regional($00BE, $0095),EndingSequenceSpritemaps_SamusHeadFromEndingFrame4 ;8BEE21;
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEE25;


;;; $EE27: Instruction list - cinematic sprite object $EF6F (suited Samus - jump - body) ;;;
InstList_CinematicSpriteObject_SuitedSamus_Jump_Body_0:
    dw Instruction_CineSpriteObject_PositionSuitedHeadToPrepareJump      ;8BEE27;
    dw $000A*!FPS,EndingSequenceSpritemaps_LargeSamusFromEndingPreparingToJump ;8BEE29;
    dw Instruction_CinematicSpriteObject_PositionSamusHeadToJump         ;8BEE2D;
    dw Instruction_CinematicSpriteObject_MakeEndingSamusJump             ;8BEE2F;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BEE31;
    dw Inst_CineSpriteObject_SpawnSuitlessSamus_LettingHairDown          ;8BEE33;

InstList_CinematicSpriteObject_SuitedSamus_Jump_Body_1:
    dw $0005,EndingSequenceSpritemaps_LargeSamusFromEndingJumping        ;8BEE35;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE39;
    dw InstList_CinematicSpriteObject_SuitedSamus_Jump_Body_1            ;8BEE3B;


;;; $EE3D: Instruction list - cinematic sprite object $EF75 (suited Samus - jump - head - with helmet) ;;;
InstList_CineSpriteObject_SuitedSamus_Jump_Head_Helmet_0:
    dw $000A*!FPS,EndingSequenceSpritemaps_LargeSamusHelmetFromEndingFrame1 ;8BEE3D;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BEE41;
    dw PreInst_CinematicSpriteObject_SuitedSamus_Jump_Head_Jumping       ;8BEE43;

InstList_CineSpriteObject_SuitedSamus_Jump_Head_Helmet_1:
    dw $0005,EndingSequenceSpritemaps_LargeSamusHelmetFromEndingFrame2   ;8BEE45;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE49;
    dw InstList_CineSpriteObject_SuitedSamus_Jump_Head_Helmet_1          ;8BEE4B;


;;; $EE4D: Instruction list - cinematic sprite object $EF7B (suited Samus - jump - head - without helmet) ;;;
InstList_CinematicSpriteObject_SuitedSamus_Jump_Head_0:
    dw $000A*!FPS,EndingSequenceSpritemaps_JumpingSamusHeadFromEnding         ;8BEE4D;
    dw CinematicSpriteObject_Instruction_PreInstructionY                 ;8BEE51;
    dw PreInst_CinematicSpriteObject_SuitedSamus_Jump_Head_Jumping       ;8BEE53;

InstList_CinematicSpriteObject_SuitedSamus_Jump_Head_1:
    dw $0005,EndingSequenceSpritemaps_JumpingSamusHeadFromEnding         ;8BEE55;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE59;
    dw InstList_CinematicSpriteObject_SuitedSamus_Jump_Head_1            ;8BEE5B;


;;; $EE5D: Instruction list - cinematic sprite object $EF81 (Super Metroid icon - S - top half) ;;;
InstList_CinematicSpriteObject_SuperMetroidIcon_S_TopHalf:
    dw $000A,EndingSequenceSpritemaps_ScrewAttackSymbolUpperPart         ;8BEE5D;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE61;
    dw InstList_CinematicSpriteObject_SuperMetroidIcon_S_TopHalf         ;8BEE63;


;;; $EE65: Instruction list - cinematic sprite object $EF87 (Super Metroid icon - S - bottom half) ;;;
InstList_CinematicSpriteObject_SuperMetroidIcon_S_BottomHalf:
    dw $000A,EndingSequenceSpritemaps_ScrewAttackSymbolLowerPart         ;8BEE65;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE69;
    dw InstList_CinematicSpriteObject_SuperMetroidIcon_S_BottomHalf      ;8BEE6B;


;;; $EE6D: Instruction list - cinematic sprite object $EF8D (Super Metroid icon - circle - top half) ;;;
InstList_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf_0:
    dw regional($0060, $004C),$0000                                      ;8BEE6D;
    dw $0005*!FPS,EndingSequenceSpritemaps_ScrewAttackSymbolRightWrapFrame1 ;8BEE71;
    dw $0005*!FPS,EndingSequenceSpritemaps_ScrewAttackSymbolRightWrapFrame2 ;8BEE75;
    dw regional($0040, $0033),EndingSequenceSpritemaps_ScrewAttackSymbolRightWrapFrame3 ;8BEE79;
    dw Instruction_GreyOutSuperMetroidIcon                               ;8BEE7D;

InstList_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf_1:
    dw $0005,EndingSequenceSpritemaps_ScrewAttackSymbolRightWrapFrame3   ;8BEE7F;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE83;
    dw InstList_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf_1       ;8BEE85;


;;; $EE87: Instruction list - cinematic sprite object $EF93 (Super Metroid icon - circle - bottom half) ;;;
InstList_CineSpriteObject_SuperMetroidIcon_Circle_BotHalf_0:
    dw regional($0060, $004C),$0000                                      ;8BEE87;
    dw $0005*!FPS,EndingSequenceSpritemaps_ScrewAttackSymbolLeftWrapFrame1 ;8BEE8B;
    dw $0005*!FPS,EndingSequenceSpritemaps_ScrewAttackSymbolLeftWrapFrame2 ;8BEE8F;

InstList_CineSpriteObject_SuperMetroidIcon_Circle_BotHalf_1:
    dw $0005*!FPS,EndingSequenceSpritemaps_ScrewAttackSymbolLeftWrapFrame3    ;8BEE93;
    dw CinematicSpriteObject_Instruction_GotoY                           ;8BEE97;
    dw InstList_CineSpriteObject_SuperMetroidIcon_Circle_BotHalf_1       ;8BEE99;


;;; $EE9B: Instruction list - delete ;;;
InstList_CinematicSpriteObject_Delete_duplicate:
    dw CinematicSpriteObject_Instruction_Delete                          ;8BEE9B;


;;; $EE9D: Cinematic sprite object definitions - ending / post-credits ;;;
CinematicSpriteObjectDefinitions_ExplodingZebes_Zebes:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette7        ;8BEE9D; Initialisation function
    dw RTS_8B93D9                                                        ;8BEE9F; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Zebes_0            ;8BEEA1; Instruction list

CinematicSpriteObjectDefinitions_ExplodingZebes_PurpleGlow:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette7        ;8BEEA3; Initialisation function
    dw PreInst_CineSpriteObj_ExplodingZebes_PurpleGlow_Stars_Lava        ;8BEEA5; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_PurpleGlow         ;8BEEA7; Instruction list

CinematicSpriteObjectDefinitions_ExplodingZebes_Stars:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette7        ;8BEEA9; Initialisation function
    dw PreInst_CineSpriteObj_ExplodingZebes_PurpleGlow_Stars_Lava        ;8BEEAB; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Stars              ;8BEEAD; Instruction list

CinematicSpriteObjectDefinitions_ExplodingZebes_Lava:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette5        ;8BEEAF; Initialisation function
    dw PreInst_CineSpriteObj_ExplodingZebes_PurpleGlow_Stars_Lava        ;8BEEB1; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Lava_0             ;8BEEB3; Instruction list

CinematicSpriteObjectDefinitions_ZebesExplosion_Silhouette:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette5        ;8BEEB5; Initialisation function
    dw RTS_8B93D9                                                        ;8BEEB7; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Silhouette         ;8BEEB9; Instruction list

CinematicSpriteObjectDefinitions_ZebesExplosion_Stars_Right:
    dw InitFunction_CinematicSpriteObject_ExplodingZebes_Palette7        ;8BEEBB; Initialisation function
    dw RTS_8B93D9                                                        ;8BEEBD; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Stars_Right        ;8BEEBF; Instruction list

CinematicSpriteObjectDefinitions_ZebesExplosion_AfterGlow:
    dw InitFunction_CinematicSpriteObject_ZebesExplosion_AfterGlow       ;8BEEC1; Initialisation function
    dw PreInstruction_CineSpriteObject_ZebesExplosion_AfterGlow          ;8BEEC3; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_AfterGlow          ;8BEEC5; Instruction list

CinematicSpriteObjectDefinitions_TheOperationWas:
    dw InitFunc_CineSpriteObj_TheOperationWasCompletedSuccessfully       ;8BEEC7; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEEC9; Pre-instruction
    dw InstList_CinematicSpriteObjects_TheOperationWas_0                 ;8BEECB; Instruction list

CinematicSpriteObjectDefinitions_CompletedSuccessfully:
    dw InitFunc_CineSpriteObj_TheOperationWasCompletedSuccessfully       ;8BEECD; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEECF; Pre-instruction
    dw InstList_CinematicSpriteObjects_CompletedSuccessfully_0           ;8BEED1; Instruction list

CinematicSpriteObjectDefinitions_YellowClouds_Top_TopHalf:
    dw InitFunction_CinematicSpriteObject_YellowClouds_Top_TopHalf       ;8BEED3; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Top             ;8BEED5; Pre-instruction
    dw InstList_CinematicSpriteObject_YellowClouds_Top_TopHalf           ;8BEED7; Instruction list

CinematicSpriteObjectDefinitions_Top_BottomHalf:
    dw InitFunction_CineSpriteObject_YellowClouds_Top_BottomHalf         ;8BEED9; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Top             ;8BEEDB; Pre-instruction
    dw InstList_CinematicSpriteObject_YellowClouds_Top_BottomHalf        ;8BEEDD; Instruction list

CinematicSpriteObjectDefinitions_Bottom_TopHalf:
    dw InitFunction_CineSpriteObject_YellowClouds_Bottom_TopHalf         ;8BEEDF; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Bottom          ;8BEEE1; Pre-instruction
    dw InstList_CinematicSpriteObject_YellowClouds_Bottom_TopHalf        ;8BEEE3; Instruction list

CinematicSpriteObjectDefinitions_Bottom_BottomHalf:
    dw InitFunction_CineSpriteObject_YellowClouds_Bottom_BottomHalf      ;8BEEE5; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Bottom          ;8BEEE7; Pre-instruction
    dw InstList_CineSpriteObject_YellowClouds_Bottom_BottomHalf          ;8BEEE9; Instruction list

CinematicSpriteObjectDefinitions_Right:
    dw InitFunction_CinematicSpriteObject_YellowClouds_Right             ;8BEEEB; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Right           ;8BEEED; Pre-instruction
    dw InstList_CinematicSpriteObject_YellowClouds_Right                 ;8BEEEF; Instruction list

CinematicSpriteObjectDefinitions_Left:
    dw InitFunction_CinematicSpriteObject_YellowClouds_Left              ;8BEEF1; Initialisation function
    dw PreInstruction_CinematicSpriteObject_YellowClouds_Left            ;8BEEF3; Pre-instruction
    dw InstList_CinematicSpriteObject_YellowClouds_Left                  ;8BEEF5; Instruction list

CinematicSpriteObjectDefinitions_ZebesExplosion_Stars_Left:
    dw InitFunction_CinematicSpriteObject_ZebesExplosion_Stars_Left      ;8BEEF7; Initialisation function
    dw Instruction_CinematicSpriteObject_ZebesExplosion_Stars_Left       ;8BEEF9; Pre-instruction
    dw InstList_CinematicSpriteObjects_ExplodingZebes_Stars_Left         ;8BEEFB; Instruction list

CinematicSpriteObjectDefinitions_ClearTime:
    dw InitFunction_CinematicSpriteObject_ClearTime                      ;8BEEFD; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEEFF; Pre-instruction
    dw InstList_CinematicSpriteObjects_ClearTime_0                       ;8BEF01; Instruction list

CinematicSpriteObjectDefinitions_ClearTime_Hours_TensDigit:
    dw InitFunction_CinematicSpriteObject_ClearTime_Hours_TensDigit      ;8BEF03; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEF05; Pre-instruction
    dw InstList_ClearTimeDigit_0                                         ;8BEF07; Instruction list

CinematicSpriteObjectDefinitions_ClearTime_Hours_OnesDigit:
    dw InitFunction_CinematicSpriteObject_ClearTime_Hours_OnesDigit      ;8BEF09; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEF0B; Pre-instruction
    dw InstList_ClearTimeDigit_0                                         ;8BEF0D; Instruction list

CinematicSpriteObjectDefinitions_ClearTime_Colon:
    dw InitFunction_CinematicSpriteObject_ClearTime_Colon                ;8BEF0F; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEF11; Pre-instruction
    dw InstList_CinematicSpriteObject_ClearTime_Colon                    ;8BEF13; Instruction list

CinematicSpriteObjectDefinitions_ClearTime_Minutes_TensDigit:
    dw InitFunction_CineSpriteObject_ClearTime_Minutes_TensDigit         ;8BEF15; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEF17; Pre-instruction
    dw InstList_ClearTimeDigit_0                                         ;8BEF19; Instruction list

CinematicSpriteObjectDefinitions_ClearTime_Minutes_OnesDigit:
    dw InitFunction_CineSpriteObject_ClearTime_Minutes_OnesDigit         ;8BEF1B; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Text                         ;8BEF1D; Pre-instruction
    dw InstList_ClearTimeDigit_0                                         ;8BEF1F; Instruction list

CinematicSpriteObjectDefinitions_CrittersEscape:
    dw InitFunction_CinematicSpriteObject_CrittersEscape                 ;8BEF21; Initialisation function
    dw PreInstruction_CinematicSpriteObject_CrittersEscape               ;8BEF23; Pre-instruction
    dw InstList_CinematicSpriteObject_CrittersEscape                     ;8BEF25; Instruction list

CinematicSpriteObjectDefinitions_SuitlessSamus_Idle:
    dw InitFunction_CinematicSpriteObject_SuitlessSamus                  ;8BEF27; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Samus_Idle                   ;8BEF29; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitlessSamus_Idle                 ;8BEF2B; Instruction list

CinematicSpriteObjectDefinitions_SuitlessSamus_Idle_Legs:
    dw InitFunction_CinematicSpriteObject_SuitlessSamus                  ;8BEF2D; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Samus_Idle                   ;8BEF2F; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitlessSamus_Idle_Legs            ;8BEF31; Instruction list

CinematicSpriteObjectDefs_SuitlessSamus_LettingHairDown:
    dw InitFunction_CinematicSpriteObject_SuitlessSamus                  ;8BEF33; Initialisation function
    dw RTS_8BF51C                                                        ;8BEF35; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitlessSamus_LettingHairDown      ;8BEF37; Instruction list

CinematicSpriteObjectDefs_SuitlessSamus_LettingHairDown_Legs:
    dw InitFunction_CinematicSpriteObject_SuitlessSamus                  ;8BEF39; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF3B; Pre-instruction
    dw InstList_CineSpriteObject_SuitlessSamus_LettingHairDown_Legs      ;8BEF3D; Instruction list

CinematicSpriteObjectDefinitions_SuitlessSamus_Jump:
    dw InitFunction_CinematicSpriteObject_SuitlessSamus                  ;8BEF3F; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF41; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitlessSamus_Jump_0               ;8BEF43; Instruction list

CinematicSpriteObjectDefinitions_SuitedSamus_Idle_Body:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Body_Arm           ;8BEF45; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Samus_Idle                   ;8BEF47; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_Idle_Body              ;8BEF49; Instruction list

CinematicSpriteObjectDefs_SuitedSamus_Idle_Head_Helmet:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head_Helmet        ;8BEF4B; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Samus_Idle                   ;8BEF4D; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_Idle_Head_Helmet       ;8BEF4F; Instruction list

CinematicSpriteObjectDefinitions_SuitedSamus_Idle_Head:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head               ;8BEF51; Initialisation function
    dw PreInstruction_CinematicSpriteObject_Samus_Idle                   ;8BEF53; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_Head                   ;8BEF55; Instruction list

CinematicSpriteObjectDefinitions_ThumbsUp_Body:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Body_Arm           ;8BEF57; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF59; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Body          ;8BEF5B; Instruction list

CinematicSpriteObjectDefinitions_ThumbsUp_Arm:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Body_Arm           ;8BEF5D; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF5F; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Arm           ;8BEF61; Instruction list

CinematicSpriteObjectDefinitions_ThumbsUp_Head_Helmet:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head_Helmet        ;8BEF63; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF65; Pre-instruction
    dw InstList_CineSpriteObject_SuitedSamus_ThumbsUp_Head_Helmet        ;8BEF67; Instruction list

CinematicSpriteObjectDefinitions_ThumbsUp_Head:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head               ;8BEF69; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF6B; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_ThumbsUp_Head          ;8BEF6D; Instruction list

CinematicSpriteObjectDefinitions_Jump_Body:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Body_Arm           ;8BEF6F; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF71; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_Jump_Body_0            ;8BEF73; Instruction list

CinematicSpriteObjectDefinitions_Jump_Head_Helmet:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head_Helmet        ;8BEF75; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF77; Pre-instruction
    dw InstList_CineSpriteObject_SuitedSamus_Jump_Head_Helmet_0          ;8BEF79; Instruction list

CinematicSpriteObjectDefinitions_Jump_Head:
    dw InitFunction_CinematicSpriteObject_SuitedSamus_Head               ;8BEF7B; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF7D; Pre-instruction
    dw InstList_CinematicSpriteObject_SuitedSamus_Jump_Head_0            ;8BEF7F; Instruction list

CinematicSpriteObjectDefinitions_SuperMetroidIcon_S_TopHalf:
    dw InitFunction_CineSpriteObject_SuperMetroidIcon_S_TopHalf          ;8BEF81; Initialisation function
    dw PreInstruction_CineSpriteObject_SuperMetroidIcon_S_TopHalf        ;8BEF83; Pre-instruction
    dw InstList_CinematicSpriteObject_SuperMetroidIcon_S_TopHalf         ;8BEF85; Instruction list

CinematicSpriteObjectDefs_SuperMetroidIcon_S_BottomHalf:
    dw InitFunction_CineSpriteObject_SuperMetroidIcon_S_BottomHalf       ;8BEF87; Initialisation function
    dw Instruction_CineSpriteObject_SuperMetroidIcon_S_BottomHalf        ;8BEF89; Pre-instruction
    dw InstList_CinematicSpriteObject_SuperMetroidIcon_S_BottomHalf      ;8BEF8B; Instruction list

CinematicSpriteObjectDefs_SuperMetroidIcon_Circle_TopHalf:
    dw InitFunc_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf         ;8BEF8D; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF8F; Pre-instruction
    dw InstList_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf_0       ;8BEF91; Instruction list

CinematicSpriteObjectDefs_SuperMetroidIcon_Circle_BottomHalf:
    dw InitFunc_CineSpriteObject_SuperMetroidIcon_Circle_BottomHalf      ;8BEF93; Initialisation function
    dw RTS_8B93D9                                                        ;8BEF95; Pre-instruction
    dw InstList_CineSpriteObject_SuperMetroidIcon_Circle_BotHalf_0       ;8BEF97; Instruction list


;;; $EF99: Initialisation function - cinematic sprite object $EF21 (critters escape) ;;;
InitFunction_CinematicSpriteObject_CrittersEscape:
    LDA.W #$0080                                                         ;8BEF99;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BEF9C;
    LDA.W #$0080                                                         ;8BEF9F;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BEFA2;
    LDA.W #$0E00                                                         ;8BEFA5;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BEFA8;
    LDA.W #$0104                                                         ;8BEFAB;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BEFAE;
    RTS                                                                  ;8BEFB1;


;;; $EFB2: Pre-instruction - cinematic sprite object $EF21 (critters escape) ;;;
PreInstruction_CinematicSpriteObject_CrittersEscape:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BEFB2;
    CLC                                                                  ;8BEFB5;
    ADC.W #$0080                                                         ;8BEFB6;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BEFB9;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BEFBC;
    ADC.W #$0000                                                         ;8BEFBF;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BEFC2;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BEFC5;
    CLC                                                                  ;8BEFC8;
    ADC.W #$0000                                                         ;8BEFC9;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BEFCC;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BEFCF;
    ADC.W #$0001                                                         ;8BEFD2;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BEFD5;
    CMP.W #$0110                                                         ;8BEFD8;
    BMI .return                                                          ;8BEFDB;
    LDA.W #$0001                                                         ;8BEFDD;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BEFE0;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BEFE3;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BEFE6;

  .return:
    RTS                                                                  ;8BEFE9;


;;; $EFEA: Initialisation function - cinematic sprite object $EE9D/$EEA3/$EEA9/$EEBB (exploding Zebes - palette 7) ;;;
InitFunction_CinematicSpriteObject_ExplodingZebes_Palette7:
    LDA.W #$0080                                                         ;8BEFEA;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BEFED; fallthrough to CommonInit_ExplodingZebes_Palette7


;;; $EFF0: Palette 7 exploding Zebes common initialisation ;;;
CommonInit_ExplodingZebes_Palette7:
    LDA.W #$0080                                                         ;8BEFF0;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BEFF3;
    LDA.W #$0E00                                                         ;8BEFF6;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BEFF9;
    RTS                                                                  ;8BEFFC;


;;; $EFFD: Initialisation function - cinematic sprite object $EEF7 (Zebes explosion - stars - left) ;;;
InitFunction_CinematicSpriteObject_ZebesExplosion_Stars_Left:
    LDA.W #$FF80                                                         ;8BEFFD;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF000;
    BRA CommonInit_ExplodingZebes_Palette7                               ;8BF003;


;;; $F005: Initialisation function - cinematic sprite object $EEAF/$EEB5 (exploding Zebes - palette 5) ;;;
InitFunction_CinematicSpriteObject_ExplodingZebes_Palette5:
    LDA.W #$0080                                                         ;8BF005;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF008;
    LDA.W #$0080                                                         ;8BF00B;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF00E;
    LDA.W #$0A00                                                         ;8BF011;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF014;
    RTS                                                                  ;8BF017;


;;; $F018: Initialisation function - cinematic sprite object $EEC1 (Zebes explosion - afterglow) ;;;
InitFunction_CinematicSpriteObject_ZebesExplosion_AfterGlow:
    LDA.W #$0080                                                         ;8BF018;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF01B;
    LDA.W #$0080                                                         ;8BF01E;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF021;
    LDA.W #$0C00                                                         ;8BF024;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF027;
    RTS                                                                  ;8BF02A;


;;; $F02B: Initialisation function - cinematic sprite object $EEC7/$EECD ('THE OPERATION WAS' / 'COMPLETED SUCCESSFULLY') ;;;
InitFunc_CineSpriteObj_TheOperationWasCompletedSuccessfully:
    LDA.W #$0080                                                         ;8BF02B;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF02E;
    LDA.W #$0060                                                         ;8BF031;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF034;
    LDA.W #$0400                                                         ;8BF037;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF03A;
    RTS                                                                  ;8BF03D;


;;; $F03E: Initialisation function - cinematic sprite object $EEFD (clear time) ;;;
InitFunction_CinematicSpriteObject_ClearTime:
    LDA.W #$0080                                                         ;8BF03E;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF041;
    LDA.W #$00A0                                                         ;8BF044;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF047;
    LDA.W #$0200                                                         ;8BF04A;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF04D;
    RTS                                                                  ;8BF050;


;;; $F051: Clear time result common initialisation ;;;
CommonInit_ClearTime:
    LDA.W #$00A0                                                         ;8BF051;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF054;
    LDA.W #$0000                                                         ;8BF057;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF05A;
    RTS                                                                  ;8BF05D;


;;; $F05E: Initialisation function - cinematic sprite object $EF03 (clear time - hours - tens digit) ;;;
InitFunction_CinematicSpriteObject_ClearTime_Hours_TensDigit:
    LDA.W EndingClearTime_HoursTens                                      ;8BF05E;
    JSR.W CinematicSpriteObject_InstListPointer_PlusA_Times8             ;8BF061;
    LDA.W #$009C                                                         ;8BF064;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF067;
    JMP.W CommonInit_ClearTime                                           ;8BF06A;


;;; $F06D: Initialisation function - cinematic sprite object $EF09 (clear time - hours - units digit) ;;;
InitFunction_CinematicSpriteObject_ClearTime_Hours_OnesDigit:
    LDA.W EndingClearTime_HoursUnits                                     ;8BF06D;
    JSR.W CinematicSpriteObject_InstListPointer_PlusA_Times8             ;8BF070;
    LDA.W #$00A4                                                         ;8BF073;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF076;
    JMP.W CommonInit_ClearTime                                           ;8BF079;


;;; $F07C: Initialisation function - cinematic sprite object $EF0F (clear time - colon) ;;;
InitFunction_CinematicSpriteObject_ClearTime_Colon:
    LDA.W #$00AC                                                         ;8BF07C;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF07F;
    JMP.W CommonInit_ClearTime                                           ;8BF082;


;;; $F085: Initialisation function - cinematic sprite object $EF15 (clear time - minutes - tens digit) ;;;
InitFunction_CineSpriteObject_ClearTime_Minutes_TensDigit:
    LDA.W EndingClearTime_MinutesTens                                    ;8BF085;
    JSR.W CinematicSpriteObject_InstListPointer_PlusA_Times8             ;8BF088;
    LDA.W #$00B4                                                         ;8BF08B;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF08E;
    JMP.W CommonInit_ClearTime                                           ;8BF091;


;;; $F094: Initialisation function - cinematic sprite object $EF1B (clear time - minutes - units digit) ;;;
InitFunction_CineSpriteObject_ClearTime_Minutes_OnesDigit:
    LDA.W EndingClearTime_MinutesUnits                                   ;8BF094;
    JSR.W CinematicSpriteObject_InstListPointer_PlusA_Times8             ;8BF097;
    LDA.W #$00BC                                                         ;8BF09A;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF09D;
    JMP.W CommonInit_ClearTime                                           ;8BF0A0;


;;; $F0A3: Cinematic sprite object instruction list pointer += [A] * 8 ;;;
CinematicSpriteObject_InstListPointer_PlusA_Times8:
    ASL                                                                  ;8BF0A3;
    ASL                                                                  ;8BF0A4;
    ASL                                                                  ;8BF0A5;
    STA.B DP_Temp12                                                      ;8BF0A6;
    LDA.W CinematicSpriteObject_InstListPointers,Y                       ;8BF0A8;
    CLC                                                                  ;8BF0AB;
    ADC.B DP_Temp12                                                      ;8BF0AC;
    STA.W CinematicSpriteObject_InstListPointers,Y                       ;8BF0AE;
    RTS                                                                  ;8BF0B1;


;;; $F0B2: Initialisation function - cinematic sprite object $EED3 (yellow clouds - top - top half) ;;;
InitFunction_CinematicSpriteObject_YellowClouds_Top_TopHalf:
    LDA.W #$FFA0                                                         ;8BF0B2;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF0B5; fallthrough to CommonInit_YellowClouds_TopBottom


;;; $F0B8: Top/bottom yellow clouds common initialisation ;;;
CommonInit_YellowClouds_TopBottom:
    LDA.W CinematicSpriteObject_InitParam                                ;8BF0B8;
    BEQ .noInitParam                                                     ;8BF0BB;
    LDA.W #$0180                                                         ;8BF0BD;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF0C0;
    LDA.W #$0A00                                                         ;8BF0C3;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF0C6;
    LDA.W CinematicSpriteObject_InstListPointers,Y                       ;8BF0C9;
    CLC                                                                  ;8BF0CC;
    ADC.W #$0004                                                         ;8BF0CD;
    STA.W CinematicSpriteObject_InstListPointers,Y                       ;8BF0D0;
    RTS                                                                  ;8BF0D3;

  .noInitParam:
    LDA.W #$0080                                                         ;8BF0D4;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF0D7;
    LDA.W #$0A00                                                         ;8BF0DA;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF0DD;
    RTS                                                                  ;8BF0E0;


;;; $F0E1: Initialisation function - cinematic sprite object $EED9 (yellow clouds - top - bottom half) ;;;
InitFunction_CineSpriteObject_YellowClouds_Top_BottomHalf:
    LDA.W #$FFE0                                                         ;8BF0E1;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF0E4;
    BRA CommonInit_YellowClouds_TopBottom                                ;8BF0E7;


;;; $F0E9: Initialisation function - cinematic sprite object $EEDF (yellow clouds - bottom - top half) ;;;
InitFunction_CineSpriteObject_YellowClouds_Bottom_TopHalf:
    LDA.W #$0120                                                         ;8BF0E9;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF0EC;
    BRA CommonInit_YellowClouds_TopBottom                                ;8BF0EF;


;;; $F0F1: Initialisation function - cinematic sprite object $EEE5 (yellow clouds - bottom - bottom half) ;;;
InitFunction_CineSpriteObject_YellowClouds_Bottom_BottomHalf:
    LDA.W #$0160                                                         ;8BF0F1;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF0F4;
    BRA CommonInit_YellowClouds_TopBottom                                ;8BF0F7;


;;; $F0F9: Initialisation function - cinematic sprite object $EEEB (yellow clouds - right) ;;;
InitFunction_CinematicSpriteObject_YellowClouds_Right:
    LDA.W #$0140                                                         ;8BF0F9;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF0FC;
    LDA.W CinematicSpriteObject_InitParam                                ;8BF0FF;
    BEQ .noInitParam                                                     ;8BF102;
    LDA.W #$01C0                                                         ;8BF104;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF107;
    LDA.W #$0A00                                                         ;8BF10A;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF10D;
    RTS                                                                  ;8BF110;

  .noInitParam:
    LDA.W #$00C0                                                         ;8BF111;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF114;
    LDA.W #$0A00                                                         ;8BF117;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF11A;
    RTS                                                                  ;8BF11D;


;;; $F11E: Initialisation function - cinematic sprite object $EEF1 (yellow clouds - left) ;;;
InitFunction_CinematicSpriteObject_YellowClouds_Left:
    LDA.W #$FFC0                                                         ;8BF11E;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF121;
    LDA.W CinematicSpriteObject_InitParam                                ;8BF124;
    BEQ .noInitParam                                                     ;8BF127;
    LDA.W #$FF40                                                         ;8BF129;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF12C;
    LDA.W #$0A00                                                         ;8BF12F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF132;
    RTS                                                                  ;8BF135;

  .noInitParam:
    LDA.W #$0040                                                         ;8BF136;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF139;
    LDA.W #$0A00                                                         ;8BF13C;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF13F;
    RTS                                                                  ;8BF142;


;;; $F143: Initialisation function - cinematic sprite object $EF27/$EF2D/$EF33/$EF39/$EF3F (suitless Samus) ;;;
InitFunction_CinematicSpriteObject_SuitlessSamus:
    LDA.W #$0078                                                         ;8BF143;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF146;
    LDA.W #$0088                                                         ;8BF149;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF14C;
    LDA.W #$0A00                                                         ;8BF14F;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF152;
    RTS                                                                  ;8BF155;


;;; $F156: Initialisation function - cinematic sprite object $EF45/$EF57/$EF5D/$EF6F (suited Samus body / arm) ;;;
InitFunction_CinematicSpriteObject_SuitedSamus_Body_Arm:
    LDA.W #$0078                                                         ;8BF156;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF159;
    LDA.W #$0098                                                         ;8BF15C;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF15F;
    LDA.W #$0C00                                                         ;8BF162;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF165;
    RTS                                                                  ;8BF168;


;;; $F169: Initialisation function - cinematic sprite object $EF4B/$EF63/$EF75 (suited Samus head - with helmet) ;;;
InitFunction_CinematicSpriteObject_SuitedSamus_Head_Helmet:
    LDA.W #$007C                                                         ;8BF169;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF16C;
    LDA.W #$006C                                                         ;8BF16F;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF172;
    LDA.W #$0C00                                                         ;8BF175;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF178;
    RTS                                                                  ;8BF17B;


;;; $F17C: Initialisation function - cinematic sprite object $EF51/$EF69/$EF7B (suited Samus head - without helmet) ;;;
InitFunction_CinematicSpriteObject_SuitedSamus_Head:
    LDA.W #$0079                                                         ;8BF17C;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF17F;
    LDA.W #$006B                                                         ;8BF182;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF185;
    LDA.W #$0A00                                                         ;8BF188;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF18B;
    RTS                                                                  ;8BF18E;


;;; $F18F: Initialisation function - cinematic sprite object $EF81 (Super Metroid icon - S - top half) ;;;
InitFunction_CineSpriteObject_SuperMetroidIcon_S_TopHalf:
    LDA.W #$0212                                                         ;8BF18F;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF192;
    LDA.W #$00E7                                                         ;8BF195;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF198;
    LDA.W #$0E00                                                         ;8BF19B;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF19E;
    LDA.W #$0008                                                         ;8BF1A1;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BF1A4;
    RTS                                                                  ;8BF1A7;


;;; $F1A8: Initialisation function - cinematic sprite object $EF87 (Super Metroid icon - S - bottom half) ;;;
InitFunction_CineSpriteObject_SuperMetroidIcon_S_BottomHalf:
    LDA.W #$00F6                                                         ;8BF1A8;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF1AB;
    LDA.W #$0207                                                         ;8BF1AE;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF1B1;
    LDA.W #$0E00                                                         ;8BF1B4;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF1B7;
    LDA.W #$0008                                                         ;8BF1BA;
    STA.W CinematicSpriteObject_Timers,Y                                 ;8BF1BD;
    RTS                                                                  ;8BF1C0;


;;; $F1C1: Initialisation function - cinematic sprite object $EF8D (Super Metroid icon - circle - top half) ;;;
InitFunc_CineSpriteObject_SuperMetroidIcon_Circle_TopHalf:
    LDA.W #$0181                                                         ;8BF1C1;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF1C4;
    LDA.W #$016E                                                         ;8BF1C7;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF1CA;
    LDA.W #$0E00                                                         ;8BF1CD;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF1D0;
    RTS                                                                  ;8BF1D3;


;;; $F1D4: Initialisation function - cinematic sprite object $EF93 (Super Metroid icon - circle - bottom half) ;;;
InitFunc_CineSpriteObject_SuperMetroidIcon_Circle_BottomHalf:
    LDA.W #$0187                                                         ;8BF1D4;
    STA.W CinematicSpriteObject_XPositions,Y                             ;8BF1D7;
    LDA.W #$0180                                                         ;8BF1DA;
    STA.W CinematicSpriteObject_YPositions,Y                             ;8BF1DD;
    LDA.W #$0E00                                                         ;8BF1E0;
    STA.W CinematicSpriteObject_PaletteIndices,Y                         ;8BF1E3;
    RTS                                                                  ;8BF1E6;


;;; $F1E7: Pre-instruction - cinematic sprite object $EF81 (Super Metroid icon - S - top half) ;;;
PreInstruction_CineSpriteObject_SuperMetroidIcon_S_TopHalf:
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF1E7;
    CLC                                                                  ;8BF1EA;
    ADC.W CinematicSpriteObject_Timers,X                                 ;8BF1EB;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF1EE;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BF1F1;
    SEC                                                                  ;8BF1F4;
    SBC.W CinematicSpriteObject_Timers,X                                 ;8BF1F5;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF1F8;
    CMP.W #$018B                                                         ;8BF1FB;
    BPL +                                                                ;8BF1FE;
    LDA.W #$018A                                                         ;8BF200;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF203;
    LDA.W #$016F                                                         ;8BF206;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF209;
    LDA.W #RTS_8B93D9                                                    ;8BF20C;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF20F;
    PHY                                                                  ;8BF212;
    LDY.W #PaletteFXObjects_PostCreditsSuperMetroidIcon                  ;8BF213;
    JSL.L Spawn_PaletteFXObject                                          ;8BF216;
    PLY                                                                  ;8BF21A;
    RTS                                                                  ;8BF21B;

+   LDA.W CinematicSpriteObject_Timers,X                                 ;8BF21C;
    CLC                                                                  ;8BF21F;
    ADC.W #$0002                                                         ;8BF220;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BF223;
    RTS                                                                  ;8BF226;


;;; $F227: Pre-instruction - cinematic sprite object $EF87 (Super Metroid icon - S - bottom half) ;;;
Instruction_CineSpriteObject_SuperMetroidIcon_S_BottomHalf:
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF227;
    SEC                                                                  ;8BF22A;
    SBC.W CinematicSpriteObject_Timers,X                                 ;8BF22B;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF22E;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BF231;
    CLC                                                                  ;8BF234;
    ADC.W CinematicSpriteObject_Timers,X                                 ;8BF235;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF238;
    CMP.W #$017E                                                         ;8BF23B;
    BMI +                                                                ;8BF23E;
    LDA.W #$017E                                                         ;8BF240;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF243;
    LDA.W #$017F                                                         ;8BF246;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF249;
    LDA.W #RTS_8B93D9                                                    ;8BF24C;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF24F;
    RTS                                                                  ;8BF252;

+   LDA.W CinematicSpriteObject_Timers,X                                 ;8BF253;
    CLC                                                                  ;8BF256;
    ADC.W #$0002                                                         ;8BF257;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BF25A;
    RTS                                                                  ;8BF25D;


;;; $F25E: Instruction - grey out Super Metroid icon ;;;
Instruction_GreyOutSuperMetroidIcon:
    SEP #$20                                                             ;8BF25E;
    LDA.B #$03                                                           ;8BF260;
    STA.B DP_MainScreenLayers                                            ;8BF262;
    LDA.B #$10                                                           ;8BF264;
    STA.B DP_SubScreenLayers                                             ;8BF266;
    LDA.B #$02                                                           ;8BF268;
    STA.B DP_ColorMathA                                                  ;8BF26A;
    LDA.B #$22                                                           ;8BF26C;
    STA.B DP_ColorMathB                                                  ;8BF26E;
    LDA.B #$64                                                           ;8BF270;
    STA.B DP_BGTilesAddr                                                 ;8BF272;
    LDA.B #$54                                                           ;8BF274;
    STA.B DP_BG2TilemapAddrSize                                          ;8BF276;
    REP #$20                                                             ;8BF278;
    STZ.W CinematicFunctionTimer                                         ;8BF27A;
    LDA.W #CinematicFunction_PostCredits_GreyOutSuperMetroidIcon         ;8BF27D;
    STA.W CinematicFunction                                              ;8BF280;
    RTS                                                                  ;8BF283;


;;; $F284: Instruction - fade out zoomed out exploding Zebes ;;;
Instruction_FadeOutZoomedOutExplodingZebes:
    PHY                                                                  ;8BF284;
    LDY.W #PaletteFXObjects_FadeOutZoomedOutExplodingZebes               ;8BF285;
    JSL.L Spawn_PaletteFXObject                                          ;8BF288;
    LDA.W #$0001                                                         ;8BF28C;
    STA.L Palettes_SpriteP7+$1C                                          ;8BF28F;
    PLY                                                                  ;8BF293;
    RTS                                                                  ;8BF294;


;;; $F295: Instruction - spawn Zebes explosion silhouette cinematic sprite object ;;;
Instruction_CineSpriteObjectSpawnZebesExplosionSilhouette:
    PHY                                                                  ;8BF295;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesExplosion_Silhouette    ;8BF296;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF299;
    LDA.W #$7FFF                                                         ;8BF29C;
    STA.L Palettes                                                       ;8BF29F;
    PLY                                                                  ;8BF2A3;
    RTS                                                                  ;8BF2A4;


;;; $F2A5: Pre-instruction - cinematic sprite object $EEA3/$EEA9/$EEAF (exploding Zebes - purple glow / stars / lava) ;;;
PreInst_CineSpriteObj_ExplodingZebes_PurpleGlow_Stars_Lava:
    LDA.W CinematicSpriteObject_InstListPointers+$1E                     ;8BF2A5;
    BNE .return                                                          ;8BF2A8;
    LDA.W #$0001                                                         ;8BF2AA;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF2AD;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BF2B0;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF2B3;

  .return:
    RTS                                                                  ;8BF2B6;


;;; $F2B7: Instruction - start Zebes explosion ;;;
Instruction_CinematicSpriteObject_StartZebesExplosion:
    PHY                                                                  ;8BF2B7;
    SEP #$20                                                             ;8BF2B8;
    LDA.B #$11                                                           ;8BF2BA;
    STA.B DP_MainScreenLayers                                            ;8BF2BC;
    LDA.B #$02                                                           ;8BF2BE;
    STA.B DP_SubScreenLayers                                             ;8BF2C0;
    LDA.B #$02                                                           ;8BF2C2;
    STA.B DP_ColorMathA                                                  ;8BF2C4;
    LDA.B #$11                                                           ;8BF2C6;
    STA.B DP_ColorMathB                                                  ;8BF2C8;
    LDA.B #$7C                                                           ;8BF2CA;
    STA.B DP_BG2TilemapAddrSize                                          ;8BF2CC;
    REP #$20                                                             ;8BF2CE;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesExplosion_Stars_Right   ;8BF2D0;
    STZ.B DP_Temp12                                                      ;8BF2D3;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF2D5;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesExplosion_Stars_Left    ;8BF2D8;
    LDA.W #$0002                                                         ;8BF2DB;
    STA.B DP_Temp12                                                      ;8BF2DE;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF2E0;
    LDY.W #PaletteFXObjects_WidePartOfZebesExplosion_Foreground          ;8BF2E3;
    JSL.L Spawn_PaletteFXObject                                          ;8BF2E6;
    LDY.W #PaletteFXObjects_WhiteOutSpaceDuringZebesExplosion            ;8BF2EA;
    JSL.L Spawn_PaletteFXObject                                          ;8BF2ED;
    LDY.W #PaletteFXObjects_WidePartOfZebesExplosion_Background          ;8BF2F1;
    JSL.L Spawn_PaletteFXObject                                          ;8BF2F4;
    PLY                                                                  ;8BF2F8;
    RTS                                                                  ;8BF2F9;


;;; $F2FA: Instruction - Zebes explosion finale ;;;
Instruction_ZebesExplosionFinale:
    PHY                                                                  ;8BF2FA;
    SEP #$20                                                             ;8BF2FB;
    LDA.B #$03                                                           ;8BF2FD;
    STA.B DP_MainScreenLayers                                            ;8BF2FF;
    LDA.B #$12                                                           ;8BF301;
    STA.B DP_SubScreenLayers                                             ;8BF303;
    LDA.B #$02                                                           ;8BF305;
    STA.B DP_ColorMathA                                                  ;8BF307;
    LDA.B #$33                                                           ;8BF309;
    STA.B DP_ColorMathB                                                  ;8BF30B;
    LDA.B #$74                                                           ;8BF30D;
    STA.B DP_BG1TilemapAddrSize                                          ;8BF30F;
    LDA.B #$78                                                           ;8BF311;
    STA.B DP_BG2TilemapAddrSize                                          ;8BF313;
    REP #$20                                                             ;8BF315;
    LDY.W #PaletteFXObjects_ZebesExplosionFinale                         ;8BF317;
    JSL.L Spawn_PaletteFXObject                                          ;8BF31A;
    LDY.W #CinematicSpriteObjectDefinitions_ZebesExplosion_AfterGlow     ;8BF31E;
    LDA.W #$0006                                                         ;8BF321;
    STA.B DP_Temp12                                                      ;8BF324;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF326;
    PLY                                                                  ;8BF329;
    RTS                                                                  ;8BF32A;


;;; $F32B: Instruction - end Zebes explosion ;;;
Instruction_EndZebesExplosion:
    PHY                                                                  ;8BF32B;
    SEP #$20                                                             ;8BF32C;
    STZ.B DP_MainScreenLayers                                            ;8BF32E;
    STZ.B DP_SubScreenLayers                                             ;8BF330;
    REP #$20                                                             ;8BF332;
    LDA.W #$7FFF                                                         ;8BF334;
    STA.L Palettes                                                       ;8BF337;
    STA.L Palettes_SpriteP0                                              ;8BF33B;
    PHX                                                                  ;8BF33F;
    LDX.W #$001E                                                         ;8BF340;

  .loop:
    STA.L Palettes_BG3P4,X                                               ;8BF343;
    DEX                                                                  ;8BF347;
    DEX                                                                  ;8BF348;
    BPL .loop                                                            ;8BF349;
    PLX                                                                  ;8BF34B;
    LDA.W #CinematicFunc_Ending_SpaceView_ChangeMusic                    ;8BF34C;
    STA.W CinematicFunction                                              ;8BF34F;
    LDA.W #$0078                                                         ;8BF352;
    STA.W CinematicFunctionTimer                                         ;8BF355;
    PLY                                                                  ;8BF358;
    RTS                                                                  ;8BF359;


;;; $F35A: Pre-instruction - cinematic sprite object $EEF7 (Zebes explosion - stars - left) ;;;
Instruction_CinematicSpriteObject_ZebesExplosion_Stars_Left:
    LDA.W CinematicFunction                                              ;8BF35A;
    CMP.W #CinematicFunc_Ending_SpaceView_GunshipEmergence_SpinningFast  ;8BF35D;
    BNE .return                                                          ;8BF360;
    LDA.W #PreInst_CineSpriteObject_ZebesExplosion_Stars_Left_Moving     ;8BF362;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF365;
    LDA.W #$4000                                                         ;8BF368;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF36B;
    LDA.W #$0000                                                         ;8BF36E;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BF371;

  .return:
    RTS                                                                  ;8BF374;


;;; $F375: Pre-instruction - Zebes explosion - stars - left - moving ;;;
PreInst_CineSpriteObject_ZebesExplosion_Stars_Left_Moving:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF375;
    CLC                                                                  ;8BF378;
    ADC.W #$FFE0                                                         ;8BF379;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF37C;
    LDA.W CinematicSpriteObject_Timers,X                                 ;8BF37F;
    ADC.W #$FFFF                                                         ;8BF382;
    STA.W CinematicSpriteObject_Timers,X                                 ;8BF385;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BF388;
    CLC                                                                  ;8BF38B;
    ADC.W CinematicSpriteObject_YSubPosition,X                           ;8BF38C;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BF38F;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BF392;
    ADC.W CinematicSpriteObject_Timers,X                                 ;8BF395;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF398; fallthrough to PreInstruction_CineSpriteObject_ZebesExplosion_AfterGlow


;;; $F39B: Pre-instruction - cinematic sprite object $EEC1 (Zebes explosion - afterglow) ;;;
PreInstruction_CineSpriteObject_ZebesExplosion_AfterGlow:
    LDA.W CinematicFunction                                              ;8BF39B;
    CMP.W #RTS_8BDE63                                                    ;8BF39E;
    BNE .return                                                          ;8BF3A1;
    LDA.W #$0001                                                         ;8BF3A3;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF3A6;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BF3A9;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF3AC;

  .return:
    RTS                                                                  ;8BF3AF;


;;; $F3B0: Instruction - spawn 'COMPLETED SUCCESSFULLY' cinematic sprite object ;;;
Instruction_CinematicSpriteObject_SpawnCompletedSuccessfully:
    PHY                                                                  ;8BF3B0;
    LDY.W #CinematicSpriteObjectDefinitions_CompletedSuccessfully        ;8BF3B1;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF3B4;
    PLY                                                                  ;8BF3B7;
    RTS                                                                  ;8BF3B8;


;;; $F3B9: Pre-instruction - cinematic sprite object $EEC7/$EECD/$EEFD/$EF03/$EF09/$EF0F/$EF15/$EF1B (text) ;;;
PreInstruction_CinematicSpriteObject_Text:
    LDA.W CinematicFunction                                              ;8BF3B9;
    CMP.W #CinematicFunction_Credits_Setup                               ;8BF3BC;
    BNE .return                                                          ;8BF3BF;
    LDA.W #$0001                                                         ;8BF3C1;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF3C4;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BF3C7;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF3CA;

  .return:
    RTS                                                                  ;8BF3CD;


;;; $F3CE: Instruction - spawn clear time cinematic sprite object ;;;
Instruction_CinematicSpriteObject_SpawnClearTime:
    PHY                                                                  ;8BF3CE;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime                    ;8BF3CF;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF3D2;
    LDA.W IGTHours                                                       ;8BF3D5;
    STA.W $4204                                                          ;8BF3D8;
    SEP #$20                                                             ;8BF3DB;
    LDA.B #$0A                                                           ;8BF3DD;
    STA.W $4206                                                          ;8BF3DF;
    NOP                                                                  ;8BF3E2;
    NOP                                                                  ;8BF3E3;
    NOP                                                                  ;8BF3E4;
    NOP                                                                  ;8BF3E5;
    NOP                                                                  ;8BF3E6;
    NOP                                                                  ;8BF3E7;
    NOP                                                                  ;8BF3E8;
    REP #$20                                                             ;8BF3E9;
    LDA.W $4214                                                          ;8BF3EB;
    STA.W EndingClearTime_HoursTens                                      ;8BF3EE;
    LDA.W $4216                                                          ;8BF3F1;
    STA.W EndingClearTime_HoursUnits                                     ;8BF3F4;
    LDA.W IGTMinutes                                                     ;8BF3F7;
    STA.W $4204                                                          ;8BF3FA;
    SEP #$20                                                             ;8BF3FD;
    LDA.B #$0A                                                           ;8BF3FF;
    STA.W $4206                                                          ;8BF401;
    NOP                                                                  ;8BF404;
    NOP                                                                  ;8BF405;
    NOP                                                                  ;8BF406;
    NOP                                                                  ;8BF407;
    NOP                                                                  ;8BF408;
    NOP                                                                  ;8BF409;
    NOP                                                                  ;8BF40A;
    REP #$20                                                             ;8BF40B;
    LDA.W $4214                                                          ;8BF40D;
    STA.W EndingClearTime_MinutesTens                                    ;8BF410;
    LDA.W $4216                                                          ;8BF413;
    STA.W EndingClearTime_MinutesUnits                                   ;8BF416;
    PLY                                                                  ;8BF419;
    RTS                                                                  ;8BF41A;


;;; $F41B: Instruction - spawn clear time hours tens digit cinematic sprite object ;;;
Instruction_CineSpriteObject_SpawnClearTime_Hours_TensDigit:
    PHY                                                                  ;8BF41B;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime_Hours_TensDigit    ;8BF41C;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF41F;
    PLY                                                                  ;8BF422;
    RTS                                                                  ;8BF423;


;;; $F424: Instruction - spawn clear time hours units digit cinematic sprite object ;;;
Instruction_CineSpriteObject_SpawnClearTime_Hours_OnesDigit:
    PHY                                                                  ;8BF424;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime_Hours_OnesDigit    ;8BF425;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF428;
    PLY                                                                  ;8BF42B;
    RTS                                                                  ;8BF42C;


;;; $F42D: Instruction - spawn clear time colon cinematic sprite object ;;;
Instruction_CinematicSpriteObject_SpawnClearTime_Colon:
    PHY                                                                  ;8BF42D;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime_Colon              ;8BF42E;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF431;
    PLY                                                                  ;8BF434;
    RTS                                                                  ;8BF435;


;;; $F436: Instruction - spawn clear time minutes tens digit cinematic sprite object ;;;
Inst_CineSpriteObject_SpawnClearTime_Minutes_TensDigit:
    PHY                                                                  ;8BF436;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime_Minutes_TensDigit  ;8BF437;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF43A;
    PLY                                                                  ;8BF43D;
    RTS                                                                  ;8BF43E;


;;; $F43F: Instruction - spawn clear time minutes units digit cinematic sprite object ;;;
Inst_CineSpriteObject_SpawnClearTime_Minutes_OnesDigit:
    PHY                                                                  ;8BF43F;
    LDY.W #CinematicSpriteObjectDefinitions_ClearTime_Minutes_OnesDigit  ;8BF440;
    JSR.W Spawn_CinematicSpriteObject_Y                                  ;8BF443;
    PLY                                                                  ;8BF446;
    RTS                                                                  ;8BF447;


;;; $F448: Instruction - transition to credits ;;;
Instruction_CinematicSpriteObject_TransitionToCredits:
    STZ.W ScreenFadeDelay                                                ;8BF448;
    STZ.W ScreenFadeCounter                                              ;8BF44B;
    LDA.W #CinematicFunction_Ending_SpaceView_GunshipEmergence_Credits   ;8BF44E;
    STA.W CinematicFunction                                              ;8BF451;
    RTS                                                                  ;8BF454;


;;; $F455: Pre-instruction - cinematic sprite object $EED3/$EED9 (yellow clouds - top) ;;;
PreInstruction_CinematicSpriteObject_YellowClouds_Top:
    LDA.W Mode7TransformationZoomLevel                                   ;8BF455;
    CMP.W #$00B0                                                         ;8BF458;
    BPL .return                                                          ;8BF45B;
    LDA.W #PreInstruction_CinematicSpriteObject_YellowClouds_Top_Moving  ;8BF45D;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF460;

  .return:
    RTS                                                                  ;8BF463;


;;; $F464: Pre-instruction - yellow clouds - top - moving ;;;
PreInstruction_CinematicSpriteObject_YellowClouds_Top_Moving:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF464;
    CLC                                                                  ;8BF467;
    ADC.W #$0000                                                         ;8BF468;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF46B;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF46E;
    ADC.W #$0001                                                         ;8BF471;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF474;
    RTS                                                                  ;8BF477;


;;; $F478: Pre-instruction - cinematic sprite object $EEDF/$EEE5 (yellow clouds - bottom) ;;;
PreInstruction_CinematicSpriteObject_YellowClouds_Bottom:
    LDA.W Mode7TransformationZoomLevel                                   ;8BF478;
    CMP.W #$00B0                                                         ;8BF47B;
    BPL .return                                                          ;8BF47E;
    LDA.W #PreInstruction_CineSpriteObject_YellowClouds_Bottom_Moving    ;8BF480;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF483;

  .return:
    RTS                                                                  ;8BF486;


;;; $F487: Pre-instruction - yellow clouds - bottom - moving ;;;
PreInstruction_CineSpriteObject_YellowClouds_Bottom_Moving:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF487;
    SEC                                                                  ;8BF48A;
    SBC.W #$0000                                                         ;8BF48B;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF48E;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF491;
    SBC.W #$0001                                                         ;8BF494;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF497;
    RTS                                                                  ;8BF49A;


;;; $F49B: Pre-instruction - cinematic sprite object $EEEB (yellow clouds - right) ;;;
PreInstruction_CinematicSpriteObject_YellowClouds_Right:
    LDA.W Mode7TransformationZoomLevel                                   ;8BF49B;
    CMP.W #regional($0060, $0038)                                        ;8BF49E;
    BMI .return                                                          ;8BF4A1;
    LDA.W #PreInstruction_CineSpriteObject_YellowClouds_Right_Moving     ;8BF4A3;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF4A6;

  .return:
    RTS                                                                  ;8BF4A9;


;;; $F4AA: Pre-instruction - yellow clouds - right - moving ;;;
PreInstruction_CineSpriteObject_YellowClouds_Right_Moving:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF4AA;
    SEC                                                                  ;8BF4AD;
    SBC.W #$0000                                                         ;8BF4AE;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF4B1;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF4B4;
    SBC.W #$0002                                                         ;8BF4B7;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF4BA;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BF4BD;
    SEC                                                                  ;8BF4C0;
    SBC.W #$0000                                                         ;8BF4C1;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BF4C4;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BF4C7;
    SBC.W #$0001                                                         ;8BF4CA;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF4CD;
    RTS                                                                  ;8BF4D0;


;;; $F4D1: Pre-instruction - cinematic sprite object $EEF1 (yellow clouds - left) ;;;
PreInstruction_CinematicSpriteObject_YellowClouds_Left:
    LDA.W Mode7TransformationZoomLevel                                   ;8BF4D1;
    CMP.W #regional($0060, $0038)                                        ;8BF4D4;
    BMI .return                                                          ;8BF4D7;
    LDA.W #PreInstruction_CineSpriteObject_YellowClouds_Left_Moving      ;8BF4D9;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF4DC;

  .return:
    RTS                                                                  ;8BF4DF;


;;; $F4E0: Pre-instruction - yellow clouds - left - moving ;;;
PreInstruction_CineSpriteObject_YellowClouds_Left_Moving:
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF4E0;
    CLC                                                                  ;8BF4E3;
    ADC.W #$0000                                                         ;8BF4E4;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF4E7;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF4EA;
    ADC.W #$0002                                                         ;8BF4ED;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF4F0;
    LDA.W CinematicSpriteObject_XSubPosition,X                           ;8BF4F3;
    CLC                                                                  ;8BF4F6;
    ADC.W #$0000                                                         ;8BF4F7;
    STA.W CinematicSpriteObject_XSubPosition,X                           ;8BF4FA;
    LDA.W CinematicSpriteObject_XPositions,X                             ;8BF4FD;
    ADC.W #$0001                                                         ;8BF500;
    STA.W CinematicSpriteObject_XPositions,X                             ;8BF503;
    RTS                                                                  ;8BF506;


;;; $F507: Pre-instruction - cinematic sprite object $EF27/$EF2D/$EF45/$EF4B/$EF51 (Samus - idle) ;;;
PreInstruction_CinematicSpriteObject_Samus_Idle:
    LDA.W CinematicFunction                                              ;8BF507;
    CMP.W #RTS_8BDB9D                                                    ;8BF50A;
    BNE .return                                                          ;8BF50D;
    LDA.W #$0001                                                         ;8BF50F;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF512;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BF515;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF518;

  .return:
    RTS                                                                  ;8BF51B;


;;; $F51C: RTS. Pre-instruction - cinematic sprite object $EF33 (suitless Samus - letting hair down) ;;;
RTS_8BF51C:
    RTS                                                                  ;8BF51C;


;;; $F51D: Instruction - spawn suitless Samus jump cinematic sprite object ;;;
Instruction_CinematicSpriteObject_SpawnSuitlessSamusJump:
    PHY                                                                  ;8BF51D;
    LDY.W #CinematicSpriteObjectDefinitions_SuitlessSamus_Jump           ;8BF51E;
    STZ.B DP_Temp12                                                      ;8BF521;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF523;
    PLY                                                                  ;8BF526;
    RTS                                                                  ;8BF527;


;;; $F528: Pre-instruction - Samus - jump - jumping ;;;
Inst_CineSpriteObject_SpawnSuitlessSamus_LettingHairDown:
    JSR.W MoveJumpingEndingSamus                                         ;8BF528;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF52B;
    CMP.W #$FFB0                                                         ;8BF52E;
    BPL .return                                                          ;8BF531;
    SEP #$20                                                             ;8BF533;
    LDA.B #$03                                                           ;8BF535;
    STA.B DP_SpriteSizeAddr                                              ;8BF537;
    REP #$20                                                             ;8BF539;
    LDA.W #$0001                                                         ;8BF53B;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF53E;
    LDA.W #InstList_Samus_Jump_Falling                                   ;8BF541;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF544;
    LDA.W #PreInstruction_CinematicSpriteObject_Samus_Jump_Falling       ;8BF547;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF54A;
    LDA.W #$0C00                                                         ;8BF54D;
    STA.W CinematicSpriteObject_PaletteIndices,X                         ;8BF550;

  .return:
    RTS                                                                  ;8BF553;


;;; $F554: Instruction - spawn suited Samus jump cinematic sprite object ;;;
Instruction_CinematicSpriteObject_SpawnSuitedSamusJump:
    PHY                                                                  ;8BF554;
    LDA.W IGTHours                                                       ;8BF555;
    CMP.W #$000A                                                         ;8BF558;
    BMI .gameTimeUnder10                                                 ;8BF55B;
    LDY.W #CinematicSpriteObjectDefinitions_Jump_Head_Helmet             ;8BF55D;
    LDA.W #$0002                                                         ;8BF560;
    STA.B DP_Temp12                                                      ;8BF563;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF565;
    BRA +                                                                ;8BF568;

  .gameTimeUnder10:
    LDY.W #CinematicSpriteObjectDefinitions_Jump_Head                    ;8BF56A;
    LDA.W #$0002                                                         ;8BF56D;
    STA.B DP_Temp12                                                      ;8BF570;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF572;

+   LDY.W #CinematicSpriteObjectDefinitions_Jump_Body                    ;8BF575;
    STZ.B DP_Temp12                                                      ;8BF578;
    JSR.W Spawn_CinematicSpriteObject_YToIndex12                         ;8BF57A;
    PLY                                                                  ;8BF57D;
    RTS                                                                  ;8BF57E;


;;; $F57F: Pre-instruction - suited Samus - jump - head - jumping ;;;
PreInst_CinematicSpriteObject_SuitedSamus_Jump_Head_Jumping:
    JSR.W MoveJumpingEndingSamus                                         ;8BF57F;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF582;
    CMP.W #$FFB0                                                         ;8BF585;
    BPL .return                                                          ;8BF588;
    LDA.W #$0001                                                         ;8BF58A;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF58D;
    LDA.W #InstList_CinematicSpriteObject_Delete_duplicate               ;8BF590;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF593;

  .return:
    RTS                                                                  ;8BF596;


;;; $F597: Instruction - position Samus head to prepare jump ;;;
Instruction_CineSpriteObject_PositionSuitedHeadToPrepareJump:
    LDA.W IGTHours                                                       ;8BF597;
    CMP.W #$000A                                                         ;8BF59A;
    BMI .gameTimeUnder10                                                 ;8BF59D;
    LDA.W #$0076                                                         ;8BF59F;
    STA.W CinematicSpriteObject_XPositions+2,X                           ;8BF5A2;
    LDA.W #$0078                                                         ;8BF5A5;
    STA.W CinematicSpriteObject_YPositions+2,X                           ;8BF5A8;
    BRA .return                                                          ;8BF5AB;

  .gameTimeUnder10:
    LDA.W #$0078                                                         ;8BF5AD;
    STA.W CinematicSpriteObject_XPositions+2,X                           ;8BF5B0;
    LDA.W #$0078                                                         ;8BF5B3;
    STA.W CinematicSpriteObject_YPositions+2,X                           ;8BF5B6;

  .return:
    RTS                                                                  ;8BF5B9;


;;; $F5BA: Instruction - position Samus head to jump ;;;
Instruction_CinematicSpriteObject_PositionSamusHeadToJump:
    LDA.W IGTHours                                                       ;8BF5BA;
    CMP.W #$000A                                                         ;8BF5BD;
    BMI .gameTimeUnder10                                                 ;8BF5C0;
    LDA.W #$0078                                                         ;8BF5C2;
    STA.W CinematicSpriteObject_XPositions+2,X                           ;8BF5C5;
    LDA.W #$0072                                                         ;8BF5C8;
    STA.W CinematicSpriteObject_YPositions+2,X                           ;8BF5CB;
    BRA .return                                                          ;8BF5CE;

  .gameTimeUnder10:
    LDA.W #$0079                                                         ;8BF5D0;
    STA.W CinematicSpriteObject_XPositions+2,X                           ;8BF5D3;
    LDA.W #$0074                                                         ;8BF5D6;
    STA.W CinematicSpriteObject_YPositions+2,X                           ;8BF5D9;

  .return:
    RTS                                                                  ;8BF5DC;


;;; $F5DD: Pre-instruction - Samus - jump - falling ;;;
PreInstruction_CinematicSpriteObject_Samus_Jump_Falling:
    JSR.W TransferPostCreditsSamusBeamToVRAM                             ;8BF5DD;
    JSR.W MoveJumpingEndingSamus                                         ;8BF5E0;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF5E3;
    CMP.W #$0088                                                         ;8BF5E6;
    BMI .return                                                          ;8BF5E9;
    LDA.W #$0088                                                         ;8BF5EB;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF5EE;
    LDA.W #$0001                                                         ;8BF5F1;
    STA.W CinematicSpriteObject_InstructionTimers,X                      ;8BF5F4;
    LDA.W #InstList_Samus_Jump_Landed                                    ;8BF5F7;
    STA.W CinematicSpriteObject_InstListPointers,X                       ;8BF5FA;
    LDA.W #RTS_8B93D9                                                    ;8BF5FD;
    STA.W CinematicSpriteObject_PreInstructions,X                        ;8BF600;

  .return:
    RTS                                                                  ;8BF603;


;;; $F604: Instruction - Samus shoots screen ;;;
Instruction_CinematicSpriteObject_SamusShootsScreen:
    PHX                                                                  ;8BF604;
    PHY                                                                  ;8BF605;
    LDA.W #$0E00                                                         ;8BF606;
    STA.W CinematicSpriteObject_PaletteIndices,X                         ;8BF609;
    LDA.W #CinematicFunction_PostCredits_SamusShootsScreen               ;8BF60C;
    STA.W CinematicFunction                                              ;8BF60F;
    SEP #$20                                                             ;8BF612;
    LDA.B #$11                                                           ;8BF614;
    STA.B DP_MainScreenLayers                                            ;8BF616;
    LDA.B #$10                                                           ;8BF618;
    STA.B DP_SubScreenLayers                                             ;8BF61A;
    LDA.B #$02                                                           ;8BF61C;
    STA.B DP_ColorMathA                                                  ;8BF61E;
    LDA.B #$81                                                           ;8BF620;
    STA.B DP_ColorMathB                                                  ;8BF622;
    REP #$20                                                             ;8BF624;
    LDA.W #$FFFC                                                         ;8BF626;
    STA.W CinematicBG1_XPosition                                         ;8BF629;
    LDA.W #$FFF8                                                         ;8BF62C;
    STA.W CinematicBG1_YPosition                                         ;8BF62F;
    LDA.W #$0010                                                         ;8BF632;
    STA.W CinematicFunctionTimer                                         ;8BF635;
    LDA.W #$0020                                                         ;8BF638;
    STA.W PostCreditsStarsFadeTimer                                      ;8BF63B;
    STA.W PostCreditsSamusFadeTimer                                      ;8BF63E;
    JSR.W PaletteCrossFading_CopyCurrentPalettesToFadingPalettes         ;8BF641;
    JSR.W PaletteCrossFading_DecomposePaletteDataForFading               ;8BF644;
    LDA.W #$0022                                                         ;8BF647;
    JSL.L QueueSound                                                     ;8BF64A;
    PLY                                                                  ;8BF64E;
    PLX                                                                  ;8BF64F;
    RTS                                                                  ;8BF650;


;;; $F651: Instruction - make ending Samus jump ;;;
Instruction_CinematicSpriteObject_MakeEndingSamusJump:
    STZ.W SamusYSubSpeed                                                 ;8BF651;
    LDA.W #-$0010*!SPF                                                   ;8BF654;
    STA.W SamusYSpeed                                                    ;8BF657;
    RTS                                                                  ;8BF65A;


;;; $F65B: Move jumping ending Samus ;;;
MoveJumpingEndingSamus:
    LDA.W SamusYSubSpeed                                                 ;8BF65B;
    CLC                                                                  ;8BF65E;
    ADC.W #$380*!SPF*$10                                                 ;8BF65F;
    STA.W SamusYSubSpeed                                                 ;8BF662;
    LDA.W SamusYSpeed                                                    ;8BF665;
    ADC.W #$0000                                                         ;8BF668;
    STA.W SamusYSpeed                                                    ;8BF66B;
    LDA.W CinematicSpriteObject_YSubPosition,X                           ;8BF66E;
    CLC                                                                  ;8BF671;
    ADC.W SamusYSubSpeed                                                 ;8BF672;
    STA.W CinematicSpriteObject_YSubPosition,X                           ;8BF675;
    LDA.W CinematicSpriteObject_YPositions,X                             ;8BF678;
    ADC.W SamusYSpeed                                                    ;8BF67B;
    STA.W CinematicSpriteObject_YPositions,X                             ;8BF67E;
    RTS                                                                  ;8BF681;


;;; $F682: Transfer post-credits Samus beam to VRAM ;;;
TransferPostCreditsSamusBeamToVRAM:
    PHX                                                                  ;8BF682;
    PHY                                                                  ;8BF683;
    LDA.W PostCreditsSMIconVRAMTransferIndex                             ;8BF684;
    CMP.W #$0010                                                         ;8BF687;
    BPL .return                                                          ;8BF68A;
    ASL                                                                  ;8BF68C;
    TAY                                                                  ;8BF68D;
    LDX.W VRAMWriteStack                                                 ;8BF68E;
    LDA.W #$0800                                                         ;8BF691;
    STA.B VRAMWrite.size,X                                               ;8BF694;
    INX                                                                  ;8BF696;
    INX                                                                  ;8BF697;
    LDA.W .sourceAddresses,Y                                             ;8BF698;
    STA.B VRAMWrite.size,X                                               ;8BF69B;
    INX                                                                  ;8BF69D;
    INX                                                                  ;8BF69E;
    SEP #$20                                                             ;8BF69F;
    LDA.B #$7F                                                           ;8BF6A1;
    STA.B VRAMWrite.size,X                                               ;8BF6A3;
    REP #$20                                                             ;8BF6A5;
    INX                                                                  ;8BF6A7;
    LDA.W .VRAMAddresses,Y                                               ;8BF6A8;
    STA.B VRAMWrite.size,X                                               ;8BF6AB;
    INX                                                                  ;8BF6AD;
    INX                                                                  ;8BF6AE;
    STX.W VRAMWriteStack                                                 ;8BF6AF;
    INC.W PostCreditsSMIconVRAMTransferIndex                             ;8BF6B2;

  .return:
    PLY                                                                  ;8BF6B5;
    PLX                                                                  ;8BF6B6;
    RTS                                                                  ;8BF6B7;

.sourceAddresses:
    dw $4000,$4800,$5000,$5800,$6000,$6800,$7000,$7800                   ;8BF6B8;
    dw $8000,$8800,$9000,$9800,$A000,$A800,$B000,$B800                   ;8BF6C8;

.VRAMAddresses:
    dw $0000,$0400,$0800,$0C00,$1000,$1400,$1800,$1C00                   ;8BF6D8;
    dw $2000,$2400,$2800,$2C00,$3000,$3400,$3800,$3C00                   ;8BF6E8;


;;; $F6F8: Credits object definition ;;;
CreditsObjectDefinition:
    dw RTS_8B93D9                                                        ;8BF6F8; Initialisation function
    dw RTS_8B93D9                                                        ;8BF6FA; Pre-instruction
    dw InstList_Credits_Start                                            ;8BF6FC; Instruction list (bank $8C)


;;; $F6FE: Instruction - end credits ;;;
Instruction_EndCredits:
    PHP                                                                  ;8BF6FE;
    PHB                                                                  ;8BF6FF;
    PHK                                                                  ;8BF700;
    PLB                                                                  ;8BF701;
    REP #$30                                                             ;8BF702;
    PHX                                                                  ;8BF704;
    PHY                                                                  ;8BF705;
    JSR.W Disable_CreditsObject                                          ;8BF706;
    LDX.W #$0008                                                         ;8BF709;

  .loop:
    LDA.L Palettes_PostCredits,X                                         ;8BF70C;
    STA.L Palettes,X                                                     ;8BF710;
    INX                                                                  ;8BF714;
    INX                                                                  ;8BF715;
    CPX.W #$0200                                                         ;8BF716;
    BMI .loop                                                            ;8BF719;
    SEP #$20                                                             ;8BF71B;
    STZ.B DP_MainScreenLayers                                            ;8BF71D;
    LDA.B #$80                                                           ;8BF71F;
    STA.B DP_Brightness                                                  ;8BF721;
    REP #$20                                                             ;8BF723;
    STZ.W ScreenFadeDelay                                                ;8BF725;
    STZ.W ScreenFadeCounter                                              ;8BF728;
    STZ.W CinematicBG1_YSubPosition                                      ;8BF72B;
    STZ.W CinematicBG1_YPosition                                         ;8BF72E;
    LDA.W #$0001                                                         ;8BF731;
    STA.W CreditsObject_ShootingStarsEnable                              ;8BF734;
    LDA.W #CinematicFunction_PostCredits_BlankScreen                     ;8BF737;
    STA.W CinematicFunction                                              ;8BF73A;
    LDA.W #$003C                                                         ;8BF73D;
    STA.W CinematicFunctionTimer                                         ;8BF740;
    PLY                                                                  ;8BF743;
    PLX                                                                  ;8BF744;
    PLB                                                                  ;8BF745;
    PLP                                                                  ;8BF746;
    RTS                                                                  ;8BF747;


;;; $F748: Cinematic BG object definitions - post-credits ;;;
CinematicBGObjectDefinitions_PostCredits_SeeYouNextMission:
    dw RTS_8B93D9                                                        ;8BF748; Initialisation function
    dw RTS_8B93D9                                                        ;8BF74A; Pre-instruction
    dw CinematicBGObjectInstLists_Ending_SeeYouNextMission               ;8BF74C; Instruction list (bank $8C)

CinematicBGObjectDefinitions_PostCredits_ItemPercentage:
    dw RTS_8B93D9                                                        ;8BF74E; Initialisation function
    dw RTS_8B93D9                                                        ;8BF750; Pre-instruction
    dw CinematicBGObjectInstLists_Ending_ItemPercentage                  ;8BF752; Instruction list (bank $8C)


if !DEBUG
;;; $F754: Debug. Version string ;;;
Debug_VersionString:
if !PAL == 0
    db "02.02.21.30", $00                                                ;8BF754;
else
    db "03.30.10.00", $00
endif
endif


Freespace_Bank8B_F760:                                                   ;8BF760;
; $8A0 bytes
